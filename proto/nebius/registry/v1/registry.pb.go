// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/registry/v1/registry.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryStatus_State int32

const (
	RegistryStatus_CREATING  RegistryStatus_State = 0
	RegistryStatus_ACTIVE    RegistryStatus_State = 1
	RegistryStatus_DELETING  RegistryStatus_State = 2
	RegistryStatus_SUSPENDED RegistryStatus_State = 3
)

// Enum value maps for RegistryStatus_State.
var (
	RegistryStatus_State_name = map[int32]string{
		0: "CREATING",
		1: "ACTIVE",
		2: "DELETING",
		3: "SUSPENDED",
	}
	RegistryStatus_State_value = map[string]int32{
		"CREATING":  0,
		"ACTIVE":    1,
		"DELETING":  2,
		"SUSPENDED": 3,
	}
)

func (x RegistryStatus_State) Enum() *RegistryStatus_State {
	p := new(RegistryStatus_State)
	*p = x
	return p
}

func (x RegistryStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_registry_v1_registry_proto_enumTypes[0].Descriptor()
}

func (RegistryStatus_State) Type() protoreflect.EnumType {
	return &file_nebius_registry_v1_registry_proto_enumTypes[0]
}

func (x RegistryStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryStatus_State.Descriptor instead.
func (RegistryStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_registry_v1_registry_proto_rawDescGZIP(), []int{2, 0}
}

type Registry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is metadata about the resource, such as its id, name, labels, etc.
	// This contains fields that may be updated both by the end user and the system.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// This is defined by the user and describes the desired state of system.
	// Fill this in when creating or updating an object.
	Spec *RegistrySpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// This is filled in by the server and reports the current state of the system.
	Status        *RegistryStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_nebius_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *Registry) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Registry) GetSpec() *RegistrySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Registry) GetStatus() *RegistryStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type RegistrySpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ImagesCount   int32                  `protobuf:"varint,2,opt,name=images_count,json=imagesCount,proto3" json:"images_count,omitempty"` // Registry.Type type = 2;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrySpec) Reset() {
	*x = RegistrySpec{}
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrySpec) ProtoMessage() {}

func (x *RegistrySpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrySpec.ProtoReflect.Descriptor instead.
func (*RegistrySpec) Descriptor() ([]byte, []int) {
	return file_nebius_registry_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *RegistrySpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegistrySpec) GetImagesCount() int32 {
	if x != nil {
		return x.ImagesCount
	}
	return 0
}

type RegistryStatus struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	State       RegistryStatus_State   `protobuf:"varint,10,opt,name=state,proto3,enum=nebius.registry.v1.RegistryStatus_State" json:"state,omitempty"`
	ImagesCount int32                  `protobuf:"varint,11,opt,name=images_count,json=imagesCount,proto3" json:"images_count,omitempty"`
	// regional fqdn "cr.eu-north1.nebius.cloud"
	RegistryFqdn  string `protobuf:"bytes,15,opt,name=registry_fqdn,json=registryFqdn,proto3" json:"registry_fqdn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryStatus) Reset() {
	*x = RegistryStatus{}
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryStatus) ProtoMessage() {}

func (x *RegistryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_registry_v1_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryStatus.ProtoReflect.Descriptor instead.
func (*RegistryStatus) Descriptor() ([]byte, []int) {
	return file_nebius_registry_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *RegistryStatus) GetState() RegistryStatus_State {
	if x != nil {
		return x.State
	}
	return RegistryStatus_CREATING
}

func (x *RegistryStatus) GetImagesCount() int32 {
	if x != nil {
		return x.ImagesCount
	}
	return 0
}

func (x *RegistryStatus) GetRegistryFqdn() string {
	if x != nil {
		return x.RegistryFqdn
	}
	return ""
}

var File_nebius_registry_v1_registry_proto protoreflect.FileDescriptor

const file_nebius_registry_v1_registry_proto_rawDesc = "" +
	"\n" +
	"!nebius/registry/v1/registry.proto\x12\x12nebius.registry.v1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\"\xd2\x01\n" +
	"\bRegistry\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12<\n" +
	"\x04spec\x18\x02 \x01(\v2 .nebius.registry.v1.RegistrySpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12@\n" +
	"\x06status\x18\x03 \x01(\v2\".nebius.registry.v1.RegistryStatusB\x04\xbaJ\x01\x05R\x06status\"Y\n" +
	"\fRegistrySpec\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12'\n" +
	"\fimages_count\x18\x02 \x01(\x05B\x04\xbaJ\x01\x05R\vimagesCount\"\xd8\x01\n" +
	"\x0eRegistryStatus\x12>\n" +
	"\x05state\x18\n" +
	" \x01(\x0e2(.nebius.registry.v1.RegistryStatus.StateR\x05state\x12!\n" +
	"\fimages_count\x18\v \x01(\x05R\vimagesCount\x12#\n" +
	"\rregistry_fqdn\x18\x0f \x01(\tR\fregistryFqdn\">\n" +
	"\x05State\x12\f\n" +
	"\bCREATING\x10\x00\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x01\x12\f\n" +
	"\bDELETING\x10\x02\x12\r\n" +
	"\tSUSPENDED\x10\x03B^\n" +
	"\x19ai.nebius.pub.registry.v1B\rRegistryProtoP\x01Z0github.com/nebius/gosdk/proto/nebius/registry/v1b\x06proto3"

var (
	file_nebius_registry_v1_registry_proto_rawDescOnce sync.Once
	file_nebius_registry_v1_registry_proto_rawDescData []byte
)

func file_nebius_registry_v1_registry_proto_rawDescGZIP() []byte {
	file_nebius_registry_v1_registry_proto_rawDescOnce.Do(func() {
		file_nebius_registry_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_registry_v1_registry_proto_rawDesc), len(file_nebius_registry_v1_registry_proto_rawDesc)))
	})
	return file_nebius_registry_v1_registry_proto_rawDescData
}

var file_nebius_registry_v1_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_registry_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nebius_registry_v1_registry_proto_goTypes = []any{
	(RegistryStatus_State)(0),   // 0: nebius.registry.v1.RegistryStatus.State
	(*Registry)(nil),            // 1: nebius.registry.v1.Registry
	(*RegistrySpec)(nil),        // 2: nebius.registry.v1.RegistrySpec
	(*RegistryStatus)(nil),      // 3: nebius.registry.v1.RegistryStatus
	(*v1.ResourceMetadata)(nil), // 4: nebius.common.v1.ResourceMetadata
}
var file_nebius_registry_v1_registry_proto_depIdxs = []int32{
	4, // 0: nebius.registry.v1.Registry.metadata:type_name -> nebius.common.v1.ResourceMetadata
	2, // 1: nebius.registry.v1.Registry.spec:type_name -> nebius.registry.v1.RegistrySpec
	3, // 2: nebius.registry.v1.Registry.status:type_name -> nebius.registry.v1.RegistryStatus
	0, // 3: nebius.registry.v1.RegistryStatus.state:type_name -> nebius.registry.v1.RegistryStatus.State
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nebius_registry_v1_registry_proto_init() }
func file_nebius_registry_v1_registry_proto_init() {
	if File_nebius_registry_v1_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_registry_v1_registry_proto_rawDesc), len(file_nebius_registry_v1_registry_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_registry_v1_registry_proto_goTypes,
		DependencyIndexes: file_nebius_registry_v1_registry_proto_depIdxs,
		EnumInfos:         file_nebius_registry_v1_registry_proto_enumTypes,
		MessageInfos:      file_nebius_registry_v1_registry_proto_msgTypes,
	}.Build()
	File_nebius_registry_v1_registry_proto = out.File
	file_nebius_registry_v1_registry_proto_goTypes = nil
	file_nebius_registry_v1_registry_proto_depIdxs = nil
}
