// Code generated by protoc-gen-sensitive. DO NOT EDIT.

package v1

import (
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	slog "log/slog"
)

// func (x *GetOperationRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetOperationRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ListOperationsRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ListOperationsRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [ListOperationsResponse] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
//
// It also sanitizes the content of google.protobuf.Any, i.e. performs unmarshal, sanitize, marshal cycle.
// Important: [proto.UnmarshalOptions.DiscardUnknown] = true is used.
// In case of an error, the content of Any is replaced with google.protobuf.Empty.
func (x *ListOperationsResponse) Sanitize() {
	if x == nil {
		return
	}
	for _, y := range x.Operations {
		y.Sanitize()
	}
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListOperationsResponse].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// It also sanitizes the content of google.protobuf.Any, i.e. performs unmarshal, sanitize, marshal cycle.
// Important: [proto.UnmarshalOptions.DiscardUnknown] = true is used.
// In case of an error, the content of Any is replaced with google.protobuf.Empty.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListOperationsResponse
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListOperationsResponse], use the following code:
//
//	var original *ListOperationsResponse
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListOperationsResponse)
func (x *ListOperationsResponse) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListOperationsResponse) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListOperationsResponse)(c))
}

// wrapperListOperationsResponse is used to return [ListOperationsResponse] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListOperationsResponse ListOperationsResponse

func (w *wrapperListOperationsResponse) String() string {
	return (*ListOperationsResponse)(w).String()
}

func (*wrapperListOperationsResponse) ProtoMessage() {}

func (w *wrapperListOperationsResponse) ProtoReflect() protoreflect.Message {
	return (*ListOperationsResponse)(w).ProtoReflect()
}
