// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// nebius/common/error/v1alpha1/error.proto is a deprecated file.

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
type ServiceError_RetryType int32

const (
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ServiceError_UNSPECIFIED ServiceError_RetryType = 0
	// Just retry the failed call.
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ServiceError_CALL ServiceError_RetryType = 1
	// Retry whole logic before call and make a new one.
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ServiceError_UNIT_OF_WORK ServiceError_RetryType = 2
	// Do not retry, this is a fatal error.
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ServiceError_NOTHING ServiceError_RetryType = 3
)

// Enum value maps for ServiceError_RetryType.
var (
	ServiceError_RetryType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CALL",
		2: "UNIT_OF_WORK",
		3: "NOTHING",
	}
	ServiceError_RetryType_value = map[string]int32{
		"UNSPECIFIED":  0,
		"CALL":         1,
		"UNIT_OF_WORK": 2,
		"NOTHING":      3,
	}
)

func (x ServiceError_RetryType) Enum() *ServiceError_RetryType {
	p := new(ServiceError_RetryType)
	*p = x
	return p
}

func (x ServiceError_RetryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceError_RetryType) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_common_error_v1alpha1_error_proto_enumTypes[0].Descriptor()
}

func (ServiceError_RetryType) Type() protoreflect.EnumType {
	return &file_nebius_common_error_v1alpha1_error_proto_enumTypes[0]
}

func (x ServiceError_RetryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceError_RetryType.Descriptor instead.
func (ServiceError_RetryType) EnumDescriptor() ([]byte, []int) {
	return file_nebius_common_error_v1alpha1_error_proto_rawDescGZIP(), []int{0, 0}
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
type ServiceError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of Service which the error originated in. E.g. "dns".
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// Detailed error code, service-specific. E.g. "DnsZoneNotEmpty".
	// Name of the exception, without Exception suffix if not set
	// Example: for PermissionDeniedException -> code == PermissionDenied
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Additional message describing the error, if any.
	//
	// Types that are valid to be assigned to Details:
	//
	//	*ServiceError_BadRequest
	//	*ServiceError_BadResourceState
	//	*ServiceError_ResourceNotFound
	//	*ServiceError_ResourceAlreadyExists
	//	*ServiceError_OutOfRange
	//	*ServiceError_PermissionDenied
	//	*ServiceError_ResourceConflict
	//	*ServiceError_OperationAborted
	//	*ServiceError_TooManyRequests
	//	*ServiceError_QuotaFailure
	//	*ServiceError_InternalError
	Details isServiceError_Details `protobuf_oneof:"details"`
	// Retry type tells how to provide retry, e.g.: just a single call or the whole logic before it.
	//
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	RetryType     ServiceError_RetryType `protobuf:"varint,30,opt,name=retry_type,json=retryType,proto3,enum=nebius.common.error.v1alpha1.ServiceError_RetryType" json:"retry_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceError) Reset() {
	*x = ServiceError{}
	mi := &file_nebius_common_error_v1alpha1_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceError) ProtoMessage() {}

func (x *ServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_common_error_v1alpha1_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceError.ProtoReflect.Descriptor instead.
func (*ServiceError) Descriptor() ([]byte, []int) {
	return file_nebius_common_error_v1alpha1_error_proto_rawDescGZIP(), []int{0}
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ServiceError) GetDetails() isServiceError_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetBadRequest() *BadRequest {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_BadRequest); ok {
			return x.BadRequest
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetBadResourceState() *BadResourceState {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_BadResourceState); ok {
			return x.BadResourceState
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetResourceNotFound() *ResourceNotFound {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_ResourceNotFound); ok {
			return x.ResourceNotFound
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetResourceAlreadyExists() *ResourceAlreadyExists {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_ResourceAlreadyExists); ok {
			return x.ResourceAlreadyExists
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetOutOfRange() *OutOfRange {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_OutOfRange); ok {
			return x.OutOfRange
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetPermissionDenied() *PermissionDenied {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_PermissionDenied); ok {
			return x.PermissionDenied
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetResourceConflict() *ResourceConflict {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_ResourceConflict); ok {
			return x.ResourceConflict
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetOperationAborted() *OperationAborted {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_OperationAborted); ok {
			return x.OperationAborted
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetTooManyRequests() *TooManyRequests {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_TooManyRequests); ok {
			return x.TooManyRequests
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetQuotaFailure() *QuotaFailure {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_QuotaFailure); ok {
			return x.QuotaFailure
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetInternalError() *InternalError {
	if x != nil {
		if x, ok := x.Details.(*ServiceError_InternalError); ok {
			return x.InternalError
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
func (x *ServiceError) GetRetryType() ServiceError_RetryType {
	if x != nil {
		return x.RetryType
	}
	return ServiceError_UNSPECIFIED
}

type isServiceError_Details interface {
	isServiceError_Details()
}

type ServiceError_BadRequest struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	BadRequest *BadRequest `protobuf:"bytes,100,opt,name=bad_request,json=badRequest,proto3,oneof"`
}

type ServiceError_BadResourceState struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	BadResourceState *BadResourceState `protobuf:"bytes,110,opt,name=bad_resource_state,json=badResourceState,proto3,oneof"`
}

type ServiceError_ResourceNotFound struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ResourceNotFound *ResourceNotFound `protobuf:"bytes,111,opt,name=resource_not_found,json=resourceNotFound,proto3,oneof"`
}

type ServiceError_ResourceAlreadyExists struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ResourceAlreadyExists *ResourceAlreadyExists `protobuf:"bytes,112,opt,name=resource_already_exists,json=resourceAlreadyExists,proto3,oneof"`
}

type ServiceError_OutOfRange struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	OutOfRange *OutOfRange `protobuf:"bytes,113,opt,name=out_of_range,json=outOfRange,proto3,oneof"`
}

type ServiceError_PermissionDenied struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	PermissionDenied *PermissionDenied `protobuf:"bytes,120,opt,name=permission_denied,json=permissionDenied,proto3,oneof"`
}

type ServiceError_ResourceConflict struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	ResourceConflict *ResourceConflict `protobuf:"bytes,130,opt,name=resource_conflict,json=resourceConflict,proto3,oneof"`
}

type ServiceError_OperationAborted struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	OperationAborted *OperationAborted `protobuf:"bytes,131,opt,name=operation_aborted,json=operationAborted,proto3,oneof"`
}

type ServiceError_TooManyRequests struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	TooManyRequests *TooManyRequests `protobuf:"bytes,140,opt,name=too_many_requests,json=tooManyRequests,proto3,oneof"`
}

type ServiceError_QuotaFailure struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	QuotaFailure *QuotaFailure `protobuf:"bytes,141,opt,name=quota_failure,json=quotaFailure,proto3,oneof"`
}

type ServiceError_InternalError struct {
	// Deprecated: The entire proto file nebius/common/error/v1alpha1/error.proto is marked as deprecated.
	InternalError *InternalError `protobuf:"bytes,999,opt,name=internal_error,json=internalError,proto3,oneof"`
}

func (*ServiceError_BadRequest) isServiceError_Details() {}

func (*ServiceError_BadResourceState) isServiceError_Details() {}

func (*ServiceError_ResourceNotFound) isServiceError_Details() {}

func (*ServiceError_ResourceAlreadyExists) isServiceError_Details() {}

func (*ServiceError_OutOfRange) isServiceError_Details() {}

func (*ServiceError_PermissionDenied) isServiceError_Details() {}

func (*ServiceError_ResourceConflict) isServiceError_Details() {}

func (*ServiceError_OperationAborted) isServiceError_Details() {}

func (*ServiceError_TooManyRequests) isServiceError_Details() {}

func (*ServiceError_QuotaFailure) isServiceError_Details() {}

func (*ServiceError_InternalError) isServiceError_Details() {}

var File_nebius_common_error_v1alpha1_error_proto protoreflect.FileDescriptor

var file_nebius_common_error_v1alpha1_error_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x6e, 0x65, 0x62, 0x69,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x30, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x09, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x62, 0x61, 0x64,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x12, 0x62, 0x61, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x42, 0x61, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x62, 0x61, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x15,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x69,
	0x65, 0x64, 0x12, 0x5e, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x12, 0x5e, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x5c, 0x0a, 0x11, 0x74, 0x6f, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f,
	0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52,
	0x0f, 0x74, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x52, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0xe7, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x0a, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x45, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f,
	0x54, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x3a, 0x02, 0x18, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x72, 0x0a, 0x23, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67,
	0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xb8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_nebius_common_error_v1alpha1_error_proto_rawDescOnce sync.Once
	file_nebius_common_error_v1alpha1_error_proto_rawDescData []byte
)

func file_nebius_common_error_v1alpha1_error_proto_rawDescGZIP() []byte {
	file_nebius_common_error_v1alpha1_error_proto_rawDescOnce.Do(func() {
		file_nebius_common_error_v1alpha1_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_common_error_v1alpha1_error_proto_rawDesc), len(file_nebius_common_error_v1alpha1_error_proto_rawDesc)))
	})
	return file_nebius_common_error_v1alpha1_error_proto_rawDescData
}

var file_nebius_common_error_v1alpha1_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_common_error_v1alpha1_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_nebius_common_error_v1alpha1_error_proto_goTypes = []any{
	(ServiceError_RetryType)(0),   // 0: nebius.common.error.v1alpha1.ServiceError.RetryType
	(*ServiceError)(nil),          // 1: nebius.common.error.v1alpha1.ServiceError
	(*BadRequest)(nil),            // 2: nebius.common.error.v1alpha1.BadRequest
	(*BadResourceState)(nil),      // 3: nebius.common.error.v1alpha1.BadResourceState
	(*ResourceNotFound)(nil),      // 4: nebius.common.error.v1alpha1.ResourceNotFound
	(*ResourceAlreadyExists)(nil), // 5: nebius.common.error.v1alpha1.ResourceAlreadyExists
	(*OutOfRange)(nil),            // 6: nebius.common.error.v1alpha1.OutOfRange
	(*PermissionDenied)(nil),      // 7: nebius.common.error.v1alpha1.PermissionDenied
	(*ResourceConflict)(nil),      // 8: nebius.common.error.v1alpha1.ResourceConflict
	(*OperationAborted)(nil),      // 9: nebius.common.error.v1alpha1.OperationAborted
	(*TooManyRequests)(nil),       // 10: nebius.common.error.v1alpha1.TooManyRequests
	(*QuotaFailure)(nil),          // 11: nebius.common.error.v1alpha1.QuotaFailure
	(*InternalError)(nil),         // 12: nebius.common.error.v1alpha1.InternalError
}
var file_nebius_common_error_v1alpha1_error_proto_depIdxs = []int32{
	2,  // 0: nebius.common.error.v1alpha1.ServiceError.bad_request:type_name -> nebius.common.error.v1alpha1.BadRequest
	3,  // 1: nebius.common.error.v1alpha1.ServiceError.bad_resource_state:type_name -> nebius.common.error.v1alpha1.BadResourceState
	4,  // 2: nebius.common.error.v1alpha1.ServiceError.resource_not_found:type_name -> nebius.common.error.v1alpha1.ResourceNotFound
	5,  // 3: nebius.common.error.v1alpha1.ServiceError.resource_already_exists:type_name -> nebius.common.error.v1alpha1.ResourceAlreadyExists
	6,  // 4: nebius.common.error.v1alpha1.ServiceError.out_of_range:type_name -> nebius.common.error.v1alpha1.OutOfRange
	7,  // 5: nebius.common.error.v1alpha1.ServiceError.permission_denied:type_name -> nebius.common.error.v1alpha1.PermissionDenied
	8,  // 6: nebius.common.error.v1alpha1.ServiceError.resource_conflict:type_name -> nebius.common.error.v1alpha1.ResourceConflict
	9,  // 7: nebius.common.error.v1alpha1.ServiceError.operation_aborted:type_name -> nebius.common.error.v1alpha1.OperationAborted
	10, // 8: nebius.common.error.v1alpha1.ServiceError.too_many_requests:type_name -> nebius.common.error.v1alpha1.TooManyRequests
	11, // 9: nebius.common.error.v1alpha1.ServiceError.quota_failure:type_name -> nebius.common.error.v1alpha1.QuotaFailure
	12, // 10: nebius.common.error.v1alpha1.ServiceError.internal_error:type_name -> nebius.common.error.v1alpha1.InternalError
	0,  // 11: nebius.common.error.v1alpha1.ServiceError.retry_type:type_name -> nebius.common.error.v1alpha1.ServiceError.RetryType
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_nebius_common_error_v1alpha1_error_proto_init() }
func file_nebius_common_error_v1alpha1_error_proto_init() {
	if File_nebius_common_error_v1alpha1_error_proto != nil {
		return
	}
	file_nebius_common_error_v1alpha1_common_errors_proto_init()
	file_nebius_common_error_v1alpha1_error_proto_msgTypes[0].OneofWrappers = []any{
		(*ServiceError_BadRequest)(nil),
		(*ServiceError_BadResourceState)(nil),
		(*ServiceError_ResourceNotFound)(nil),
		(*ServiceError_ResourceAlreadyExists)(nil),
		(*ServiceError_OutOfRange)(nil),
		(*ServiceError_PermissionDenied)(nil),
		(*ServiceError_ResourceConflict)(nil),
		(*ServiceError_OperationAborted)(nil),
		(*ServiceError_TooManyRequests)(nil),
		(*ServiceError_QuotaFailure)(nil),
		(*ServiceError_InternalError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_common_error_v1alpha1_error_proto_rawDesc), len(file_nebius_common_error_v1alpha1_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_common_error_v1alpha1_error_proto_goTypes,
		DependencyIndexes: file_nebius_common_error_v1alpha1_error_proto_depIdxs,
		EnumInfos:         file_nebius_common_error_v1alpha1_error_proto_enumTypes,
		MessageInfos:      file_nebius_common_error_v1alpha1_error_proto_msgTypes,
	}.Build()
	File_nebius_common_error_v1alpha1_error_proto = out.File
	file_nebius_common_error_v1alpha1_error_proto_goTypes = nil
	file_nebius_common_error_v1alpha1_error_proto_depIdxs = nil
}
