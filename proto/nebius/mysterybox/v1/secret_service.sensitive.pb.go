// Code generated by protoc-gen-sensitive. DO NOT EDIT.

package v1

import (
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	slog "log/slog"
)

// Sanitize mutates [CreateSecretRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *CreateSecretRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [CreateSecretRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *CreateSecretRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [CreateSecretRequest], use the following code:
//
//	var original *CreateSecretRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*CreateSecretRequest)
func (x *CreateSecretRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*CreateSecretRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperCreateSecretRequest)(c))
}

// wrapperCreateSecretRequest is used to return [CreateSecretRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperCreateSecretRequest CreateSecretRequest

func (w *wrapperCreateSecretRequest) String() string {
	return (*CreateSecretRequest)(w).String()
}

func (*wrapperCreateSecretRequest) ProtoMessage() {}

func (w *wrapperCreateSecretRequest) ProtoReflect() protoreflect.Message {
	return (*CreateSecretRequest)(w).ProtoReflect()
}

// Sanitize mutates [UpdateSecretRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *UpdateSecretRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [UpdateSecretRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *UpdateSecretRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [UpdateSecretRequest], use the following code:
//
//	var original *UpdateSecretRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*UpdateSecretRequest)
func (x *UpdateSecretRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*UpdateSecretRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperUpdateSecretRequest)(c))
}

// wrapperUpdateSecretRequest is used to return [UpdateSecretRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperUpdateSecretRequest UpdateSecretRequest

func (w *wrapperUpdateSecretRequest) String() string {
	return (*UpdateSecretRequest)(w).String()
}

func (*wrapperUpdateSecretRequest) ProtoMessage() {}

func (w *wrapperUpdateSecretRequest) ProtoReflect() protoreflect.Message {
	return (*UpdateSecretRequest)(w).ProtoReflect()
}

// func (x *GetSecretRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetSecretRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *GetSecretByNameRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetSecretByNameRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ListSecretsRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ListSecretsRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [ListSecretsResponse] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *ListSecretsResponse) Sanitize() {
	if x == nil {
		return
	}
	for _, y := range x.Items {
		y.Sanitize()
	}
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListSecretsResponse].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListSecretsResponse
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListSecretsResponse], use the following code:
//
//	var original *ListSecretsResponse
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListSecretsResponse)
func (x *ListSecretsResponse) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListSecretsResponse) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListSecretsResponse)(c))
}

// wrapperListSecretsResponse is used to return [ListSecretsResponse] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListSecretsResponse ListSecretsResponse

func (w *wrapperListSecretsResponse) String() string {
	return (*ListSecretsResponse)(w).String()
}

func (*wrapperListSecretsResponse) ProtoMessage() {}

func (w *wrapperListSecretsResponse) ProtoReflect() protoreflect.Message {
	return (*ListSecretsResponse)(w).ProtoReflect()
}

// func (x *DeleteSecretRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeleteSecretRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *UndeleteSecretRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *UndeleteSecretRequest) LogValue() slog.Value // is not generated as no sensitive fields found
