// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/msp/spark/v1alpha1/session_service.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the session to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSessionByNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Parent ID of the session to retrieve.
	ParentId string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Name of the session to retrieve.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionByNameRequest) Reset() {
	*x = GetSessionByNameRequest{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionByNameRequest) ProtoMessage() {}

func (x *GetSessionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionByNameRequest.ProtoReflect.Descriptor instead.
func (*GetSessionByNameRequest) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetSessionByNameRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GetSessionByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListSessionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of IAM container to list sessions from.
	ParentId string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Specifies the maximum number of items to return in the response. Default value is 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for pagination, allowing the retrieval of the next set of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSessionsRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListSessionsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSessionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSessionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of sessions.
	Items []*Session `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Token for pagination, indicating the next set of results can be retrieved using this token.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListSessionsResponse) GetItems() []*Session {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSessionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type CreateSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata associated with the new session. Must include parent_id - ID of the cluster to create session in.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Specification for the new session.
	Spec          *SessionSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSessionRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateSessionRequest) GetSpec() *SessionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the session to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_nebius_msp_spark_v1alpha1_session_service_proto protoreflect.FileDescriptor

const file_nebius_msp_spark_v1alpha1_session_service_proto_rawDesc = "" +
	"\n" +
	"/nebius/msp/spark/v1alpha1/session_service.proto\x12\x19nebius.msp.spark.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a nebius/common/v1/operation.proto\x1a\x18nebius/annotations.proto\x1a'nebius/msp/spark/v1alpha1/session.proto\"+\n" +
	"\x11GetSessionRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\"Z\n" +
	"\x17GetSessionByNameRequest\x12#\n" +
	"\tparent_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bparentId\x12\x1a\n" +
	"\x04name\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04name\"\x7f\n" +
	"\x13ListSessionsRequest\x12#\n" +
	"\tparent_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bparentId\x12$\n" +
	"\tpage_size\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x91\x01\n" +
	"\x14ListSessionsResponse\x128\n" +
	"\x05items\x18\x01 \x03(\v2\".nebius.msp.spark.v1alpha1.SessionR\x05items\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tH\x00R\rnextPageToken\x88\x01\x01B\x12\n" +
	"\x10_next_page_token\"\xaa\x02\n" +
	"\x14CreateSessionRequest\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12B\n" +
	"\x04spec\x18\x02 \x01(\v2&.nebius.msp.spark.v1alpha1.SessionSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec:\x85\x01\xbaH\x81\x01\x1a\x7f\n" +
	"\x17create_session.metadata\x12+'metadata' must have 'parent_id' and 'name'\x1a7has(this.metadata.parent_id) && has(this.metadata.name)\".\n" +
	"\x14DeleteSessionRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id2\xf2\x03\n" +
	"\x0eSessionService\x12W\n" +
	"\x03Get\x12,.nebius.msp.spark.v1alpha1.GetSessionRequest\x1a\".nebius.msp.spark.v1alpha1.Session\x12c\n" +
	"\tGetByName\x122.nebius.msp.spark.v1alpha1.GetSessionByNameRequest\x1a\".nebius.msp.spark.v1alpha1.Session\x12g\n" +
	"\x04List\x12..nebius.msp.spark.v1alpha1.ListSessionsRequest\x1a/.nebius.msp.spark.v1alpha1.ListSessionsResponse\x12V\n" +
	"\x06Create\x12/.nebius.msp.spark.v1alpha1.CreateSessionRequest\x1a\x1b.nebius.common.v1.Operation\x12V\n" +
	"\x06Delete\x12/.nebius.msp.spark.v1alpha1.DeleteSessionRequest\x1a\x1b.nebius.common.v1.Operation\x1a\t\xbaJ\x06sp.mspBr\n" +
	" ai.nebius.pub.msp.spark.v1alpha1B\x13SessionServiceProtoP\x01Z7github.com/nebius/gosdk/proto/nebius/msp/spark/v1alpha1b\x06proto3"

var (
	file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescOnce sync.Once
	file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescData []byte
)

func file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescGZIP() []byte {
	file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescOnce.Do(func() {
		file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_msp_spark_v1alpha1_session_service_proto_rawDesc), len(file_nebius_msp_spark_v1alpha1_session_service_proto_rawDesc)))
	})
	return file_nebius_msp_spark_v1alpha1_session_service_proto_rawDescData
}

var file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nebius_msp_spark_v1alpha1_session_service_proto_goTypes = []any{
	(*GetSessionRequest)(nil),       // 0: nebius.msp.spark.v1alpha1.GetSessionRequest
	(*GetSessionByNameRequest)(nil), // 1: nebius.msp.spark.v1alpha1.GetSessionByNameRequest
	(*ListSessionsRequest)(nil),     // 2: nebius.msp.spark.v1alpha1.ListSessionsRequest
	(*ListSessionsResponse)(nil),    // 3: nebius.msp.spark.v1alpha1.ListSessionsResponse
	(*CreateSessionRequest)(nil),    // 4: nebius.msp.spark.v1alpha1.CreateSessionRequest
	(*DeleteSessionRequest)(nil),    // 5: nebius.msp.spark.v1alpha1.DeleteSessionRequest
	(*Session)(nil),                 // 6: nebius.msp.spark.v1alpha1.Session
	(*v1.ResourceMetadata)(nil),     // 7: nebius.common.v1.ResourceMetadata
	(*SessionSpec)(nil),             // 8: nebius.msp.spark.v1alpha1.SessionSpec
	(*v1.Operation)(nil),            // 9: nebius.common.v1.Operation
}
var file_nebius_msp_spark_v1alpha1_session_service_proto_depIdxs = []int32{
	6, // 0: nebius.msp.spark.v1alpha1.ListSessionsResponse.items:type_name -> nebius.msp.spark.v1alpha1.Session
	7, // 1: nebius.msp.spark.v1alpha1.CreateSessionRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	8, // 2: nebius.msp.spark.v1alpha1.CreateSessionRequest.spec:type_name -> nebius.msp.spark.v1alpha1.SessionSpec
	0, // 3: nebius.msp.spark.v1alpha1.SessionService.Get:input_type -> nebius.msp.spark.v1alpha1.GetSessionRequest
	1, // 4: nebius.msp.spark.v1alpha1.SessionService.GetByName:input_type -> nebius.msp.spark.v1alpha1.GetSessionByNameRequest
	2, // 5: nebius.msp.spark.v1alpha1.SessionService.List:input_type -> nebius.msp.spark.v1alpha1.ListSessionsRequest
	4, // 6: nebius.msp.spark.v1alpha1.SessionService.Create:input_type -> nebius.msp.spark.v1alpha1.CreateSessionRequest
	5, // 7: nebius.msp.spark.v1alpha1.SessionService.Delete:input_type -> nebius.msp.spark.v1alpha1.DeleteSessionRequest
	6, // 8: nebius.msp.spark.v1alpha1.SessionService.Get:output_type -> nebius.msp.spark.v1alpha1.Session
	6, // 9: nebius.msp.spark.v1alpha1.SessionService.GetByName:output_type -> nebius.msp.spark.v1alpha1.Session
	3, // 10: nebius.msp.spark.v1alpha1.SessionService.List:output_type -> nebius.msp.spark.v1alpha1.ListSessionsResponse
	9, // 11: nebius.msp.spark.v1alpha1.SessionService.Create:output_type -> nebius.common.v1.Operation
	9, // 12: nebius.msp.spark.v1alpha1.SessionService.Delete:output_type -> nebius.common.v1.Operation
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_nebius_msp_spark_v1alpha1_session_service_proto_init() }
func file_nebius_msp_spark_v1alpha1_session_service_proto_init() {
	if File_nebius_msp_spark_v1alpha1_session_service_proto != nil {
		return
	}
	file_nebius_msp_spark_v1alpha1_session_proto_init()
	file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_msp_spark_v1alpha1_session_service_proto_rawDesc), len(file_nebius_msp_spark_v1alpha1_session_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_msp_spark_v1alpha1_session_service_proto_goTypes,
		DependencyIndexes: file_nebius_msp_spark_v1alpha1_session_service_proto_depIdxs,
		MessageInfos:      file_nebius_msp_spark_v1alpha1_session_service_proto_msgTypes,
	}.Build()
	File_nebius_msp_spark_v1alpha1_session_service_proto = out.File
	file_nebius_msp_spark_v1alpha1_session_service_proto_goTypes = nil
	file_nebius_msp_spark_v1alpha1_session_service_proto_depIdxs = nil
}
