// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/msp/mlflow/v1alpha1/cluster.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	v1alpha1 "github.com/nebius/gosdk/proto/nebius/msp/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ClusterSpec           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *MlflowClusterStatus   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Cluster) GetSpec() *ClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Cluster) GetStatus() *MlflowClusterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Cluster specification
type ClusterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Description of the cluster.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Either make cluster public accessible or accessible only via private VPC.
	PublicAccess bool `protobuf:"varint,2,opt,name=public_access,json=publicAccess,proto3" json:"public_access,omitempty"`
	// MLflow admin username.
	AdminUsername string `protobuf:"bytes,4,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	// MLflow admin password.
	AdminPassword string `protobuf:"bytes,5,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password,omitempty"`
	// Id of the service account that will be used to access S3 bucket (and create one if not provided).
	ServiceAccountId string `protobuf:"bytes,6,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Name of the Nebius S3 bucket for MLflow artifacts. If not provided, will be created under the same parent.
	StorageBucketName string `protobuf:"bytes,7,opt,name=storage_bucket_name,json=storageBucketName,proto3" json:"storage_bucket_name,omitempty"`
	// ID of the vpc network.
	NetworkId string `protobuf:"bytes,8,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Size defines how much resources will be allocated to mlflow
	// See supported sizes in the documentation. Default size is the smallest available in the region.
	Size          string `protobuf:"bytes,9,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec.ProtoReflect.Descriptor instead.
func (*ClusterSpec) Descriptor() ([]byte, []int) {
	return file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClusterSpec) GetPublicAccess() bool {
	if x != nil {
		return x.PublicAccess
	}
	return false
}

func (x *ClusterSpec) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *ClusterSpec) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

func (x *ClusterSpec) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *ClusterSpec) GetStorageBucketName() string {
	if x != nil {
		return x.StorageBucketName
	}
	return ""
}

func (x *ClusterSpec) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *ClusterSpec) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type MlflowClusterStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current phase of the cluster.
	Phase v1alpha1.ClusterStatus_Phase `protobuf:"varint,1,opt,name=phase,proto3,enum=nebius.msp.v1alpha1.ClusterStatus_Phase" json:"phase,omitempty"`
	// State reflects substatus of the phase to define whether it's healthy or not.
	State v1alpha1.ClusterStatus_State `protobuf:"varint,2,opt,name=state,proto3,enum=nebius.msp.v1alpha1.ClusterStatus_State" json:"state,omitempty"`
	// Tracking endpoint url.
	// Will be removed soon in favor of private_tracking_endpoint and public_tracking_endpoint.
	TrackingEndpoint string `protobuf:"bytes,3,opt,name=tracking_endpoint,json=trackingEndpoint,proto3" json:"tracking_endpoint,omitempty"`
	// Name of the Nebius S3 bucket for MLflow artifacts.
	EffectiveStorageBucketName string `protobuf:"bytes,4,opt,name=effective_storage_bucket_name,json=effectiveStorageBucketName,proto3" json:"effective_storage_bucket_name,omitempty"`
	// Count of experiments in the MLflow cluster
	ExperimentsCount uint32 `protobuf:"varint,5,opt,name=experiments_count,json=experimentsCount,proto3" json:"experiments_count,omitempty"`
	// MLflow version
	MlflowVersion string `protobuf:"bytes,6,opt,name=mlflow_version,json=mlflowVersion,proto3" json:"mlflow_version,omitempty"`
	// Public and private tracking endpoints
	TrackingEndpoints *Endpoints `protobuf:"bytes,7,opt,name=tracking_endpoints,json=trackingEndpoints,proto3" json:"tracking_endpoints,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MlflowClusterStatus) Reset() {
	*x = MlflowClusterStatus{}
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MlflowClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MlflowClusterStatus) ProtoMessage() {}

func (x *MlflowClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MlflowClusterStatus.ProtoReflect.Descriptor instead.
func (*MlflowClusterStatus) Descriptor() ([]byte, []int) {
	return file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *MlflowClusterStatus) GetPhase() v1alpha1.ClusterStatus_Phase {
	if x != nil {
		return x.Phase
	}
	return v1alpha1.ClusterStatus_Phase(0)
}

func (x *MlflowClusterStatus) GetState() v1alpha1.ClusterStatus_State {
	if x != nil {
		return x.State
	}
	return v1alpha1.ClusterStatus_State(0)
}

func (x *MlflowClusterStatus) GetTrackingEndpoint() string {
	if x != nil {
		return x.TrackingEndpoint
	}
	return ""
}

func (x *MlflowClusterStatus) GetEffectiveStorageBucketName() string {
	if x != nil {
		return x.EffectiveStorageBucketName
	}
	return ""
}

func (x *MlflowClusterStatus) GetExperimentsCount() uint32 {
	if x != nil {
		return x.ExperimentsCount
	}
	return 0
}

func (x *MlflowClusterStatus) GetMlflowVersion() string {
	if x != nil {
		return x.MlflowVersion
	}
	return ""
}

func (x *MlflowClusterStatus) GetTrackingEndpoints() *Endpoints {
	if x != nil {
		return x.TrackingEndpoints
	}
	return nil
}

type Endpoints struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Private endpoint
	Private string `protobuf:"bytes,1,opt,name=private,proto3" json:"private,omitempty"`
	// Public endpoint
	Public        string `protobuf:"bytes,2,opt,name=public,proto3" json:"public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoints) Reset() {
	*x = Endpoints{}
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoints) ProtoMessage() {}

func (x *Endpoints) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoints.ProtoReflect.Descriptor instead.
func (*Endpoints) Descriptor() ([]byte, []int) {
	return file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *Endpoints) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

func (x *Endpoints) GetPublic() string {
	if x != nil {
		return x.Public
	}
	return ""
}

var File_nebius_msp_mlflow_v1alpha1_cluster_proto protoreflect.FileDescriptor

const file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDesc = "" +
	"\n" +
	"(nebius/msp/mlflow/v1alpha1/cluster.proto\x12\x1anebius.msp.mlflow.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\x1a!nebius/msp/v1alpha1/cluster.proto\"\xe5\x01\n" +
	"\aCluster\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12C\n" +
	"\x04spec\x18\x02 \x01(\v2'.nebius.msp.mlflow.v1alpha1.ClusterSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12M\n" +
	"\x06status\x18\x03 \x01(\v2/.nebius.msp.mlflow.v1alpha1.MlflowClusterStatusB\x04\xbaJ\x01\x05R\x06status\"\xea\x02\n" +
	"\vClusterSpec\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12#\n" +
	"\rpublic_access\x18\x02 \x01(\bR\fpublicAccess\x12-\n" +
	"\x0eadmin_username\x18\x04 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\radminUsername\x124\n" +
	"\x0eadmin_password\x18\x05 \x01(\tB\r\xbaH\x03\xc8\x01\x01\xbaJ\x01\x04\xc0J\x01R\radminPassword\x124\n" +
	"\x12service_account_id\x18\x06 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x10serviceAccountId\x12.\n" +
	"\x13storage_bucket_name\x18\a \x01(\tR\x11storageBucketName\x12)\n" +
	"\n" +
	"network_id\x18\b \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\tnetworkId\x12\x18\n" +
	"\x04size\x18\t \x01(\tB\x04\xbaJ\x01\aR\x04sizeJ\x04\b\x03\x10\x04\"\xaf\x03\n" +
	"\x13MlflowClusterStatus\x12>\n" +
	"\x05phase\x18\x01 \x01(\x0e2(.nebius.msp.v1alpha1.ClusterStatus.PhaseR\x05phase\x12>\n" +
	"\x05state\x18\x02 \x01(\x0e2(.nebius.msp.v1alpha1.ClusterStatus.StateR\x05state\x12+\n" +
	"\x11tracking_endpoint\x18\x03 \x01(\tR\x10trackingEndpoint\x12A\n" +
	"\x1deffective_storage_bucket_name\x18\x04 \x01(\tR\x1aeffectiveStorageBucketName\x12+\n" +
	"\x11experiments_count\x18\x05 \x01(\rR\x10experimentsCount\x12%\n" +
	"\x0emlflow_version\x18\x06 \x01(\tR\rmlflowVersion\x12T\n" +
	"\x12tracking_endpoints\x18\a \x01(\v2%.nebius.msp.mlflow.v1alpha1.EndpointsR\x11trackingEndpoints\"=\n" +
	"\tEndpoints\x12\x18\n" +
	"\aprivate\x18\x01 \x01(\tR\aprivate\x12\x16\n" +
	"\x06public\x18\x02 \x01(\tR\x06publicBm\n" +
	"!ai.nebius.pub.msp.mlflow.v1alpha1B\fClusterProtoP\x01Z8github.com/nebius/gosdk/proto/nebius/msp/mlflow/v1alpha1b\x06proto3"

var (
	file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescOnce sync.Once
	file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescData []byte
)

func file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescGZIP() []byte {
	file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescOnce.Do(func() {
		file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDesc), len(file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDesc)))
	})
	return file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDescData
}

var file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_msp_mlflow_v1alpha1_cluster_proto_goTypes = []any{
	(*Cluster)(nil),                   // 0: nebius.msp.mlflow.v1alpha1.Cluster
	(*ClusterSpec)(nil),               // 1: nebius.msp.mlflow.v1alpha1.ClusterSpec
	(*MlflowClusterStatus)(nil),       // 2: nebius.msp.mlflow.v1alpha1.MlflowClusterStatus
	(*Endpoints)(nil),                 // 3: nebius.msp.mlflow.v1alpha1.Endpoints
	(*v1.ResourceMetadata)(nil),       // 4: nebius.common.v1.ResourceMetadata
	(v1alpha1.ClusterStatus_Phase)(0), // 5: nebius.msp.v1alpha1.ClusterStatus.Phase
	(v1alpha1.ClusterStatus_State)(0), // 6: nebius.msp.v1alpha1.ClusterStatus.State
}
var file_nebius_msp_mlflow_v1alpha1_cluster_proto_depIdxs = []int32{
	4, // 0: nebius.msp.mlflow.v1alpha1.Cluster.metadata:type_name -> nebius.common.v1.ResourceMetadata
	1, // 1: nebius.msp.mlflow.v1alpha1.Cluster.spec:type_name -> nebius.msp.mlflow.v1alpha1.ClusterSpec
	2, // 2: nebius.msp.mlflow.v1alpha1.Cluster.status:type_name -> nebius.msp.mlflow.v1alpha1.MlflowClusterStatus
	5, // 3: nebius.msp.mlflow.v1alpha1.MlflowClusterStatus.phase:type_name -> nebius.msp.v1alpha1.ClusterStatus.Phase
	6, // 4: nebius.msp.mlflow.v1alpha1.MlflowClusterStatus.state:type_name -> nebius.msp.v1alpha1.ClusterStatus.State
	3, // 5: nebius.msp.mlflow.v1alpha1.MlflowClusterStatus.tracking_endpoints:type_name -> nebius.msp.mlflow.v1alpha1.Endpoints
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_nebius_msp_mlflow_v1alpha1_cluster_proto_init() }
func file_nebius_msp_mlflow_v1alpha1_cluster_proto_init() {
	if File_nebius_msp_mlflow_v1alpha1_cluster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDesc), len(file_nebius_msp_mlflow_v1alpha1_cluster_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_msp_mlflow_v1alpha1_cluster_proto_goTypes,
		DependencyIndexes: file_nebius_msp_mlflow_v1alpha1_cluster_proto_depIdxs,
		MessageInfos:      file_nebius_msp_mlflow_v1alpha1_cluster_proto_msgTypes,
	}.Build()
	File_nebius_msp_mlflow_v1alpha1_cluster_proto = out.File
	file_nebius_msp_mlflow_v1alpha1_cluster_proto_goTypes = nil
	file_nebius_msp_mlflow_v1alpha1_cluster_proto_depIdxs = nil
}
