// Code generated by protoc-gen-sensitive. DO NOT EDIT.

package v2

import (
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	slog "log/slog"
)

// func (x *CreateAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *CreateAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *GetAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *GetAccessKeyByAwsIdRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetAccessKeyByAwsIdRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ListAccessKeysRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ListAccessKeysRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ListAccessKeysByAccountRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ListAccessKeysByAccountRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *UpdateAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *UpdateAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ActivateAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ActivateAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *DeactivateAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeactivateAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ActivateAccessKeyByAwsIdRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ActivateAccessKeyByAwsIdRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *DeactivateAccessKeyByAwsIdRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeactivateAccessKeyByAwsIdRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *DeleteAccessKeyRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeleteAccessKeyRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *DeleteAccessKeyByAwsIdRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeleteAccessKeyByAwsIdRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [ListAccessKeysResponse] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *ListAccessKeysResponse) Sanitize() {
	if x == nil {
		return
	}
	for _, y := range x.Items {
		y.Sanitize()
	}
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListAccessKeysResponse].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListAccessKeysResponse
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListAccessKeysResponse], use the following code:
//
//	var original *ListAccessKeysResponse
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListAccessKeysResponse)
func (x *ListAccessKeysResponse) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListAccessKeysResponse) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListAccessKeysResponse)(c))
}

// wrapperListAccessKeysResponse is used to return [ListAccessKeysResponse] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListAccessKeysResponse ListAccessKeysResponse

func (w *wrapperListAccessKeysResponse) String() string {
	return (*ListAccessKeysResponse)(w).String()
}

func (*wrapperListAccessKeysResponse) ProtoMessage() {}

func (w *wrapperListAccessKeysResponse) ProtoReflect() protoreflect.Message {
	return (*ListAccessKeysResponse)(w).ProtoReflect()
}
