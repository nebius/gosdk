// Code generated by protoc-gen-sensitive. DO NOT EDIT.

package v1

import (
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	slog "log/slog"
)

// Sanitize mutates [CreateInvitationRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *CreateInvitationRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [CreateInvitationRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *CreateInvitationRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [CreateInvitationRequest], use the following code:
//
//	var original *CreateInvitationRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*CreateInvitationRequest)
func (x *CreateInvitationRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*CreateInvitationRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperCreateInvitationRequest)(c))
}

// wrapperCreateInvitationRequest is used to return [CreateInvitationRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperCreateInvitationRequest CreateInvitationRequest

func (w *wrapperCreateInvitationRequest) String() string {
	return (*CreateInvitationRequest)(w).String()
}

func (*wrapperCreateInvitationRequest) ProtoMessage() {}

func (w *wrapperCreateInvitationRequest) ProtoReflect() protoreflect.Message {
	return (*CreateInvitationRequest)(w).ProtoReflect()
}

// func (x *GetInvitationRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetInvitationRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [ListInvitationsRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *ListInvitationsRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Filter = "**HIDDEN**"
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListInvitationsRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListInvitationsRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListInvitationsRequest], use the following code:
//
//	var original *ListInvitationsRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListInvitationsRequest)
func (x *ListInvitationsRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListInvitationsRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListInvitationsRequest)(c))
}

// wrapperListInvitationsRequest is used to return [ListInvitationsRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListInvitationsRequest ListInvitationsRequest

func (w *wrapperListInvitationsRequest) String() string {
	return (*ListInvitationsRequest)(w).String()
}

func (*wrapperListInvitationsRequest) ProtoMessage() {}

func (w *wrapperListInvitationsRequest) ProtoReflect() protoreflect.Message {
	return (*ListInvitationsRequest)(w).ProtoReflect()
}

// Sanitize mutates [ListInvitationsResponse] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *ListInvitationsResponse) Sanitize() {
	if x == nil {
		return
	}
	for _, y := range x.Items {
		y.Sanitize()
	}
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListInvitationsResponse].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListInvitationsResponse
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListInvitationsResponse], use the following code:
//
//	var original *ListInvitationsResponse
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListInvitationsResponse)
func (x *ListInvitationsResponse) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListInvitationsResponse) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListInvitationsResponse)(c))
}

// wrapperListInvitationsResponse is used to return [ListInvitationsResponse] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListInvitationsResponse ListInvitationsResponse

func (w *wrapperListInvitationsResponse) String() string {
	return (*ListInvitationsResponse)(w).String()
}

func (*wrapperListInvitationsResponse) ProtoMessage() {}

func (w *wrapperListInvitationsResponse) ProtoReflect() protoreflect.Message {
	return (*ListInvitationsResponse)(w).ProtoReflect()
}

// func (x *DeleteInvitationRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeleteInvitationRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [UpdateInvitationRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *UpdateInvitationRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [UpdateInvitationRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *UpdateInvitationRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [UpdateInvitationRequest], use the following code:
//
//	var original *UpdateInvitationRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*UpdateInvitationRequest)
func (x *UpdateInvitationRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*UpdateInvitationRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperUpdateInvitationRequest)(c))
}

// wrapperUpdateInvitationRequest is used to return [UpdateInvitationRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperUpdateInvitationRequest UpdateInvitationRequest

func (w *wrapperUpdateInvitationRequest) String() string {
	return (*UpdateInvitationRequest)(w).String()
}

func (*wrapperUpdateInvitationRequest) ProtoMessage() {}

func (w *wrapperUpdateInvitationRequest) ProtoReflect() protoreflect.Message {
	return (*UpdateInvitationRequest)(w).ProtoReflect()
}

// func (x *ResendInvitationRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ResendInvitationRequest) LogValue() slog.Value // is not generated as no sensitive fields found
