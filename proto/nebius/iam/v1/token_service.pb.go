// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/iam/v1/token_service.proto

package v1

import (
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://www.rfc-editor.org/rfc/rfc8693.html
type ExchangeTokenRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GrantType          string                 `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`                              // required - urn:ietf:params:oauth:grant-type:token-exchange
	RequestedTokenType string                 `protobuf:"bytes,2,opt,name=requested_token_type,json=requestedTokenType,proto3" json:"requested_token_type,omitempty"` // optional type of requested token, default is urn:ietf:params:oauth:token-type:access_token
	SubjectToken       string                 `protobuf:"bytes,3,opt,name=subject_token,json=subjectToken,proto3" json:"subject_token,omitempty"`                     // required - could be self signed JWT token
	SubjectTokenType   string                 `protobuf:"bytes,4,opt,name=subject_token_type,json=subjectTokenType,proto3" json:"subject_token_type,omitempty"`       // required, in case of jwt - urn:ietf:params:oauth:token-type:jwt
	Scopes             []string               `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`                                                     // optional (scopes of the token)
	Audience           string                 `protobuf:"bytes,6,opt,name=audience,proto3" json:"audience,omitempty"`                                                 // optional, name of the oauth client id on which this token will be used
	ActorToken         string                 `protobuf:"bytes,7,opt,name=actor_token,json=actorToken,proto3" json:"actor_token,omitempty"`                           // optional, subject token for impersonation/delegation (who want to impersonate/delegate) in subject_token.
	ActorTokenType     string                 `protobuf:"bytes,8,opt,name=actor_token_type,json=actorTokenType,proto3" json:"actor_token_type,omitempty"`             // optional, token type for the impersonation/delegation (who want to impersonate/delegate). Usually it's urn:ietf:params:oauth:token-type:access_token
	Resource           []string               `protobuf:"bytes,9,rep,name=resource,proto3" json:"resource,omitempty"`                                                 // optional, list of resources approved to use by token, if applicable
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExchangeTokenRequest) Reset() {
	*x = ExchangeTokenRequest{}
	mi := &file_nebius_iam_v1_token_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeTokenRequest) ProtoMessage() {}

func (x *ExchangeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_token_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeTokenRequest.ProtoReflect.Descriptor instead.
func (*ExchangeTokenRequest) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_token_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeTokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *ExchangeTokenRequest) GetRequestedTokenType() string {
	if x != nil {
		return x.RequestedTokenType
	}
	return ""
}

func (x *ExchangeTokenRequest) GetSubjectToken() string {
	if x != nil {
		return x.SubjectToken
	}
	return ""
}

func (x *ExchangeTokenRequest) GetSubjectTokenType() string {
	if x != nil {
		return x.SubjectTokenType
	}
	return ""
}

func (x *ExchangeTokenRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *ExchangeTokenRequest) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *ExchangeTokenRequest) GetActorToken() string {
	if x != nil {
		return x.ActorToken
	}
	return ""
}

func (x *ExchangeTokenRequest) GetActorTokenType() string {
	if x != nil {
		return x.ActorTokenType
	}
	return ""
}

func (x *ExchangeTokenRequest) GetResource() []string {
	if x != nil {
		return x.Resource
	}
	return nil
}

type CreateTokenResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccessToken     string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`               // required
	IssuedTokenType string                 `protobuf:"bytes,2,opt,name=issued_token_type,json=issuedTokenType,proto3" json:"issued_token_type,omitempty"` // required
	TokenType       string                 `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`                     // required - Bearer
	ExpiresIn       int64                  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	Scopes          []string               `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateTokenResponse) Reset() {
	*x = CreateTokenResponse{}
	mi := &file_nebius_iam_v1_token_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenResponse) ProtoMessage() {}

func (x *CreateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_token_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateTokenResponse) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_token_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateTokenResponse) GetIssuedTokenType() string {
	if x != nil {
		return x.IssuedTokenType
	}
	return ""
}

func (x *CreateTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *CreateTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *CreateTokenResponse) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

var File_nebius_iam_v1_token_service_proto protoreflect.FileDescriptor

const file_nebius_iam_v1_token_service_proto_rawDesc = "" +
	"\n" +
	"!nebius/iam/v1/token_service.proto\x12\rnebius.iam.v1\x1a\x18nebius/annotations.proto\"\xdf\x02\n" +
	"\x14ExchangeTokenRequest\x12\x1d\n" +
	"\n" +
	"grant_type\x18\x01 \x01(\tR\tgrantType\x120\n" +
	"\x14requested_token_type\x18\x02 \x01(\tR\x12requestedTokenType\x12(\n" +
	"\rsubject_token\x18\x03 \x01(\tB\x03\xc8J\x01R\fsubjectToken\x12,\n" +
	"\x12subject_token_type\x18\x04 \x01(\tR\x10subjectTokenType\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopes\x12\x1a\n" +
	"\baudience\x18\x06 \x01(\tR\baudience\x12$\n" +
	"\vactor_token\x18\a \x01(\tB\x03\xc8J\x01R\n" +
	"actorToken\x12(\n" +
	"\x10actor_token_type\x18\b \x01(\tR\x0eactorTokenType\x12\x1a\n" +
	"\bresource\x18\t \x03(\tR\bresource\"\xbf\x01\n" +
	"\x13CreateTokenResponse\x12&\n" +
	"\faccess_token\x18\x01 \x01(\tB\x03\xc8J\x01R\vaccessToken\x12*\n" +
	"\x11issued_token_type\x18\x02 \x01(\tR\x0fissuedTokenType\x12\x1d\n" +
	"\n" +
	"token_type\x18\x03 \x01(\tR\ttokenType\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x04 \x01(\x03R\texpiresIn\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopesBX\n" +
	"\x14ai.nebius.pub.iam.v1B\x11TokenServiceProtoP\x01Z+github.com/nebius/gosdk/proto/nebius/iam/v1b\x06proto3"

var (
	file_nebius_iam_v1_token_service_proto_rawDescOnce sync.Once
	file_nebius_iam_v1_token_service_proto_rawDescData []byte
)

func file_nebius_iam_v1_token_service_proto_rawDescGZIP() []byte {
	file_nebius_iam_v1_token_service_proto_rawDescOnce.Do(func() {
		file_nebius_iam_v1_token_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_token_service_proto_rawDesc), len(file_nebius_iam_v1_token_service_proto_rawDesc)))
	})
	return file_nebius_iam_v1_token_service_proto_rawDescData
}

var file_nebius_iam_v1_token_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_nebius_iam_v1_token_service_proto_goTypes = []any{
	(*ExchangeTokenRequest)(nil), // 0: nebius.iam.v1.ExchangeTokenRequest
	(*CreateTokenResponse)(nil),  // 1: nebius.iam.v1.CreateTokenResponse
}
var file_nebius_iam_v1_token_service_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_nebius_iam_v1_token_service_proto_init() }
func file_nebius_iam_v1_token_service_proto_init() {
	if File_nebius_iam_v1_token_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_token_service_proto_rawDesc), len(file_nebius_iam_v1_token_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_iam_v1_token_service_proto_goTypes,
		DependencyIndexes: file_nebius_iam_v1_token_service_proto_depIdxs,
		MessageInfos:      file_nebius_iam_v1_token_service_proto_msgTypes,
	}.Build()
	File_nebius_iam_v1_token_service_proto = out.File
	file_nebius_iam_v1_token_service_proto_goTypes = nil
	file_nebius_iam_v1_token_service_proto_depIdxs = nil
}
