// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.28.3
// source: nebius/iam/v1/federated_credentials.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FederatedCredentials struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *FederatedCredentialsSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *FederatedCredentialsStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentials) Reset() {
	*x = FederatedCredentials{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentials) ProtoMessage() {}

func (x *FederatedCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentials.ProtoReflect.Descriptor instead.
func (*FederatedCredentials) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{0}
}

func (x *FederatedCredentials) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FederatedCredentials) GetSpec() *FederatedCredentialsSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *FederatedCredentials) GetStatus() *FederatedCredentialsStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type FederatedCredentialsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// provider of federated credentials used for federated subject authentication
	//
	// Types that are valid to be assigned to CredentialsProvider:
	//
	//	*FederatedCredentialsSpec_OidcProvider
	CredentialsProvider isFederatedCredentialsSpec_CredentialsProvider `protobuf_oneof:"credentials_provider"`
	FederatedSubjectId  string                                         `protobuf:"bytes,101,opt,name=federated_subject_id,json=federatedSubjectId,proto3" json:"federated_subject_id,omitempty"`
	// IAM subject, in which federated subject will be impersonated to.
	// E.g. for workload identities it will be IAM service account.
	SubjectId     string `protobuf:"bytes,111,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentialsSpec) Reset() {
	*x = FederatedCredentialsSpec{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentialsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentialsSpec) ProtoMessage() {}

func (x *FederatedCredentialsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentialsSpec.ProtoReflect.Descriptor instead.
func (*FederatedCredentialsSpec) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{1}
}

func (x *FederatedCredentialsSpec) GetCredentialsProvider() isFederatedCredentialsSpec_CredentialsProvider {
	if x != nil {
		return x.CredentialsProvider
	}
	return nil
}

func (x *FederatedCredentialsSpec) GetOidcProvider() *OidcCredentialsProvider {
	if x != nil {
		if x, ok := x.CredentialsProvider.(*FederatedCredentialsSpec_OidcProvider); ok {
			return x.OidcProvider
		}
	}
	return nil
}

func (x *FederatedCredentialsSpec) GetFederatedSubjectId() string {
	if x != nil {
		return x.FederatedSubjectId
	}
	return ""
}

func (x *FederatedCredentialsSpec) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type isFederatedCredentialsSpec_CredentialsProvider interface {
	isFederatedCredentialsSpec_CredentialsProvider()
}

type FederatedCredentialsSpec_OidcProvider struct {
	OidcProvider *OidcCredentialsProvider `protobuf:"bytes,1,opt,name=oidc_provider,json=oidcProvider,proto3,oneof"`
}

func (*FederatedCredentialsSpec_OidcProvider) isFederatedCredentialsSpec_CredentialsProvider() {}

type OidcCredentialsProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// It's not required provider OIDC issuer should be real OIDC provider, but should expose OIDC configuration
	// with "/.well-known/openid-configuration" endpoint. Configuration should contains the "jwks_uri" endpoint
	// where the JSON Web Key Set (JWKS) can be found; this set contains public keys used to verify
	// JSON Web Tokens (JWTs) issued by an identity provider.
	IssuerUrl string `protobuf:"bytes,1,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"`
	// *
	// Literally json, which represents JWKS with public keys for JWT verification
	JwkSetJson    string `protobuf:"bytes,2,opt,name=jwk_set_json,json=jwkSetJson,proto3" json:"jwk_set_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OidcCredentialsProvider) Reset() {
	*x = OidcCredentialsProvider{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OidcCredentialsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcCredentialsProvider) ProtoMessage() {}

func (x *OidcCredentialsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcCredentialsProvider.ProtoReflect.Descriptor instead.
func (*OidcCredentialsProvider) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{2}
}

func (x *OidcCredentialsProvider) GetIssuerUrl() string {
	if x != nil {
		return x.IssuerUrl
	}
	return ""
}

func (x *OidcCredentialsProvider) GetJwkSetJson() string {
	if x != nil {
		return x.JwkSetJson
	}
	return ""
}

type FederatedCredentialsStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentialsStatus) Reset() {
	*x = FederatedCredentialsStatus{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentialsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentialsStatus) ProtoMessage() {}

func (x *FederatedCredentialsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentialsStatus.ProtoReflect.Descriptor instead.
func (*FederatedCredentialsStatus) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{3}
}

var File_nebius_iam_v1_federated_credentials_proto protoreflect.FileDescriptor

var file_nebius_iam_v1_federated_credentials_proto_rawDesc = string([]byte{
	0x0a, 0x29, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x14, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x70, 0x65, 0x63, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x04, 0xba, 0x4a, 0x01, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xe9, 0x01, 0x0a, 0x18, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x4d,
	0x0a, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0c, 0x6f, 0x69, 0x64, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a,
	0x14, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x12, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x1d,
	0x0a, 0x14, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x62, 0x0a,
	0x17, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0c, 0x6a, 0x77, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x77, 0x6b, 0x53, 0x65, 0x74, 0x4a, 0x73, 0x6f,
	0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x60, 0x0a, 0x14, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x70, 0x75, 0x62,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x19, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67, 0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_nebius_iam_v1_federated_credentials_proto_rawDescOnce sync.Once
	file_nebius_iam_v1_federated_credentials_proto_rawDescData []byte
)

func file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP() []byte {
	file_nebius_iam_v1_federated_credentials_proto_rawDescOnce.Do(func() {
		file_nebius_iam_v1_federated_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_federated_credentials_proto_rawDesc), len(file_nebius_iam_v1_federated_credentials_proto_rawDesc)))
	})
	return file_nebius_iam_v1_federated_credentials_proto_rawDescData
}

var file_nebius_iam_v1_federated_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_iam_v1_federated_credentials_proto_goTypes = []any{
	(*FederatedCredentials)(nil),       // 0: nebius.iam.v1.FederatedCredentials
	(*FederatedCredentialsSpec)(nil),   // 1: nebius.iam.v1.FederatedCredentialsSpec
	(*OidcCredentialsProvider)(nil),    // 2: nebius.iam.v1.OidcCredentialsProvider
	(*FederatedCredentialsStatus)(nil), // 3: nebius.iam.v1.FederatedCredentialsStatus
	(*v1.ResourceMetadata)(nil),        // 4: nebius.common.v1.ResourceMetadata
}
var file_nebius_iam_v1_federated_credentials_proto_depIdxs = []int32{
	4, // 0: nebius.iam.v1.FederatedCredentials.metadata:type_name -> nebius.common.v1.ResourceMetadata
	1, // 1: nebius.iam.v1.FederatedCredentials.spec:type_name -> nebius.iam.v1.FederatedCredentialsSpec
	3, // 2: nebius.iam.v1.FederatedCredentials.status:type_name -> nebius.iam.v1.FederatedCredentialsStatus
	2, // 3: nebius.iam.v1.FederatedCredentialsSpec.oidc_provider:type_name -> nebius.iam.v1.OidcCredentialsProvider
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nebius_iam_v1_federated_credentials_proto_init() }
func file_nebius_iam_v1_federated_credentials_proto_init() {
	if File_nebius_iam_v1_federated_credentials_proto != nil {
		return
	}
	file_nebius_iam_v1_federated_credentials_proto_msgTypes[1].OneofWrappers = []any{
		(*FederatedCredentialsSpec_OidcProvider)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_federated_credentials_proto_rawDesc), len(file_nebius_iam_v1_federated_credentials_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_iam_v1_federated_credentials_proto_goTypes,
		DependencyIndexes: file_nebius_iam_v1_federated_credentials_proto_depIdxs,
		MessageInfos:      file_nebius_iam_v1_federated_credentials_proto_msgTypes,
	}.Build()
	File_nebius_iam_v1_federated_credentials_proto = out.File
	file_nebius_iam_v1_federated_credentials_proto_goTypes = nil
	file_nebius_iam_v1_federated_credentials_proto_depIdxs = nil
}
