// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/iam/v1/federated_credentials.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FederatedCredentials struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *FederatedCredentialsSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *FederatedCredentialsStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentials) Reset() {
	*x = FederatedCredentials{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentials) ProtoMessage() {}

func (x *FederatedCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentials.ProtoReflect.Descriptor instead.
func (*FederatedCredentials) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{0}
}

func (x *FederatedCredentials) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FederatedCredentials) GetSpec() *FederatedCredentialsSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *FederatedCredentials) GetStatus() *FederatedCredentialsStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type FederatedCredentialsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// provider of federated credentials used for federated subject authentication
	//
	// Types that are valid to be assigned to CredentialsProvider:
	//
	//	*FederatedCredentialsSpec_OidcProvider
	CredentialsProvider isFederatedCredentialsSpec_CredentialsProvider `protobuf_oneof:"credentials_provider"`
	FederatedSubjectId  string                                         `protobuf:"bytes,101,opt,name=federated_subject_id,json=federatedSubjectId,proto3" json:"federated_subject_id,omitempty"`
	// IAM subject, in which federated subject will be impersonated to.
	// E.g. for workload identities it will be IAM service account.
	SubjectId     string `protobuf:"bytes,111,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentialsSpec) Reset() {
	*x = FederatedCredentialsSpec{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentialsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentialsSpec) ProtoMessage() {}

func (x *FederatedCredentialsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentialsSpec.ProtoReflect.Descriptor instead.
func (*FederatedCredentialsSpec) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{1}
}

func (x *FederatedCredentialsSpec) GetCredentialsProvider() isFederatedCredentialsSpec_CredentialsProvider {
	if x != nil {
		return x.CredentialsProvider
	}
	return nil
}

func (x *FederatedCredentialsSpec) GetOidcProvider() *OidcCredentialsProvider {
	if x != nil {
		if x, ok := x.CredentialsProvider.(*FederatedCredentialsSpec_OidcProvider); ok {
			return x.OidcProvider
		}
	}
	return nil
}

func (x *FederatedCredentialsSpec) GetFederatedSubjectId() string {
	if x != nil {
		return x.FederatedSubjectId
	}
	return ""
}

func (x *FederatedCredentialsSpec) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type isFederatedCredentialsSpec_CredentialsProvider interface {
	isFederatedCredentialsSpec_CredentialsProvider()
}

type FederatedCredentialsSpec_OidcProvider struct {
	OidcProvider *OidcCredentialsProvider `protobuf:"bytes,1,opt,name=oidc_provider,json=oidcProvider,proto3,oneof"`
}

func (*FederatedCredentialsSpec_OidcProvider) isFederatedCredentialsSpec_CredentialsProvider() {}

type OidcCredentialsProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// It's not required provider OIDC issuer should be real OIDC provider, but should expose OIDC configuration
	// with "/.well-known/openid-configuration" endpoint. Configuration should contains the "jwks_uri" endpoint
	// where the JSON Web Key Set (JWKS) can be found; this set contains public keys used to verify
	// JSON Web Tokens (JWTs) issued by an identity provider.
	IssuerUrl string `protobuf:"bytes,1,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"`
	// *
	// Literally json, which represents JWKS with public keys for JWT verification
	JwkSetJson    string `protobuf:"bytes,2,opt,name=jwk_set_json,json=jwkSetJson,proto3" json:"jwk_set_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OidcCredentialsProvider) Reset() {
	*x = OidcCredentialsProvider{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OidcCredentialsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcCredentialsProvider) ProtoMessage() {}

func (x *OidcCredentialsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcCredentialsProvider.ProtoReflect.Descriptor instead.
func (*OidcCredentialsProvider) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{2}
}

func (x *OidcCredentialsProvider) GetIssuerUrl() string {
	if x != nil {
		return x.IssuerUrl
	}
	return ""
}

func (x *OidcCredentialsProvider) GetJwkSetJson() string {
	if x != nil {
		return x.JwkSetJson
	}
	return ""
}

type FederatedCredentialsStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FederatedCredentialsStatus) Reset() {
	*x = FederatedCredentialsStatus{}
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FederatedCredentialsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FederatedCredentialsStatus) ProtoMessage() {}

func (x *FederatedCredentialsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_federated_credentials_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FederatedCredentialsStatus.ProtoReflect.Descriptor instead.
func (*FederatedCredentialsStatus) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP(), []int{3}
}

var File_nebius_iam_v1_federated_credentials_proto protoreflect.FileDescriptor

const file_nebius_iam_v1_federated_credentials_proto_rawDesc = "" +
	"\n" +
	")nebius/iam/v1/federated_credentials.proto\x12\rnebius.iam.v1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\"\xec\x01\n" +
	"\x14FederatedCredentials\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12C\n" +
	"\x04spec\x18\x02 \x01(\v2'.nebius.iam.v1.FederatedCredentialsSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12G\n" +
	"\x06status\x18\x03 \x01(\v2).nebius.iam.v1.FederatedCredentialsStatusB\x04\xbaJ\x01\x05R\x06status\"\xe9\x01\n" +
	"\x18FederatedCredentialsSpec\x12M\n" +
	"\roidc_provider\x18\x01 \x01(\v2&.nebius.iam.v1.OidcCredentialsProviderH\x00R\foidcProvider\x128\n" +
	"\x14federated_subject_id\x18e \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x12federatedSubjectId\x12%\n" +
	"\n" +
	"subject_id\x18o \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\tsubjectIdB\x1d\n" +
	"\x14credentials_provider\x12\x05\xbaH\x02\b\x01\"b\n" +
	"\x17OidcCredentialsProvider\x12%\n" +
	"\n" +
	"issuer_url\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\tissuerUrl\x12 \n" +
	"\fjwk_set_json\x18\x02 \x01(\tR\n" +
	"jwkSetJson\"\x1c\n" +
	"\x1aFederatedCredentialsStatusB`\n" +
	"\x14ai.nebius.pub.iam.v1B\x19FederatedCredentialsProtoP\x01Z+github.com/nebius/gosdk/proto/nebius/iam/v1b\x06proto3"

var (
	file_nebius_iam_v1_federated_credentials_proto_rawDescOnce sync.Once
	file_nebius_iam_v1_federated_credentials_proto_rawDescData []byte
)

func file_nebius_iam_v1_federated_credentials_proto_rawDescGZIP() []byte {
	file_nebius_iam_v1_federated_credentials_proto_rawDescOnce.Do(func() {
		file_nebius_iam_v1_federated_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_federated_credentials_proto_rawDesc), len(file_nebius_iam_v1_federated_credentials_proto_rawDesc)))
	})
	return file_nebius_iam_v1_federated_credentials_proto_rawDescData
}

var file_nebius_iam_v1_federated_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_iam_v1_federated_credentials_proto_goTypes = []any{
	(*FederatedCredentials)(nil),       // 0: nebius.iam.v1.FederatedCredentials
	(*FederatedCredentialsSpec)(nil),   // 1: nebius.iam.v1.FederatedCredentialsSpec
	(*OidcCredentialsProvider)(nil),    // 2: nebius.iam.v1.OidcCredentialsProvider
	(*FederatedCredentialsStatus)(nil), // 3: nebius.iam.v1.FederatedCredentialsStatus
	(*v1.ResourceMetadata)(nil),        // 4: nebius.common.v1.ResourceMetadata
}
var file_nebius_iam_v1_federated_credentials_proto_depIdxs = []int32{
	4, // 0: nebius.iam.v1.FederatedCredentials.metadata:type_name -> nebius.common.v1.ResourceMetadata
	1, // 1: nebius.iam.v1.FederatedCredentials.spec:type_name -> nebius.iam.v1.FederatedCredentialsSpec
	3, // 2: nebius.iam.v1.FederatedCredentials.status:type_name -> nebius.iam.v1.FederatedCredentialsStatus
	2, // 3: nebius.iam.v1.FederatedCredentialsSpec.oidc_provider:type_name -> nebius.iam.v1.OidcCredentialsProvider
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nebius_iam_v1_federated_credentials_proto_init() }
func file_nebius_iam_v1_federated_credentials_proto_init() {
	if File_nebius_iam_v1_federated_credentials_proto != nil {
		return
	}
	file_nebius_iam_v1_federated_credentials_proto_msgTypes[1].OneofWrappers = []any{
		(*FederatedCredentialsSpec_OidcProvider)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_iam_v1_federated_credentials_proto_rawDesc), len(file_nebius_iam_v1_federated_credentials_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_iam_v1_federated_credentials_proto_goTypes,
		DependencyIndexes: file_nebius_iam_v1_federated_credentials_proto_depIdxs,
		MessageInfos:      file_nebius_iam_v1_federated_credentials_proto_msgTypes,
	}.Build()
	File_nebius_iam_v1_federated_credentials_proto = out.File
	file_nebius_iam_v1_federated_credentials_proto_goTypes = nil
	file_nebius_iam_v1_federated_credentials_proto_depIdxs = nil
}
