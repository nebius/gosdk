// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.25.1
// source: nebius/iam/v1/static_key.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StaticKeySpec_ClientService int32

const (
	StaticKeySpec_CLIENT_SERVICE_UNSPECIFIED StaticKeySpec_ClientService = 0
	StaticKeySpec_OBSERVABILITY              StaticKeySpec_ClientService = 1
	StaticKeySpec_CONTAINER_REGISTRY         StaticKeySpec_ClientService = 2
)

// Enum value maps for StaticKeySpec_ClientService.
var (
	StaticKeySpec_ClientService_name = map[int32]string{
		0: "CLIENT_SERVICE_UNSPECIFIED",
		1: "OBSERVABILITY",
		2: "CONTAINER_REGISTRY",
	}
	StaticKeySpec_ClientService_value = map[string]int32{
		"CLIENT_SERVICE_UNSPECIFIED": 0,
		"OBSERVABILITY":              1,
		"CONTAINER_REGISTRY":         2,
	}
)

func (x StaticKeySpec_ClientService) Enum() *StaticKeySpec_ClientService {
	p := new(StaticKeySpec_ClientService)
	*p = x
	return p
}

func (x StaticKeySpec_ClientService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StaticKeySpec_ClientService) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_iam_v1_static_key_proto_enumTypes[0].Descriptor()
}

func (StaticKeySpec_ClientService) Type() protoreflect.EnumType {
	return &file_nebius_iam_v1_static_key_proto_enumTypes[0]
}

func (x StaticKeySpec_ClientService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StaticKeySpec_ClientService.Descriptor instead.
func (StaticKeySpec_ClientService) EnumDescriptor() ([]byte, []int) {
	return file_nebius_iam_v1_static_key_proto_rawDescGZIP(), []int{1, 0}
}

type StaticKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *StaticKeySpec         `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *StaticKeyStatus       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticKey) Reset() {
	*x = StaticKey{}
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticKey) ProtoMessage() {}

func (x *StaticKey) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticKey.ProtoReflect.Descriptor instead.
func (*StaticKey) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_static_key_proto_rawDescGZIP(), []int{0}
}

func (x *StaticKey) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StaticKey) GetSpec() *StaticKeySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *StaticKey) GetStatus() *StaticKeyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StaticKeySpec struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Account       *Account                    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                                 // account of the static key. only service accounts are supported for now
	Service       StaticKeySpec_ClientService `protobuf:"varint,2,opt,name=service,proto3,enum=nebius.iam.v1.StaticKeySpec_ClientService" json:"service,omitempty"` // service static key is to be used for
	ExpiresAt     *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`                                             // when will the static key expire
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticKeySpec) Reset() {
	*x = StaticKeySpec{}
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticKeySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticKeySpec) ProtoMessage() {}

func (x *StaticKeySpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticKeySpec.ProtoReflect.Descriptor instead.
func (*StaticKeySpec) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_static_key_proto_rawDescGZIP(), []int{1}
}

func (x *StaticKeySpec) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *StaticKeySpec) GetService() StaticKeySpec_ClientService {
	if x != nil {
		return x.Service
	}
	return StaticKeySpec_CLIENT_SERVICE_UNSPECIFIED
}

func (x *StaticKeySpec) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type StaticKeyStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticKeyStatus) Reset() {
	*x = StaticKeyStatus{}
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticKeyStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticKeyStatus) ProtoMessage() {}

func (x *StaticKeyStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_iam_v1_static_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticKeyStatus.ProtoReflect.Descriptor instead.
func (*StaticKeyStatus) Descriptor() ([]byte, []int) {
	return file_nebius_iam_v1_static_key_proto_rawDescGZIP(), []int{2}
}

func (x *StaticKeyStatus) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

var File_nebius_iam_v1_static_key_proto protoreflect.FileDescriptor

var file_nebius_iam_v1_static_key_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6e,
	0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x04, 0xba, 0x4a, 0x01, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x04, 0xba,
	0x4a, 0x01, 0x02, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41,
	0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x02,
	0x22, 0x29, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x55, 0x0a, 0x14, 0x61,
	0x69, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x42, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67, 0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nebius_iam_v1_static_key_proto_rawDescOnce sync.Once
	file_nebius_iam_v1_static_key_proto_rawDescData = file_nebius_iam_v1_static_key_proto_rawDesc
)

func file_nebius_iam_v1_static_key_proto_rawDescGZIP() []byte {
	file_nebius_iam_v1_static_key_proto_rawDescOnce.Do(func() {
		file_nebius_iam_v1_static_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebius_iam_v1_static_key_proto_rawDescData)
	})
	return file_nebius_iam_v1_static_key_proto_rawDescData
}

var file_nebius_iam_v1_static_key_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_iam_v1_static_key_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nebius_iam_v1_static_key_proto_goTypes = []any{
	(StaticKeySpec_ClientService)(0), // 0: nebius.iam.v1.StaticKeySpec.ClientService
	(*StaticKey)(nil),                // 1: nebius.iam.v1.StaticKey
	(*StaticKeySpec)(nil),            // 2: nebius.iam.v1.StaticKeySpec
	(*StaticKeyStatus)(nil),          // 3: nebius.iam.v1.StaticKeyStatus
	(*v1.ResourceMetadata)(nil),      // 4: nebius.common.v1.ResourceMetadata
	(*Account)(nil),                  // 5: nebius.iam.v1.Account
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
}
var file_nebius_iam_v1_static_key_proto_depIdxs = []int32{
	4, // 0: nebius.iam.v1.StaticKey.metadata:type_name -> nebius.common.v1.ResourceMetadata
	2, // 1: nebius.iam.v1.StaticKey.spec:type_name -> nebius.iam.v1.StaticKeySpec
	3, // 2: nebius.iam.v1.StaticKey.status:type_name -> nebius.iam.v1.StaticKeyStatus
	5, // 3: nebius.iam.v1.StaticKeySpec.account:type_name -> nebius.iam.v1.Account
	0, // 4: nebius.iam.v1.StaticKeySpec.service:type_name -> nebius.iam.v1.StaticKeySpec.ClientService
	6, // 5: nebius.iam.v1.StaticKeySpec.expiresAt:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_nebius_iam_v1_static_key_proto_init() }
func file_nebius_iam_v1_static_key_proto_init() {
	if File_nebius_iam_v1_static_key_proto != nil {
		return
	}
	file_nebius_iam_v1_access_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebius_iam_v1_static_key_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_iam_v1_static_key_proto_goTypes,
		DependencyIndexes: file_nebius_iam_v1_static_key_proto_depIdxs,
		EnumInfos:         file_nebius_iam_v1_static_key_proto_enumTypes,
		MessageInfos:      file_nebius_iam_v1_static_key_proto_msgTypes,
	}.Build()
	File_nebius_iam_v1_static_key_proto = out.File
	file_nebius_iam_v1_static_key_proto_rawDesc = nil
	file_nebius_iam_v1_static_key_proto_goTypes = nil
	file_nebius_iam_v1_static_key_proto_depIdxs = nil
}
