// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/mk8s/v1/cluster_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ClusterSpec           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateClusterRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateClusterRequest) GetSpec() *ClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GetClusterRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceVersion string                 `protobuf:"bytes,2,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetClusterRequest) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the IAM container we are listing the resources in.
	ParentId string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Specifies the maximum number of items to return in the response.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for pagination, allowing the retrieval of the next set of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Cluster             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListClustersResponse) GetItems() []*Cluster {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata associated with the instance.
	// Includes ID of the instance to update.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Updated specifications for the instance.
	Spec          *ClusterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateClusterRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateClusterRequest) GetSpec() *ClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListClusterControlPlaneVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterControlPlaneVersionsRequest) Reset() {
	*x = ListClusterControlPlaneVersionsRequest{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterControlPlaneVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterControlPlaneVersionsRequest) ProtoMessage() {}

func (x *ListClusterControlPlaneVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterControlPlaneVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterControlPlaneVersionsRequest) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

type ListClusterControlPlaneVersionsResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Items         []*ClusterControlPlaneVersion `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterControlPlaneVersionsResponse) Reset() {
	*x = ListClusterControlPlaneVersionsResponse{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterControlPlaneVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterControlPlaneVersionsResponse) ProtoMessage() {}

func (x *ListClusterControlPlaneVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterControlPlaneVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterControlPlaneVersionsResponse) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListClusterControlPlaneVersionsResponse) GetItems() []*ClusterControlPlaneVersion {
	if x != nil {
		return x.Items
	}
	return nil
}

type ClusterControlPlaneVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format of the version includes only MAJOR.MINOR, the same as can be passed to cluster creation API. For example "1.31".
	Version       string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterControlPlaneVersion) Reset() {
	*x = ClusterControlPlaneVersion{}
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterControlPlaneVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterControlPlaneVersion) ProtoMessage() {}

func (x *ClusterControlPlaneVersion) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_cluster_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterControlPlaneVersion.ProtoReflect.Descriptor instead.
func (*ClusterControlPlaneVersion) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *ClusterControlPlaneVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_nebius_mk8s_v1_cluster_service_proto protoreflect.FileDescriptor

const file_nebius_mk8s_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	"$nebius/mk8s/v1/cluster_service.proto\x12\x0enebius.mk8s.v1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a nebius/common/v1/operation.proto\x1a\x1cnebius/mk8s/v1/cluster.proto\"\x97\x01\n" +
	"\x14CreateClusterRequest\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x127\n" +
	"\x04spec\x18\x02 \x01(\v2\x1b.nebius.mk8s.v1.ClusterSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\"V\n" +
	"\x11GetClusterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12)\n" +
	"\x10resource_version\x18\x02 \x01(\tR\x0fresourceVersion\"v\n" +
	"\x13ListClustersRequest\x12#\n" +
	"\tparent_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bparentId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"m\n" +
	"\x14ListClustersResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.nebius.mk8s.v1.ClusterR\x05items\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x8f\x01\n" +
	"\x14UpdateClusterRequest\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12/\n" +
	"\x04spec\x18\x02 \x01(\v2\x1b.nebius.mk8s.v1.ClusterSpecR\x04spec\".\n" +
	"\x14DeleteClusterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\"(\n" +
	"&ListClusterControlPlaneVersionsRequest\"k\n" +
	"'ListClusterControlPlaneVersionsResponse\x12@\n" +
	"\x05items\x18\x01 \x03(\v2*.nebius.mk8s.v1.ClusterControlPlaneVersionR\x05items\"6\n" +
	"\x1aClusterControlPlaneVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion2\xee\x04\n" +
	"\x0eClusterService\x12A\n" +
	"\x03Get\x12!.nebius.mk8s.v1.GetClusterRequest\x1a\x17.nebius.mk8s.v1.Cluster\x12H\n" +
	"\tGetByName\x12\".nebius.common.v1.GetByNameRequest\x1a\x17.nebius.mk8s.v1.Cluster\x12Q\n" +
	"\x04List\x12#.nebius.mk8s.v1.ListClustersRequest\x1a$.nebius.mk8s.v1.ListClustersResponse\x12K\n" +
	"\x06Create\x12$.nebius.mk8s.v1.CreateClusterRequest\x1a\x1b.nebius.common.v1.Operation\x12K\n" +
	"\x06Update\x12$.nebius.mk8s.v1.UpdateClusterRequest\x1a\x1b.nebius.common.v1.Operation\x12K\n" +
	"\x06Delete\x12$.nebius.mk8s.v1.DeleteClusterRequest\x1a\x1b.nebius.common.v1.Operation\x12\x8b\x01\n" +
	"\x18ListControlPlaneVersions\x126.nebius.mk8s.v1.ListClusterControlPlaneVersionsRequest\x1a7.nebius.mk8s.v1.ListClusterControlPlaneVersionsResponse\x1a\a\xbaJ\x04mk8sB\\\n" +
	"\x15ai.nebius.pub.mk8s.v1B\x13ClusterServiceProtoP\x01Z,github.com/nebius/gosdk/proto/nebius/mk8s/v1b\x06proto3"

var (
	file_nebius_mk8s_v1_cluster_service_proto_rawDescOnce sync.Once
	file_nebius_mk8s_v1_cluster_service_proto_rawDescData []byte
)

func file_nebius_mk8s_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_nebius_mk8s_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_nebius_mk8s_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_mk8s_v1_cluster_service_proto_rawDesc), len(file_nebius_mk8s_v1_cluster_service_proto_rawDesc)))
	})
	return file_nebius_mk8s_v1_cluster_service_proto_rawDescData
}

var file_nebius_mk8s_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_nebius_mk8s_v1_cluster_service_proto_goTypes = []any{
	(*CreateClusterRequest)(nil),                    // 0: nebius.mk8s.v1.CreateClusterRequest
	(*GetClusterRequest)(nil),                       // 1: nebius.mk8s.v1.GetClusterRequest
	(*ListClustersRequest)(nil),                     // 2: nebius.mk8s.v1.ListClustersRequest
	(*ListClustersResponse)(nil),                    // 3: nebius.mk8s.v1.ListClustersResponse
	(*UpdateClusterRequest)(nil),                    // 4: nebius.mk8s.v1.UpdateClusterRequest
	(*DeleteClusterRequest)(nil),                    // 5: nebius.mk8s.v1.DeleteClusterRequest
	(*ListClusterControlPlaneVersionsRequest)(nil),  // 6: nebius.mk8s.v1.ListClusterControlPlaneVersionsRequest
	(*ListClusterControlPlaneVersionsResponse)(nil), // 7: nebius.mk8s.v1.ListClusterControlPlaneVersionsResponse
	(*ClusterControlPlaneVersion)(nil),              // 8: nebius.mk8s.v1.ClusterControlPlaneVersion
	(*v1.ResourceMetadata)(nil),                     // 9: nebius.common.v1.ResourceMetadata
	(*ClusterSpec)(nil),                             // 10: nebius.mk8s.v1.ClusterSpec
	(*Cluster)(nil),                                 // 11: nebius.mk8s.v1.Cluster
	(*v1.GetByNameRequest)(nil),                     // 12: nebius.common.v1.GetByNameRequest
	(*v1.Operation)(nil),                            // 13: nebius.common.v1.Operation
}
var file_nebius_mk8s_v1_cluster_service_proto_depIdxs = []int32{
	9,  // 0: nebius.mk8s.v1.CreateClusterRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	10, // 1: nebius.mk8s.v1.CreateClusterRequest.spec:type_name -> nebius.mk8s.v1.ClusterSpec
	11, // 2: nebius.mk8s.v1.ListClustersResponse.items:type_name -> nebius.mk8s.v1.Cluster
	9,  // 3: nebius.mk8s.v1.UpdateClusterRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	10, // 4: nebius.mk8s.v1.UpdateClusterRequest.spec:type_name -> nebius.mk8s.v1.ClusterSpec
	8,  // 5: nebius.mk8s.v1.ListClusterControlPlaneVersionsResponse.items:type_name -> nebius.mk8s.v1.ClusterControlPlaneVersion
	1,  // 6: nebius.mk8s.v1.ClusterService.Get:input_type -> nebius.mk8s.v1.GetClusterRequest
	12, // 7: nebius.mk8s.v1.ClusterService.GetByName:input_type -> nebius.common.v1.GetByNameRequest
	2,  // 8: nebius.mk8s.v1.ClusterService.List:input_type -> nebius.mk8s.v1.ListClustersRequest
	0,  // 9: nebius.mk8s.v1.ClusterService.Create:input_type -> nebius.mk8s.v1.CreateClusterRequest
	4,  // 10: nebius.mk8s.v1.ClusterService.Update:input_type -> nebius.mk8s.v1.UpdateClusterRequest
	5,  // 11: nebius.mk8s.v1.ClusterService.Delete:input_type -> nebius.mk8s.v1.DeleteClusterRequest
	6,  // 12: nebius.mk8s.v1.ClusterService.ListControlPlaneVersions:input_type -> nebius.mk8s.v1.ListClusterControlPlaneVersionsRequest
	11, // 13: nebius.mk8s.v1.ClusterService.Get:output_type -> nebius.mk8s.v1.Cluster
	11, // 14: nebius.mk8s.v1.ClusterService.GetByName:output_type -> nebius.mk8s.v1.Cluster
	3,  // 15: nebius.mk8s.v1.ClusterService.List:output_type -> nebius.mk8s.v1.ListClustersResponse
	13, // 16: nebius.mk8s.v1.ClusterService.Create:output_type -> nebius.common.v1.Operation
	13, // 17: nebius.mk8s.v1.ClusterService.Update:output_type -> nebius.common.v1.Operation
	13, // 18: nebius.mk8s.v1.ClusterService.Delete:output_type -> nebius.common.v1.Operation
	7,  // 19: nebius.mk8s.v1.ClusterService.ListControlPlaneVersions:output_type -> nebius.mk8s.v1.ListClusterControlPlaneVersionsResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_nebius_mk8s_v1_cluster_service_proto_init() }
func file_nebius_mk8s_v1_cluster_service_proto_init() {
	if File_nebius_mk8s_v1_cluster_service_proto != nil {
		return
	}
	file_nebius_mk8s_v1_cluster_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_mk8s_v1_cluster_service_proto_rawDesc), len(file_nebius_mk8s_v1_cluster_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_mk8s_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_nebius_mk8s_v1_cluster_service_proto_depIdxs,
		MessageInfos:      file_nebius_mk8s_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_nebius_mk8s_v1_cluster_service_proto = out.File
	file_nebius_mk8s_v1_cluster_service_proto_goTypes = nil
	file_nebius_mk8s_v1_cluster_service_proto_depIdxs = nil
}
