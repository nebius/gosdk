// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/mk8s/v1/instance_template.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiskSpec_DiskType int32

const (
	DiskSpec_UNSPECIFIED                DiskSpec_DiskType = 0
	DiskSpec_NETWORK_SSD                DiskSpec_DiskType = 1
	DiskSpec_NETWORK_HDD                DiskSpec_DiskType = 2
	DiskSpec_NETWORK_SSD_IO_M3          DiskSpec_DiskType = 3
	DiskSpec_NETWORK_SSD_NON_REPLICATED DiskSpec_DiskType = 4
)

// Enum value maps for DiskSpec_DiskType.
var (
	DiskSpec_DiskType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NETWORK_SSD",
		2: "NETWORK_HDD",
		3: "NETWORK_SSD_IO_M3",
		4: "NETWORK_SSD_NON_REPLICATED",
	}
	DiskSpec_DiskType_value = map[string]int32{
		"UNSPECIFIED":                0,
		"NETWORK_SSD":                1,
		"NETWORK_HDD":                2,
		"NETWORK_SSD_IO_M3":          3,
		"NETWORK_SSD_NON_REPLICATED": 4,
	}
)

func (x DiskSpec_DiskType) Enum() *DiskSpec_DiskType {
	p := new(DiskSpec_DiskType)
	*p = x
	return p
}

func (x DiskSpec_DiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskSpec_DiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_mk8s_v1_instance_template_proto_enumTypes[0].Descriptor()
}

func (DiskSpec_DiskType) Type() protoreflect.EnumType {
	return &file_nebius_mk8s_v1_instance_template_proto_enumTypes[0]
}

func (x DiskSpec_DiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskSpec_DiskType.Descriptor instead.
func (DiskSpec_DiskType) EnumDescriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_instance_template_proto_rawDescGZIP(), []int{0, 0}
}

type DiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Size:
	//
	//	*DiskSpec_SizeBytes
	//	*DiskSpec_SizeKibibytes
	//	*DiskSpec_SizeMebibytes
	//	*DiskSpec_SizeGibibytes
	Size           isDiskSpec_Size   `protobuf_oneof:"size"`
	BlockSizeBytes int64             `protobuf:"varint,5,opt,name=block_size_bytes,json=blockSizeBytes,proto3" json:"block_size_bytes,omitempty"`
	Type           DiskSpec_DiskType `protobuf:"varint,6,opt,name=type,proto3,enum=nebius.mk8s.v1.DiskSpec_DiskType" json:"type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiskSpec) Reset() {
	*x = DiskSpec{}
	mi := &file_nebius_mk8s_v1_instance_template_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSpec) ProtoMessage() {}

func (x *DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_instance_template_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSpec.ProtoReflect.Descriptor instead.
func (*DiskSpec) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_instance_template_proto_rawDescGZIP(), []int{0}
}

func (x *DiskSpec) GetSize() isDiskSpec_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *DiskSpec) GetSizeBytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeBytes); ok {
			return x.SizeBytes
		}
	}
	return 0
}

func (x *DiskSpec) GetSizeKibibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeKibibytes); ok {
			return x.SizeKibibytes
		}
	}
	return 0
}

func (x *DiskSpec) GetSizeMebibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeMebibytes); ok {
			return x.SizeMebibytes
		}
	}
	return 0
}

func (x *DiskSpec) GetSizeGibibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeGibibytes); ok {
			return x.SizeGibibytes
		}
	}
	return 0
}

func (x *DiskSpec) GetBlockSizeBytes() int64 {
	if x != nil {
		return x.BlockSizeBytes
	}
	return 0
}

func (x *DiskSpec) GetType() DiskSpec_DiskType {
	if x != nil {
		return x.Type
	}
	return DiskSpec_UNSPECIFIED
}

type isDiskSpec_Size interface {
	isDiskSpec_Size()
}

type DiskSpec_SizeBytes struct {
	SizeBytes int64 `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,proto3,oneof"`
}

type DiskSpec_SizeKibibytes struct {
	SizeKibibytes int64 `protobuf:"varint,2,opt,name=size_kibibytes,json=sizeKibibytes,proto3,oneof"`
}

type DiskSpec_SizeMebibytes struct {
	SizeMebibytes int64 `protobuf:"varint,3,opt,name=size_mebibytes,json=sizeMebibytes,proto3,oneof"`
}

type DiskSpec_SizeGibibytes struct {
	SizeGibibytes int64 `protobuf:"varint,4,opt,name=size_gibibytes,json=sizeGibibytes,proto3,oneof"`
}

func (*DiskSpec_SizeBytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeKibibytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeMebibytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeGibibytes) isDiskSpec_Size() {}

type ResourcesSpec struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Platform string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	// Types that are valid to be assigned to Size:
	//
	//	*ResourcesSpec_Preset
	Size          isResourcesSpec_Size `protobuf_oneof:"size"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcesSpec) Reset() {
	*x = ResourcesSpec{}
	mi := &file_nebius_mk8s_v1_instance_template_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesSpec) ProtoMessage() {}

func (x *ResourcesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_mk8s_v1_instance_template_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesSpec.ProtoReflect.Descriptor instead.
func (*ResourcesSpec) Descriptor() ([]byte, []int) {
	return file_nebius_mk8s_v1_instance_template_proto_rawDescGZIP(), []int{1}
}

func (x *ResourcesSpec) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ResourcesSpec) GetSize() isResourcesSpec_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *ResourcesSpec) GetPreset() string {
	if x != nil {
		if x, ok := x.Size.(*ResourcesSpec_Preset); ok {
			return x.Preset
		}
	}
	return ""
}

type isResourcesSpec_Size interface {
	isResourcesSpec_Size()
}

type ResourcesSpec_Preset struct {
	Preset string `protobuf:"bytes,2,opt,name=preset,proto3,oneof"`
}

func (*ResourcesSpec_Preset) isResourcesSpec_Size() {}

var File_nebius_mk8s_v1_instance_template_proto protoreflect.FileDescriptor

const file_nebius_mk8s_v1_instance_template_proto_rawDesc = "" +
	"\n" +
	"&nebius/mk8s/v1/instance_template.proto\x12\x0enebius.mk8s.v1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\"\xc0\x03\n" +
	"\bDiskSpec\x12-\n" +
	"\n" +
	"size_bytes\x18\x01 \x01(\x03B\f\xbaH\t\"\a(\x80\x80\x80\x80\x80\x02H\x00R\tsizeBytes\x123\n" +
	"\x0esize_kibibytes\x18\x02 \x01(\x03B\n" +
	"\xbaH\a\"\x05(\x80\x80\x80 H\x00R\rsizeKibibytes\x122\n" +
	"\x0esize_mebibytes\x18\x03 \x01(\x03B\t\xbaH\x06\"\x04(\x80\x80\x04H\x00R\rsizeMebibytes\x120\n" +
	"\x0esize_gibibytes\x18\x04 \x01(\x03B\a\xbaH\x04\"\x02(@H\x00R\rsizeGibibytes\x12(\n" +
	"\x10block_size_bytes\x18\x05 \x01(\x03R\x0eblockSizeBytes\x12;\n" +
	"\x04type\x18\x06 \x01(\x0e2!.nebius.mk8s.v1.DiskSpec.DiskTypeB\x04\xbaJ\x01\aR\x04type\"t\n" +
	"\bDiskType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vNETWORK_SSD\x10\x01\x12\x0f\n" +
	"\vNETWORK_HDD\x10\x02\x12\x15\n" +
	"\x11NETWORK_SSD_IO_M3\x10\x03\x12\x1e\n" +
	"\x1aNETWORK_SSD_NON_REPLICATED\x10\x04B\r\n" +
	"\x04size\x12\x05\xbaH\x02\b\x01\"\\\n" +
	"\rResourcesSpec\x12\"\n" +
	"\bplatform\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bplatform\x12\x18\n" +
	"\x06preset\x18\x02 \x01(\tH\x00R\x06presetB\r\n" +
	"\x04size\x12\x05\xbaH\x02\b\x01B^\n" +
	"\x15ai.nebius.pub.mk8s.v1B\x15InstanceTemplateProtoP\x01Z,github.com/nebius/gosdk/proto/nebius/mk8s/v1b\x06proto3"

var (
	file_nebius_mk8s_v1_instance_template_proto_rawDescOnce sync.Once
	file_nebius_mk8s_v1_instance_template_proto_rawDescData []byte
)

func file_nebius_mk8s_v1_instance_template_proto_rawDescGZIP() []byte {
	file_nebius_mk8s_v1_instance_template_proto_rawDescOnce.Do(func() {
		file_nebius_mk8s_v1_instance_template_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_mk8s_v1_instance_template_proto_rawDesc), len(file_nebius_mk8s_v1_instance_template_proto_rawDesc)))
	})
	return file_nebius_mk8s_v1_instance_template_proto_rawDescData
}

var file_nebius_mk8s_v1_instance_template_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_mk8s_v1_instance_template_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_nebius_mk8s_v1_instance_template_proto_goTypes = []any{
	(DiskSpec_DiskType)(0), // 0: nebius.mk8s.v1.DiskSpec.DiskType
	(*DiskSpec)(nil),       // 1: nebius.mk8s.v1.DiskSpec
	(*ResourcesSpec)(nil),  // 2: nebius.mk8s.v1.ResourcesSpec
}
var file_nebius_mk8s_v1_instance_template_proto_depIdxs = []int32{
	0, // 0: nebius.mk8s.v1.DiskSpec.type:type_name -> nebius.mk8s.v1.DiskSpec.DiskType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nebius_mk8s_v1_instance_template_proto_init() }
func file_nebius_mk8s_v1_instance_template_proto_init() {
	if File_nebius_mk8s_v1_instance_template_proto != nil {
		return
	}
	file_nebius_mk8s_v1_instance_template_proto_msgTypes[0].OneofWrappers = []any{
		(*DiskSpec_SizeBytes)(nil),
		(*DiskSpec_SizeKibibytes)(nil),
		(*DiskSpec_SizeMebibytes)(nil),
		(*DiskSpec_SizeGibibytes)(nil),
	}
	file_nebius_mk8s_v1_instance_template_proto_msgTypes[1].OneofWrappers = []any{
		(*ResourcesSpec_Preset)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_mk8s_v1_instance_template_proto_rawDesc), len(file_nebius_mk8s_v1_instance_template_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_mk8s_v1_instance_template_proto_goTypes,
		DependencyIndexes: file_nebius_mk8s_v1_instance_template_proto_depIdxs,
		EnumInfos:         file_nebius_mk8s_v1_instance_template_proto_enumTypes,
		MessageInfos:      file_nebius_mk8s_v1_instance_template_proto_msgTypes,
	}.Build()
	File_nebius_mk8s_v1_instance_template_proto = out.File
	file_nebius_mk8s_v1_instance_template_proto_goTypes = nil
	file_nebius_mk8s_v1_instance_template_proto_depIdxs = nil
}
