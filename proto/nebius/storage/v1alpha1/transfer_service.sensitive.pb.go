// Code generated by protoc-gen-sensitive. DO NOT EDIT.

package v1alpha1

import (
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	slog "log/slog"
)

// func (x *GetTransferRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetTransferRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ListTransfersRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ListTransfersRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// Sanitize mutates [ListTransfersResponse] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *ListTransfersResponse) Sanitize() {
	if x == nil {
		return
	}
	for _, y := range x.Items {
		y.Sanitize()
	}
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [ListTransfersResponse].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *ListTransfersResponse
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [ListTransfersResponse], use the following code:
//
//	var original *ListTransfersResponse
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*ListTransfersResponse)
func (x *ListTransfersResponse) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*ListTransfersResponse) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperListTransfersResponse)(c))
}

// wrapperListTransfersResponse is used to return [ListTransfersResponse] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperListTransfersResponse ListTransfersResponse

func (w *wrapperListTransfersResponse) String() string {
	return (*ListTransfersResponse)(w).String()
}

func (*wrapperListTransfersResponse) ProtoMessage() {}

func (w *wrapperListTransfersResponse) ProtoReflect() protoreflect.Message {
	return (*ListTransfersResponse)(w).ProtoReflect()
}

// Sanitize mutates [CreateTransferRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *CreateTransferRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [CreateTransferRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *CreateTransferRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [CreateTransferRequest], use the following code:
//
//	var original *CreateTransferRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*CreateTransferRequest)
func (x *CreateTransferRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*CreateTransferRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperCreateTransferRequest)(c))
}

// wrapperCreateTransferRequest is used to return [CreateTransferRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperCreateTransferRequest CreateTransferRequest

func (w *wrapperCreateTransferRequest) String() string {
	return (*CreateTransferRequest)(w).String()
}

func (*wrapperCreateTransferRequest) ProtoMessage() {}

func (w *wrapperCreateTransferRequest) ProtoReflect() protoreflect.Message {
	return (*CreateTransferRequest)(w).ProtoReflect()
}

// Sanitize mutates [UpdateTransferRequest] to remove/mask all sensitive values.
// Sensitive fields are marked with [(nebius.sensitive) = true].
func (x *UpdateTransferRequest) Sanitize() {
	if x == nil {
		return
	}
	x.Spec.Sanitize()
}

// LogValue implements [slog.LogValuer] interface. It returns sanitized copy of [UpdateTransferRequest].
// Properly implemented [slog.Handler] must call LogValue, so sensitive values are not logged.
// Sensitive strings and bytes are masked with "**HIDDEN**", other sensitive fields are omitted.
//
// Returning value has kind [slog.KindAny]. To extract [proto.Message], use the following code:
//
//	var original *UpdateTransferRequest
//	sanitized := original.LogValue().Any().(proto.Message)
//
// If you need to extract [UpdateTransferRequest], use the following code:
//
//	var original *UpdateTransferRequest
//	sanitized := original.LogValue().Any().(proto.Message).ProtoReflect().Interface().(*UpdateTransferRequest)
func (x *UpdateTransferRequest) LogValue() slog.Value {
	if x == nil {
		return slog.AnyValue(x)
	}
	c := proto.Clone(x).(*UpdateTransferRequest) // TODO: generate static cloner without protoreflect
	c.Sanitize()
	return slog.AnyValue((*wrapperUpdateTransferRequest)(c))
}

// wrapperUpdateTransferRequest is used to return [UpdateTransferRequest] not implementing [slog.LogValuer] to avoid recursion while resolving.
type wrapperUpdateTransferRequest UpdateTransferRequest

func (w *wrapperUpdateTransferRequest) String() string {
	return (*UpdateTransferRequest)(w).String()
}

func (*wrapperUpdateTransferRequest) ProtoMessage() {}

func (w *wrapperUpdateTransferRequest) ProtoReflect() protoreflect.Message {
	return (*UpdateTransferRequest)(w).ProtoReflect()
}

// func (x *StopTransferRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *StopTransferRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *ResumeTransferRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *ResumeTransferRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *DeleteTransferRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *DeleteTransferRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *GetIterationHistoryRequest) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetIterationHistoryRequest) LogValue() slog.Value // is not generated as no sensitive fields found

// func (x *GetIterationHistoryResponse) Sanitize()            // is not generated as no sensitive fields found
// func (x *GetIterationHistoryResponse) LogValue() slog.Value // is not generated as no sensitive fields found
