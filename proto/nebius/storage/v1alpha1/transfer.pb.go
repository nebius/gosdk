// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/storage/v1alpha1/transfer.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferSpec_OverwriteStrategy int32

const (
	TransferSpec_OVERWRITE_STRATEGY_UNSPECIFIED TransferSpec_OverwriteStrategy = 0
	// Never overwrite objects that exist in the destination.
	// If object exists in destination bucket, skip it.
	// Safest option to prevent data loss.
	TransferSpec_NEVER TransferSpec_OverwriteStrategy = 1
	// Overwrite only if source object is newer than destination.
	// Comparison based on Last-Modified timestamp.
	// Recommended for incremental sync scenarios.
	TransferSpec_IF_NEWER TransferSpec_OverwriteStrategy = 2
	// Always overwrite destination objects unconditionally.
	// Use with caution - may cause data loss in destination.
	// Suitable for full bucket synchronization.
	TransferSpec_ALWAYS TransferSpec_OverwriteStrategy = 3
)

// Enum value maps for TransferSpec_OverwriteStrategy.
var (
	TransferSpec_OverwriteStrategy_name = map[int32]string{
		0: "OVERWRITE_STRATEGY_UNSPECIFIED",
		1: "NEVER",
		2: "IF_NEWER",
		3: "ALWAYS",
	}
	TransferSpec_OverwriteStrategy_value = map[string]int32{
		"OVERWRITE_STRATEGY_UNSPECIFIED": 0,
		"NEVER":                          1,
		"IF_NEWER":                       2,
		"ALWAYS":                         3,
	}
)

func (x TransferSpec_OverwriteStrategy) Enum() *TransferSpec_OverwriteStrategy {
	p := new(TransferSpec_OverwriteStrategy)
	*p = x
	return p
}

func (x TransferSpec_OverwriteStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferSpec_OverwriteStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_storage_v1alpha1_transfer_proto_enumTypes[0].Descriptor()
}

func (TransferSpec_OverwriteStrategy) Type() protoreflect.EnumType {
	return &file_nebius_storage_v1alpha1_transfer_proto_enumTypes[0]
}

func (x TransferSpec_OverwriteStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferSpec_OverwriteStrategy.Descriptor instead.
func (TransferSpec_OverwriteStrategy) EnumDescriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 0}
}

type TransferStatus_State int32

const (
	TransferStatus_STATE_UNSPECIFIED TransferStatus_State = 0
	TransferStatus_ACTIVE            TransferStatus_State = 1
	TransferStatus_STOPPING          TransferStatus_State = 2
	TransferStatus_STOPPED           TransferStatus_State = 3
	TransferStatus_FAILING           TransferStatus_State = 4
	TransferStatus_FAILED            TransferStatus_State = 5
)

// Enum value maps for TransferStatus_State.
var (
	TransferStatus_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ACTIVE",
		2: "STOPPING",
		3: "STOPPED",
		4: "FAILING",
		5: "FAILED",
	}
	TransferStatus_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ACTIVE":            1,
		"STOPPING":          2,
		"STOPPED":           3,
		"FAILING":           4,
		"FAILED":            5,
	}
)

func (x TransferStatus_State) Enum() *TransferStatus_State {
	p := new(TransferStatus_State)
	*p = x
	return p
}

func (x TransferStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_storage_v1alpha1_transfer_proto_enumTypes[1].Descriptor()
}

func (TransferStatus_State) Type() protoreflect.EnumType {
	return &file_nebius_storage_v1alpha1_transfer_proto_enumTypes[1]
}

func (x TransferStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus_State.Descriptor instead.
func (TransferStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{2, 0}
}

type TransferStatus_SuspensionState int32

const (
	TransferStatus_SUSPENSION_STATE_UNSPECIFIED TransferStatus_SuspensionState = 0
	TransferStatus_NOT_SUSPENDED                TransferStatus_SuspensionState = 1
	TransferStatus_SUSPENDED                    TransferStatus_SuspensionState = 2
)

// Enum value maps for TransferStatus_SuspensionState.
var (
	TransferStatus_SuspensionState_name = map[int32]string{
		0: "SUSPENSION_STATE_UNSPECIFIED",
		1: "NOT_SUSPENDED",
		2: "SUSPENDED",
	}
	TransferStatus_SuspensionState_value = map[string]int32{
		"SUSPENSION_STATE_UNSPECIFIED": 0,
		"NOT_SUSPENDED":                1,
		"SUSPENDED":                    2,
	}
)

func (x TransferStatus_SuspensionState) Enum() *TransferStatus_SuspensionState {
	p := new(TransferStatus_SuspensionState)
	*p = x
	return p
}

func (x TransferStatus_SuspensionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus_SuspensionState) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_storage_v1alpha1_transfer_proto_enumTypes[2].Descriptor()
}

func (TransferStatus_SuspensionState) Type() protoreflect.EnumType {
	return &file_nebius_storage_v1alpha1_transfer_proto_enumTypes[2]
}

func (x TransferStatus_SuspensionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus_SuspensionState.Descriptor instead.
func (TransferStatus_SuspensionState) EnumDescriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{2, 1}
}

type TransferIteration_State int32

const (
	TransferIteration_STATE_UNSPECIFIED TransferIteration_State = 0
	TransferIteration_IN_PROGRESS       TransferIteration_State = 1
	TransferIteration_COMPLETED         TransferIteration_State = 2
	TransferIteration_STOPPED           TransferIteration_State = 3
	TransferIteration_FAILED            TransferIteration_State = 4
)

// Enum value maps for TransferIteration_State.
var (
	TransferIteration_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "IN_PROGRESS",
		2: "COMPLETED",
		3: "STOPPED",
		4: "FAILED",
	}
	TransferIteration_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"IN_PROGRESS":       1,
		"COMPLETED":         2,
		"STOPPED":           3,
		"FAILED":            4,
	}
)

func (x TransferIteration_State) Enum() *TransferIteration_State {
	p := new(TransferIteration_State)
	*p = x
	return p
}

func (x TransferIteration_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferIteration_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_storage_v1alpha1_transfer_proto_enumTypes[3].Descriptor()
}

func (TransferIteration_State) Type() protoreflect.EnumType {
	return &file_nebius_storage_v1alpha1_transfer_proto_enumTypes[3]
}

func (x TransferIteration_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferIteration_State.Descriptor instead.
func (TransferIteration_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{3, 0}
}

type Transfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *TransferSpec          `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *TransferStatus        `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *Transfer) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Transfer) GetSpec() *TransferSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Transfer) GetStatus() *TransferStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type TransferSpec struct {
	state       protoimpl.MessageState          `protogen:"open.v1"`
	Source      *TransferSpec_SourceBucket      `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination *TransferSpec_DestinationBucket `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	// The stop condition is checked after every iteration. If the condition is met, the transfer will stop.
	//
	// Types that are valid to be assigned to StopCondition:
	//
	//	*TransferSpec_AfterOneIteration
	//	*TransferSpec_AfterNEmptyIterations
	//	*TransferSpec_Infinite
	StopCondition isTransferSpec_StopCondition `protobuf_oneof:"stop_condition"`
	// Time to wait between transfer iterations. Default is 15 minutes if not specified.
	InterIterationInterval *durationpb.Duration `protobuf:"bytes,6,opt,name=inter_iteration_interval,json=interIterationInterval,proto3" json:"inter_iteration_interval,omitempty"`
	// Overwrite strategy set logic of overwrite already existed objects in destination bucket.
	OverwriteStrategy TransferSpec_OverwriteStrategy `protobuf:"varint,7,opt,name=overwrite_strategy,json=overwriteStrategy,proto3,enum=nebius.storage.v1alpha1.TransferSpec_OverwriteStrategy" json:"overwrite_strategy,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TransferSpec) Reset() {
	*x = TransferSpec{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec) ProtoMessage() {}

func (x *TransferSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec.ProtoReflect.Descriptor instead.
func (*TransferSpec) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *TransferSpec) GetSource() *TransferSpec_SourceBucket {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *TransferSpec) GetDestination() *TransferSpec_DestinationBucket {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *TransferSpec) GetStopCondition() isTransferSpec_StopCondition {
	if x != nil {
		return x.StopCondition
	}
	return nil
}

func (x *TransferSpec) GetAfterOneIteration() *TransferSpec_StopConditionAfterOneIteration {
	if x != nil {
		if x, ok := x.StopCondition.(*TransferSpec_AfterOneIteration); ok {
			return x.AfterOneIteration
		}
	}
	return nil
}

func (x *TransferSpec) GetAfterNEmptyIterations() *TransferSpec_StopConditionAfterNEmptyIterations {
	if x != nil {
		if x, ok := x.StopCondition.(*TransferSpec_AfterNEmptyIterations); ok {
			return x.AfterNEmptyIterations
		}
	}
	return nil
}

func (x *TransferSpec) GetInfinite() *TransferSpec_StopConditionInfinite {
	if x != nil {
		if x, ok := x.StopCondition.(*TransferSpec_Infinite); ok {
			return x.Infinite
		}
	}
	return nil
}

func (x *TransferSpec) GetInterIterationInterval() *durationpb.Duration {
	if x != nil {
		return x.InterIterationInterval
	}
	return nil
}

func (x *TransferSpec) GetOverwriteStrategy() TransferSpec_OverwriteStrategy {
	if x != nil {
		return x.OverwriteStrategy
	}
	return TransferSpec_OVERWRITE_STRATEGY_UNSPECIFIED
}

type isTransferSpec_StopCondition interface {
	isTransferSpec_StopCondition()
}

type TransferSpec_AfterOneIteration struct {
	AfterOneIteration *TransferSpec_StopConditionAfterOneIteration `protobuf:"bytes,3,opt,name=after_one_iteration,json=afterOneIteration,proto3,oneof"`
}

type TransferSpec_AfterNEmptyIterations struct {
	AfterNEmptyIterations *TransferSpec_StopConditionAfterNEmptyIterations `protobuf:"bytes,4,opt,name=after_n_empty_iterations,json=afterNEmptyIterations,proto3,oneof"`
}

type TransferSpec_Infinite struct {
	// Infinite transfers do not stop automatically and can be stopped manually by the user.
	Infinite *TransferSpec_StopConditionInfinite `protobuf:"bytes,5,opt,name=infinite,proto3,oneof"`
}

func (*TransferSpec_AfterOneIteration) isTransferSpec_StopCondition() {}

func (*TransferSpec_AfterNEmptyIterations) isTransferSpec_StopCondition() {}

func (*TransferSpec_Infinite) isTransferSpec_StopCondition() {}

type TransferStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	State TransferStatus_State   `protobuf:"varint,1,opt,name=state,proto3,enum=nebius.storage.v1alpha1.TransferStatus_State" json:"state,omitempty"`
	// Error information if the transfer has failed.
	Error           string                         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SuspensionState TransferStatus_SuspensionState `protobuf:"varint,3,opt,name=suspension_state,json=suspensionState,proto3,enum=nebius.storage.v1alpha1.TransferStatus_SuspensionState" json:"suspension_state,omitempty"`
	LastIteration   *TransferIteration             `protobuf:"bytes,4,opt,name=last_iteration,json=lastIteration,proto3" json:"last_iteration,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferStatus) Reset() {
	*x = TransferStatus{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStatus) ProtoMessage() {}

func (x *TransferStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStatus.ProtoReflect.Descriptor instead.
func (*TransferStatus) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *TransferStatus) GetState() TransferStatus_State {
	if x != nil {
		return x.State
	}
	return TransferStatus_STATE_UNSPECIFIED
}

func (x *TransferStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TransferStatus) GetSuspensionState() TransferStatus_SuspensionState {
	if x != nil {
		return x.SuspensionState
	}
	return TransferStatus_SUSPENSION_STATE_UNSPECIFIED
}

func (x *TransferStatus) GetLastIteration() *TransferIteration {
	if x != nil {
		return x.LastIteration
	}
	return nil
}

type TransferIteration struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	SequenceNumber int64                   `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	State          TransferIteration_State `protobuf:"varint,2,opt,name=state,proto3,enum=nebius.storage.v1alpha1.TransferIteration_State" json:"state,omitempty"`
	// Human-readable error description. Populated only if state is FAILED.
	Error                  string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	StartTime              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ObjectsDiscoveredCount int64                  `protobuf:"varint,6,opt,name=objects_discovered_count,json=objectsDiscoveredCount,proto3" json:"objects_discovered_count,omitempty"`
	ObjectsMigratedCount   int64                  `protobuf:"varint,7,opt,name=objects_migrated_count,json=objectsMigratedCount,proto3" json:"objects_migrated_count,omitempty"`
	ObjectsSkippedCount    int64                  `protobuf:"varint,8,opt,name=objects_skipped_count,json=objectsSkippedCount,proto3" json:"objects_skipped_count,omitempty"`
	ObjectsMigratedSize    int64                  `protobuf:"varint,9,opt,name=objects_migrated_size,json=objectsMigratedSize,proto3" json:"objects_migrated_size,omitempty"`
	AverageThroughputBytes int64                  `protobuf:"varint,10,opt,name=average_throughput_bytes,json=averageThroughputBytes,proto3" json:"average_throughput_bytes,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TransferIteration) Reset() {
	*x = TransferIteration{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferIteration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferIteration) ProtoMessage() {}

func (x *TransferIteration) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferIteration.ProtoReflect.Descriptor instead.
func (*TransferIteration) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *TransferIteration) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *TransferIteration) GetState() TransferIteration_State {
	if x != nil {
		return x.State
	}
	return TransferIteration_STATE_UNSPECIFIED
}

func (x *TransferIteration) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TransferIteration) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TransferIteration) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TransferIteration) GetObjectsDiscoveredCount() int64 {
	if x != nil {
		return x.ObjectsDiscoveredCount
	}
	return 0
}

func (x *TransferIteration) GetObjectsMigratedCount() int64 {
	if x != nil {
		return x.ObjectsMigratedCount
	}
	return 0
}

func (x *TransferIteration) GetObjectsSkippedCount() int64 {
	if x != nil {
		return x.ObjectsSkippedCount
	}
	return 0
}

func (x *TransferIteration) GetObjectsMigratedSize() int64 {
	if x != nil {
		return x.ObjectsMigratedSize
	}
	return 0
}

func (x *TransferIteration) GetAverageThroughputBytes() int64 {
	if x != nil {
		return x.AverageThroughputBytes
	}
	return 0
}

type TransferSpec_SourceBucket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The endpoint must be in the form of a URL, starting with the protocol (https),
	// followed by the endpoint address without a trailing slash.
	// Example: https://storage.us-central1.nebius.cloud
	Endpoint   string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	BucketName string `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Region     string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// Credentials for accessing the source bucket. These credentials must have list and get permissions.
	// This parameter must be specified only during create operations.
	Credentials *TransferSpec_BucketCredentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Limiters applied to source bucket operations. These limits include all operations
	// required for transfer (HeadObject, GetObject, ListObjects). For details about
	// which operations are used, see public documentation: http://docs.nebius.com/object-storage/transfer/quickstart#background.
	//
	// Note: Since the service performs comparable request volumes and data transfers
	// to both source and destination, these limits will indirectly constrain
	// destination operations as well.
	Limiters      *TransferSpec_Limiters `protobuf:"bytes,5,opt,name=limiters,proto3" json:"limiters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_SourceBucket) Reset() {
	*x = TransferSpec_SourceBucket{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_SourceBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_SourceBucket) ProtoMessage() {}

func (x *TransferSpec_SourceBucket) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_SourceBucket.ProtoReflect.Descriptor instead.
func (*TransferSpec_SourceBucket) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TransferSpec_SourceBucket) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *TransferSpec_SourceBucket) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *TransferSpec_SourceBucket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TransferSpec_SourceBucket) GetCredentials() *TransferSpec_BucketCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *TransferSpec_SourceBucket) GetLimiters() *TransferSpec_Limiters {
	if x != nil {
		return x.Limiters
	}
	return nil
}

type TransferSpec_DestinationBucket struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	BucketName string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	// Credentials for accessing the destination bucket. These credentials must have head and write permissions.
	// This parameter must be specified only during create operations.
	Credentials   *TransferSpec_BucketCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_DestinationBucket) Reset() {
	*x = TransferSpec_DestinationBucket{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_DestinationBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_DestinationBucket) ProtoMessage() {}

func (x *TransferSpec_DestinationBucket) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_DestinationBucket.ProtoReflect.Descriptor instead.
func (*TransferSpec_DestinationBucket) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TransferSpec_DestinationBucket) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *TransferSpec_DestinationBucket) GetCredentials() *TransferSpec_BucketCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type TransferSpec_BucketCredentials struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Credentials:
	//
	//	*TransferSpec_BucketCredentials_Anonymous
	//	*TransferSpec_BucketCredentials_AccessKey
	Credentials   isTransferSpec_BucketCredentials_Credentials `protobuf_oneof:"credentials"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_BucketCredentials) Reset() {
	*x = TransferSpec_BucketCredentials{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_BucketCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_BucketCredentials) ProtoMessage() {}

func (x *TransferSpec_BucketCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_BucketCredentials.ProtoReflect.Descriptor instead.
func (*TransferSpec_BucketCredentials) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 2}
}

func (x *TransferSpec_BucketCredentials) GetCredentials() isTransferSpec_BucketCredentials_Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *TransferSpec_BucketCredentials) GetAnonymous() *TransferSpec_BucketCredentials_CredentialsAnonymous {
	if x != nil {
		if x, ok := x.Credentials.(*TransferSpec_BucketCredentials_Anonymous); ok {
			return x.Anonymous
		}
	}
	return nil
}

func (x *TransferSpec_BucketCredentials) GetAccessKey() *TransferSpec_BucketCredentials_CredentialsAccessKey {
	if x != nil {
		if x, ok := x.Credentials.(*TransferSpec_BucketCredentials_AccessKey); ok {
			return x.AccessKey
		}
	}
	return nil
}

type isTransferSpec_BucketCredentials_Credentials interface {
	isTransferSpec_BucketCredentials_Credentials()
}

type TransferSpec_BucketCredentials_Anonymous struct {
	Anonymous *TransferSpec_BucketCredentials_CredentialsAnonymous `protobuf:"bytes,1,opt,name=anonymous,proto3,oneof"`
}

type TransferSpec_BucketCredentials_AccessKey struct {
	AccessKey *TransferSpec_BucketCredentials_CredentialsAccessKey `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3,oneof"`
}

func (*TransferSpec_BucketCredentials_Anonymous) isTransferSpec_BucketCredentials_Credentials() {}

func (*TransferSpec_BucketCredentials_AccessKey) isTransferSpec_BucketCredentials_Credentials() {}

type TransferSpec_Limiters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum bandwidth in bytes per second. If set to zero, default limit will be applied.
	BandwidthBytesPerSecond uint64 `protobuf:"varint,1,opt,name=bandwidth_bytes_per_second,json=bandwidthBytesPerSecond,proto3" json:"bandwidth_bytes_per_second,omitempty"`
	// Maximum number of requests per second. If set to zero, default limit will be applied.
	RequestsPerSecond uint64 `protobuf:"varint,2,opt,name=requests_per_second,json=requestsPerSecond,proto3" json:"requests_per_second,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TransferSpec_Limiters) Reset() {
	*x = TransferSpec_Limiters{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_Limiters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_Limiters) ProtoMessage() {}

func (x *TransferSpec_Limiters) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_Limiters.ProtoReflect.Descriptor instead.
func (*TransferSpec_Limiters) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 3}
}

func (x *TransferSpec_Limiters) GetBandwidthBytesPerSecond() uint64 {
	if x != nil {
		return x.BandwidthBytesPerSecond
	}
	return 0
}

func (x *TransferSpec_Limiters) GetRequestsPerSecond() uint64 {
	if x != nil {
		return x.RequestsPerSecond
	}
	return 0
}

type TransferSpec_StopConditionAfterOneIteration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_StopConditionAfterOneIteration) Reset() {
	*x = TransferSpec_StopConditionAfterOneIteration{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_StopConditionAfterOneIteration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_StopConditionAfterOneIteration) ProtoMessage() {}

func (x *TransferSpec_StopConditionAfterOneIteration) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_StopConditionAfterOneIteration.ProtoReflect.Descriptor instead.
func (*TransferSpec_StopConditionAfterOneIteration) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 4}
}

type TransferSpec_StopConditionAfterNEmptyIterations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of consecutive iterations with zero transferred objects required to stop transfer.
	EmptyIterationsThreshold uint32 `protobuf:"varint,1,opt,name=empty_iterations_threshold,json=emptyIterationsThreshold,proto3" json:"empty_iterations_threshold,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TransferSpec_StopConditionAfterNEmptyIterations) Reset() {
	*x = TransferSpec_StopConditionAfterNEmptyIterations{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_StopConditionAfterNEmptyIterations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_StopConditionAfterNEmptyIterations) ProtoMessage() {}

func (x *TransferSpec_StopConditionAfterNEmptyIterations) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_StopConditionAfterNEmptyIterations.ProtoReflect.Descriptor instead.
func (*TransferSpec_StopConditionAfterNEmptyIterations) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 5}
}

func (x *TransferSpec_StopConditionAfterNEmptyIterations) GetEmptyIterationsThreshold() uint32 {
	if x != nil {
		return x.EmptyIterationsThreshold
	}
	return 0
}

type TransferSpec_StopConditionInfinite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_StopConditionInfinite) Reset() {
	*x = TransferSpec_StopConditionInfinite{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_StopConditionInfinite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_StopConditionInfinite) ProtoMessage() {}

func (x *TransferSpec_StopConditionInfinite) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_StopConditionInfinite.ProtoReflect.Descriptor instead.
func (*TransferSpec_StopConditionInfinite) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 6}
}

type TransferSpec_BucketCredentials_CredentialsAnonymous struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferSpec_BucketCredentials_CredentialsAnonymous) Reset() {
	*x = TransferSpec_BucketCredentials_CredentialsAnonymous{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_BucketCredentials_CredentialsAnonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_BucketCredentials_CredentialsAnonymous) ProtoMessage() {}

func (x *TransferSpec_BucketCredentials_CredentialsAnonymous) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_BucketCredentials_CredentialsAnonymous.ProtoReflect.Descriptor instead.
func (*TransferSpec_BucketCredentials_CredentialsAnonymous) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 2, 0}
}

type TransferSpec_BucketCredentials_CredentialsAccessKey struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccessKeyId     string                 `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string                 `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferSpec_BucketCredentials_CredentialsAccessKey) Reset() {
	*x = TransferSpec_BucketCredentials_CredentialsAccessKey{}
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferSpec_BucketCredentials_CredentialsAccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSpec_BucketCredentials_CredentialsAccessKey) ProtoMessage() {}

func (x *TransferSpec_BucketCredentials_CredentialsAccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_storage_v1alpha1_transfer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSpec_BucketCredentials_CredentialsAccessKey.ProtoReflect.Descriptor instead.
func (*TransferSpec_BucketCredentials_CredentialsAccessKey) Descriptor() ([]byte, []int) {
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP(), []int{1, 2, 1}
}

func (x *TransferSpec_BucketCredentials_CredentialsAccessKey) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *TransferSpec_BucketCredentials_CredentialsAccessKey) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

var File_nebius_storage_v1alpha1_transfer_proto protoreflect.FileDescriptor

const file_nebius_storage_v1alpha1_transfer_proto_rawDesc = "" +
	"\n" +
	"&nebius/storage/v1alpha1/transfer.proto\x12\x17nebius.storage.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xdc\x01\n" +
	"\bTransfer\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12A\n" +
	"\x04spec\x18\x02 \x01(\v2%.nebius.storage.v1alpha1.TransferSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12E\n" +
	"\x06status\x18\x03 \x01(\v2'.nebius.storage.v1alpha1.TransferStatusB\x04\xbaJ\x01\x05R\x06status\"\x94\x10\n" +
	"\fTransferSpec\x12R\n" +
	"\x06source\x18\x01 \x01(\v22.nebius.storage.v1alpha1.TransferSpec.SourceBucketB\x06\xbaH\x03\xc8\x01\x01R\x06source\x12a\n" +
	"\vdestination\x18\x02 \x01(\v27.nebius.storage.v1alpha1.TransferSpec.DestinationBucketB\x06\xbaH\x03\xc8\x01\x01R\vdestination\x12|\n" +
	"\x13after_one_iteration\x18\x03 \x01(\v2D.nebius.storage.v1alpha1.TransferSpec.StopConditionAfterOneIterationB\x04\xbaJ\x01\x06H\x00R\x11afterOneIteration\x12\x83\x01\n" +
	"\x18after_n_empty_iterations\x18\x04 \x01(\v2H.nebius.storage.v1alpha1.TransferSpec.StopConditionAfterNEmptyIterationsH\x00R\x15afterNEmptyIterations\x12_\n" +
	"\binfinite\x18\x05 \x01(\v2;.nebius.storage.v1alpha1.TransferSpec.StopConditionInfiniteB\x04\xbaJ\x01\x06H\x00R\binfinite\x12a\n" +
	"\x18inter_iteration_interval\x18\x06 \x01(\v2\x19.google.protobuf.DurationB\f\xbaH\x05\xaa\x01\x022\x00\xbaJ\x01\aR\x16interIterationInterval\x12n\n" +
	"\x12overwrite_strategy\x18\a \x01(\x0e27.nebius.storage.v1alpha1.TransferSpec.OverwriteStrategyB\x06\xbaH\x03\xc8\x01\x01R\x11overwriteStrategy\x1a\xb4\x02\n" +
	"\fSourceBucket\x12&\n" +
	"\bendpoint\x18\x01 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\bendpoint\x12+\n" +
	"\vbucket_name\x18\x02 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\n" +
	"bucketName\x12\"\n" +
	"\x06region\x18\x03 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x06region\x12_\n" +
	"\vcredentials\x18\x04 \x01(\v27.nebius.storage.v1alpha1.TransferSpec.BucketCredentialsB\x04\xbaJ\x01\x04R\vcredentials\x12J\n" +
	"\blimiters\x18\x05 \x01(\v2..nebius.storage.v1alpha1.TransferSpec.LimitersR\blimiters\x1a\xa1\x01\n" +
	"\x11DestinationBucket\x12+\n" +
	"\vbucket_name\x18\x01 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\n" +
	"bucketName\x12_\n" +
	"\vcredentials\x18\x02 \x01(\v27.nebius.storage.v1alpha1.TransferSpec.BucketCredentialsB\x04\xbaJ\x01\x04R\vcredentials\x1a\xa2\x03\n" +
	"\x11BucketCredentials\x12r\n" +
	"\tanonymous\x18\x01 \x01(\v2L.nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAnonymousB\x04\xbaJ\x01\x06H\x00R\tanonymous\x12m\n" +
	"\n" +
	"access_key\x18\x02 \x01(\v2L.nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAccessKeyH\x00R\taccessKey\x1a\x16\n" +
	"\x14CredentialsAnonymous\x1a|\n" +
	"\x14CredentialsAccessKey\x12-\n" +
	"\raccess_key_id\x18\x01 \x01(\tB\t\xbaH\x03\xc8\x01\x01\xc0J\x01R\vaccessKeyId\x125\n" +
	"\x11secret_access_key\x18\x02 \x01(\tB\t\xbaH\x03\xc8\x01\x01\xc0J\x01R\x0fsecretAccessKeyB\x14\n" +
	"\vcredentials\x12\x05\xbaH\x02\b\x01\x1aw\n" +
	"\bLimiters\x12;\n" +
	"\x1abandwidth_bytes_per_second\x18\x01 \x01(\x04R\x17bandwidthBytesPerSecond\x12.\n" +
	"\x13requests_per_second\x18\x02 \x01(\x04R\x11requestsPerSecond\x1a \n" +
	"\x1eStopConditionAfterOneIteration\x1aj\n" +
	"\"StopConditionAfterNEmptyIterations\x12D\n" +
	"\x1aempty_iterations_threshold\x18\x01 \x01(\rB\x06\xbaH\x03\xc8\x01\x01R\x18emptyIterationsThreshold\x1a\x17\n" +
	"\x15StopConditionInfinite\"\\\n" +
	"\x11OverwriteStrategy\x12\"\n" +
	"\x1eOVERWRITE_STRATEGY_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05NEVER\x10\x01\x12\f\n" +
	"\bIF_NEWER\x10\x02\x12\n" +
	"\n" +
	"\x06ALWAYS\x10\x03B\x17\n" +
	"\x0estop_condition\x12\x05\xbaH\x02\b\x01\"\xd9\x03\n" +
	"\x0eTransferStatus\x12C\n" +
	"\x05state\x18\x01 \x01(\x0e2-.nebius.storage.v1alpha1.TransferStatus.StateR\x05state\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12b\n" +
	"\x10suspension_state\x18\x03 \x01(\x0e27.nebius.storage.v1alpha1.TransferStatus.SuspensionStateR\x0fsuspensionState\x12Q\n" +
	"\x0elast_iteration\x18\x04 \x01(\v2*.nebius.storage.v1alpha1.TransferIterationR\rlastIteration\"^\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x01\x12\f\n" +
	"\bSTOPPING\x10\x02\x12\v\n" +
	"\aSTOPPED\x10\x03\x12\v\n" +
	"\aFAILING\x10\x04\x12\n" +
	"\n" +
	"\x06FAILED\x10\x05\"U\n" +
	"\x0fSuspensionState\x12 \n" +
	"\x1cSUSPENSION_STATE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rNOT_SUSPENDED\x10\x01\x12\r\n" +
	"\tSUSPENDED\x10\x02\"\xf7\x04\n" +
	"\x11TransferIteration\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x03R\x0esequenceNumber\x12F\n" +
	"\x05state\x18\x02 \x01(\x0e20.nebius.storage.v1alpha1.TransferIteration.StateR\x05state\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x128\n" +
	"\x18objects_discovered_count\x18\x06 \x01(\x03R\x16objectsDiscoveredCount\x124\n" +
	"\x16objects_migrated_count\x18\a \x01(\x03R\x14objectsMigratedCount\x122\n" +
	"\x15objects_skipped_count\x18\b \x01(\x03R\x13objectsSkippedCount\x122\n" +
	"\x15objects_migrated_size\x18\t \x01(\x03R\x13objectsMigratedSize\x128\n" +
	"\x18average_throughput_bytes\x18\n" +
	" \x01(\x03R\x16averageThroughputBytes\"W\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\v\n" +
	"\aSTOPPED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04Bh\n" +
	"\x1eai.nebius.pub.storage.v1alpha1B\rTransferProtoP\x01Z5github.com/nebius/gosdk/proto/nebius/storage/v1alpha1b\x06proto3"

var (
	file_nebius_storage_v1alpha1_transfer_proto_rawDescOnce sync.Once
	file_nebius_storage_v1alpha1_transfer_proto_rawDescData []byte
)

func file_nebius_storage_v1alpha1_transfer_proto_rawDescGZIP() []byte {
	file_nebius_storage_v1alpha1_transfer_proto_rawDescOnce.Do(func() {
		file_nebius_storage_v1alpha1_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_storage_v1alpha1_transfer_proto_rawDesc), len(file_nebius_storage_v1alpha1_transfer_proto_rawDesc)))
	})
	return file_nebius_storage_v1alpha1_transfer_proto_rawDescData
}

var file_nebius_storage_v1alpha1_transfer_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_nebius_storage_v1alpha1_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_nebius_storage_v1alpha1_transfer_proto_goTypes = []any{
	(TransferSpec_OverwriteStrategy)(0),                         // 0: nebius.storage.v1alpha1.TransferSpec.OverwriteStrategy
	(TransferStatus_State)(0),                                   // 1: nebius.storage.v1alpha1.TransferStatus.State
	(TransferStatus_SuspensionState)(0),                         // 2: nebius.storage.v1alpha1.TransferStatus.SuspensionState
	(TransferIteration_State)(0),                                // 3: nebius.storage.v1alpha1.TransferIteration.State
	(*Transfer)(nil),                                            // 4: nebius.storage.v1alpha1.Transfer
	(*TransferSpec)(nil),                                        // 5: nebius.storage.v1alpha1.TransferSpec
	(*TransferStatus)(nil),                                      // 6: nebius.storage.v1alpha1.TransferStatus
	(*TransferIteration)(nil),                                   // 7: nebius.storage.v1alpha1.TransferIteration
	(*TransferSpec_SourceBucket)(nil),                           // 8: nebius.storage.v1alpha1.TransferSpec.SourceBucket
	(*TransferSpec_DestinationBucket)(nil),                      // 9: nebius.storage.v1alpha1.TransferSpec.DestinationBucket
	(*TransferSpec_BucketCredentials)(nil),                      // 10: nebius.storage.v1alpha1.TransferSpec.BucketCredentials
	(*TransferSpec_Limiters)(nil),                               // 11: nebius.storage.v1alpha1.TransferSpec.Limiters
	(*TransferSpec_StopConditionAfterOneIteration)(nil),         // 12: nebius.storage.v1alpha1.TransferSpec.StopConditionAfterOneIteration
	(*TransferSpec_StopConditionAfterNEmptyIterations)(nil),     // 13: nebius.storage.v1alpha1.TransferSpec.StopConditionAfterNEmptyIterations
	(*TransferSpec_StopConditionInfinite)(nil),                  // 14: nebius.storage.v1alpha1.TransferSpec.StopConditionInfinite
	(*TransferSpec_BucketCredentials_CredentialsAnonymous)(nil), // 15: nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAnonymous
	(*TransferSpec_BucketCredentials_CredentialsAccessKey)(nil), // 16: nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAccessKey
	(*v1.ResourceMetadata)(nil),                                 // 17: nebius.common.v1.ResourceMetadata
	(*durationpb.Duration)(nil),                                 // 18: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                               // 19: google.protobuf.Timestamp
}
var file_nebius_storage_v1alpha1_transfer_proto_depIdxs = []int32{
	17, // 0: nebius.storage.v1alpha1.Transfer.metadata:type_name -> nebius.common.v1.ResourceMetadata
	5,  // 1: nebius.storage.v1alpha1.Transfer.spec:type_name -> nebius.storage.v1alpha1.TransferSpec
	6,  // 2: nebius.storage.v1alpha1.Transfer.status:type_name -> nebius.storage.v1alpha1.TransferStatus
	8,  // 3: nebius.storage.v1alpha1.TransferSpec.source:type_name -> nebius.storage.v1alpha1.TransferSpec.SourceBucket
	9,  // 4: nebius.storage.v1alpha1.TransferSpec.destination:type_name -> nebius.storage.v1alpha1.TransferSpec.DestinationBucket
	12, // 5: nebius.storage.v1alpha1.TransferSpec.after_one_iteration:type_name -> nebius.storage.v1alpha1.TransferSpec.StopConditionAfterOneIteration
	13, // 6: nebius.storage.v1alpha1.TransferSpec.after_n_empty_iterations:type_name -> nebius.storage.v1alpha1.TransferSpec.StopConditionAfterNEmptyIterations
	14, // 7: nebius.storage.v1alpha1.TransferSpec.infinite:type_name -> nebius.storage.v1alpha1.TransferSpec.StopConditionInfinite
	18, // 8: nebius.storage.v1alpha1.TransferSpec.inter_iteration_interval:type_name -> google.protobuf.Duration
	0,  // 9: nebius.storage.v1alpha1.TransferSpec.overwrite_strategy:type_name -> nebius.storage.v1alpha1.TransferSpec.OverwriteStrategy
	1,  // 10: nebius.storage.v1alpha1.TransferStatus.state:type_name -> nebius.storage.v1alpha1.TransferStatus.State
	2,  // 11: nebius.storage.v1alpha1.TransferStatus.suspension_state:type_name -> nebius.storage.v1alpha1.TransferStatus.SuspensionState
	7,  // 12: nebius.storage.v1alpha1.TransferStatus.last_iteration:type_name -> nebius.storage.v1alpha1.TransferIteration
	3,  // 13: nebius.storage.v1alpha1.TransferIteration.state:type_name -> nebius.storage.v1alpha1.TransferIteration.State
	19, // 14: nebius.storage.v1alpha1.TransferIteration.start_time:type_name -> google.protobuf.Timestamp
	19, // 15: nebius.storage.v1alpha1.TransferIteration.end_time:type_name -> google.protobuf.Timestamp
	10, // 16: nebius.storage.v1alpha1.TransferSpec.SourceBucket.credentials:type_name -> nebius.storage.v1alpha1.TransferSpec.BucketCredentials
	11, // 17: nebius.storage.v1alpha1.TransferSpec.SourceBucket.limiters:type_name -> nebius.storage.v1alpha1.TransferSpec.Limiters
	10, // 18: nebius.storage.v1alpha1.TransferSpec.DestinationBucket.credentials:type_name -> nebius.storage.v1alpha1.TransferSpec.BucketCredentials
	15, // 19: nebius.storage.v1alpha1.TransferSpec.BucketCredentials.anonymous:type_name -> nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAnonymous
	16, // 20: nebius.storage.v1alpha1.TransferSpec.BucketCredentials.access_key:type_name -> nebius.storage.v1alpha1.TransferSpec.BucketCredentials.CredentialsAccessKey
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nebius_storage_v1alpha1_transfer_proto_init() }
func file_nebius_storage_v1alpha1_transfer_proto_init() {
	if File_nebius_storage_v1alpha1_transfer_proto != nil {
		return
	}
	file_nebius_storage_v1alpha1_transfer_proto_msgTypes[1].OneofWrappers = []any{
		(*TransferSpec_AfterOneIteration)(nil),
		(*TransferSpec_AfterNEmptyIterations)(nil),
		(*TransferSpec_Infinite)(nil),
	}
	file_nebius_storage_v1alpha1_transfer_proto_msgTypes[6].OneofWrappers = []any{
		(*TransferSpec_BucketCredentials_Anonymous)(nil),
		(*TransferSpec_BucketCredentials_AccessKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_storage_v1alpha1_transfer_proto_rawDesc), len(file_nebius_storage_v1alpha1_transfer_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_storage_v1alpha1_transfer_proto_goTypes,
		DependencyIndexes: file_nebius_storage_v1alpha1_transfer_proto_depIdxs,
		EnumInfos:         file_nebius_storage_v1alpha1_transfer_proto_enumTypes,
		MessageInfos:      file_nebius_storage_v1alpha1_transfer_proto_msgTypes,
	}.Build()
	File_nebius_storage_v1alpha1_transfer_proto = out.File
	file_nebius_storage_v1alpha1_transfer_proto_goTypes = nil
	file_nebius_storage_v1alpha1_transfer_proto_depIdxs = nil
}
