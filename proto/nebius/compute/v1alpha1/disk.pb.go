// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// nebius/compute/v1alpha1/disk.proto is a deprecated file.

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
type DiskSpec_DiskType int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskSpec_UNSPECIFIED DiskSpec_DiskType = 0
	// the list of available types will be clarified later, it is not final version
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskSpec_NETWORK_SSD DiskSpec_DiskType = 1
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskSpec_NETWORK_HDD DiskSpec_DiskType = 2
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskSpec_NETWORK_SSD_NON_REPLICATED DiskSpec_DiskType = 3
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskSpec_NETWORK_SSD_IO_M3 DiskSpec_DiskType = 4
)

// Enum value maps for DiskSpec_DiskType.
var (
	DiskSpec_DiskType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NETWORK_SSD",
		2: "NETWORK_HDD",
		3: "NETWORK_SSD_NON_REPLICATED",
		4: "NETWORK_SSD_IO_M3",
	}
	DiskSpec_DiskType_value = map[string]int32{
		"UNSPECIFIED":                0,
		"NETWORK_SSD":                1,
		"NETWORK_HDD":                2,
		"NETWORK_SSD_NON_REPLICATED": 3,
		"NETWORK_SSD_IO_M3":          4,
	}
)

func (x DiskSpec_DiskType) Enum() *DiskSpec_DiskType {
	p := new(DiskSpec_DiskType)
	*p = x
	return p
}

func (x DiskSpec_DiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskSpec_DiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_disk_proto_enumTypes[0].Descriptor()
}

func (DiskSpec_DiskType) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_disk_proto_enumTypes[0]
}

func (x DiskSpec_DiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskSpec_DiskType.Descriptor instead.
func (DiskSpec_DiskType) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP(), []int{1, 0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
type DiskStatus_State int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_UNSPECIFIED DiskStatus_State = 0
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_CREATING DiskStatus_State = 1
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_READY DiskStatus_State = 2
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_UPDATING DiskStatus_State = 3
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_DELETING DiskStatus_State = 4
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	DiskStatus_ERROR DiskStatus_State = 5
)

// Enum value maps for DiskStatus_State.
var (
	DiskStatus_State_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CREATING",
		2: "READY",
		3: "UPDATING",
		4: "DELETING",
		5: "ERROR",
	}
	DiskStatus_State_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CREATING":    1,
		"READY":       2,
		"UPDATING":    3,
		"DELETING":    4,
		"ERROR":       5,
	}
)

func (x DiskStatus_State) Enum() *DiskStatus_State {
	p := new(DiskStatus_State)
	*p = x
	return p
}

func (x DiskStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_disk_proto_enumTypes[1].Descriptor()
}

func (DiskStatus_State) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_disk_proto_enumTypes[1]
}

func (x DiskStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskStatus_State.Descriptor instead.
func (DiskStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP(), []int{2, 0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
type Disk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	Spec *DiskSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	Status        *DiskStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disk) Reset() {
	*x = Disk{}
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP(), []int{0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *Disk) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *Disk) GetSpec() *DiskSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *Disk) GetStatus() *DiskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
type DiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Size:
	//
	//	*DiskSpec_SizeBytes
	//	*DiskSpec_SizeKibibytes
	//	*DiskSpec_SizeMebibytes
	//	*DiskSpec_SizeGibibytes
	Size isDiskSpec_Size `protobuf_oneof:"size"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	BlockSizeBytes int64 `protobuf:"varint,5,opt,name=block_size_bytes,json=blockSizeBytes,proto3" json:"block_size_bytes,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	Type DiskSpec_DiskType `protobuf:"varint,6,opt,name=type,proto3,enum=nebius.compute.v1alpha1.DiskSpec_DiskType" json:"type,omitempty"`
	// Types that are valid to be assigned to Source:
	//
	//	*DiskSpec_SourceImageId
	//	*DiskSpec_SourceImageFamily
	Source        isDiskSpec_Source `protobuf_oneof:"source"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskSpec) Reset() {
	*x = DiskSpec{}
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSpec) ProtoMessage() {}

func (x *DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSpec.ProtoReflect.Descriptor instead.
func (*DiskSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP(), []int{1}
}

func (x *DiskSpec) GetSize() isDiskSpec_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSizeBytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeBytes); ok {
			return x.SizeBytes
		}
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSizeKibibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeKibibytes); ok {
			return x.SizeKibibytes
		}
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSizeMebibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeMebibytes); ok {
			return x.SizeMebibytes
		}
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSizeGibibytes() int64 {
	if x != nil {
		if x, ok := x.Size.(*DiskSpec_SizeGibibytes); ok {
			return x.SizeGibibytes
		}
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetBlockSizeBytes() int64 {
	if x != nil {
		return x.BlockSizeBytes
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetType() DiskSpec_DiskType {
	if x != nil {
		return x.Type
	}
	return DiskSpec_UNSPECIFIED
}

func (x *DiskSpec) GetSource() isDiskSpec_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSourceImageId() string {
	if x != nil {
		if x, ok := x.Source.(*DiskSpec_SourceImageId); ok {
			return x.SourceImageId
		}
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskSpec) GetSourceImageFamily() string {
	if x != nil {
		if x, ok := x.Source.(*DiskSpec_SourceImageFamily); ok {
			return x.SourceImageFamily
		}
	}
	return ""
}

type isDiskSpec_Size interface {
	isDiskSpec_Size()
}

type DiskSpec_SizeBytes struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SizeBytes int64 `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,proto3,oneof"`
}

type DiskSpec_SizeKibibytes struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SizeKibibytes int64 `protobuf:"varint,2,opt,name=size_kibibytes,json=sizeKibibytes,proto3,oneof"`
}

type DiskSpec_SizeMebibytes struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SizeMebibytes int64 `protobuf:"varint,3,opt,name=size_mebibytes,json=sizeMebibytes,proto3,oneof"`
}

type DiskSpec_SizeGibibytes struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SizeGibibytes int64 `protobuf:"varint,4,opt,name=size_gibibytes,json=sizeGibibytes,proto3,oneof"`
}

func (*DiskSpec_SizeBytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeKibibytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeMebibytes) isDiskSpec_Size() {}

func (*DiskSpec_SizeGibibytes) isDiskSpec_Size() {}

type isDiskSpec_Source interface {
	isDiskSpec_Source()
}

type DiskSpec_SourceImageId struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SourceImageId string `protobuf:"bytes,8,opt,name=source_image_id,json=sourceImageId,proto3,oneof"`
}

type DiskSpec_SourceImageFamily struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SourceImageFamily string `protobuf:"bytes,9,opt,name=source_image_family,json=sourceImageFamily,proto3,oneof"`
}

func (*DiskSpec_SourceImageId) isDiskSpec_Source() {}

func (*DiskSpec_SourceImageFamily) isDiskSpec_Source() {}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
type DiskStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	State DiskStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=nebius.compute.v1alpha1.DiskStatus_State" json:"state,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	StateDescription string `protobuf:"bytes,2,opt,name=state_description,json=stateDescription,proto3" json:"state_description,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	ReadWriteAttachment string `protobuf:"bytes,3,opt,name=read_write_attachment,json=readWriteAttachment,proto3" json:"read_write_attachment,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	ReadOnlyAttachments []string `protobuf:"bytes,4,rep,name=read_only_attachments,json=readOnlyAttachments,proto3" json:"read_only_attachments,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SourceImageId string `protobuf:"bytes,5,opt,name=source_image_id,json=sourceImageId,proto3" json:"source_image_id,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	SizeBytes int64 `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Indicates whether there is an ongoing operation
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
	Reconciling   bool `protobuf:"varint,7,opt,name=reconciling,proto3" json:"reconciling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskStatus) Reset() {
	*x = DiskStatus{}
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStatus) ProtoMessage() {}

func (x *DiskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_disk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStatus.ProtoReflect.Descriptor instead.
func (*DiskStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP(), []int{2}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetState() DiskStatus_State {
	if x != nil {
		return x.State
	}
	return DiskStatus_UNSPECIFIED
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetStateDescription() string {
	if x != nil {
		return x.StateDescription
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetReadWriteAttachment() string {
	if x != nil {
		return x.ReadWriteAttachment
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetReadOnlyAttachments() []string {
	if x != nil {
		return x.ReadOnlyAttachments
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetSourceImageId() string {
	if x != nil {
		return x.SourceImageId
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/disk.proto is marked as deprecated.
func (x *DiskStatus) GetReconciling() bool {
	if x != nil {
		return x.Reconciling
	}
	return false
}

var File_nebius_compute_v1alpha1_disk_proto protoreflect.FileDescriptor

const file_nebius_compute_v1alpha1_disk_proto_rawDesc = "" +
	"\n" +
	"\"nebius/compute/v1alpha1/disk.proto\x12\x17nebius.compute.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\"\xba\x01\n" +
	"\x04Disk\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataR\bmetadata\x125\n" +
	"\x04spec\x18\x02 \x01(\v2!.nebius.compute.v1alpha1.DiskSpecR\x04spec\x12;\n" +
	"\x06status\x18\x03 \x01(\v2#.nebius.compute.v1alpha1.DiskStatusR\x06status\"\xb7\x04\n" +
	"\bDiskSpec\x12%\n" +
	"\n" +
	"size_bytes\x18\x01 \x01(\x03B\x04\xbaJ\x01\x02H\x00R\tsizeBytes\x12-\n" +
	"\x0esize_kibibytes\x18\x02 \x01(\x03B\x04\xbaJ\x01\x02H\x00R\rsizeKibibytes\x12-\n" +
	"\x0esize_mebibytes\x18\x03 \x01(\x03B\x04\xbaJ\x01\x02H\x00R\rsizeMebibytes\x12-\n" +
	"\x0esize_gibibytes\x18\x04 \x01(\x03B\x04\xbaJ\x01\x02H\x00R\rsizeGibibytes\x12.\n" +
	"\x10block_size_bytes\x18\x05 \x01(\x03B\x04\xbaJ\x01\x02R\x0eblockSizeBytes\x12J\n" +
	"\x04type\x18\x06 \x01(\x0e2*.nebius.compute.v1alpha1.DiskSpec.DiskTypeB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x04type\x12.\n" +
	"\x0fsource_image_id\x18\b \x01(\tB\x04\xbaJ\x01\x02H\x01R\rsourceImageId\x126\n" +
	"\x13source_image_family\x18\t \x01(\tB\x04\xbaJ\x01\x02H\x01R\x11sourceImageFamily\"t\n" +
	"\bDiskType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vNETWORK_SSD\x10\x01\x12\x0f\n" +
	"\vNETWORK_HDD\x10\x02\x12\x1e\n" +
	"\x1aNETWORK_SSD_NON_REPLICATED\x10\x03\x12\x15\n" +
	"\x11NETWORK_SSD_IO_M3\x10\x04B\r\n" +
	"\x04size\x12\x05\xbaH\x02\b\x01B\b\n" +
	"\x06sourceJ\x04\b\a\x10\b\"\xa5\x03\n" +
	"\n" +
	"DiskStatus\x12?\n" +
	"\x05state\x18\x01 \x01(\x0e2).nebius.compute.v1alpha1.DiskStatus.StateR\x05state\x12+\n" +
	"\x11state_description\x18\x02 \x01(\tR\x10stateDescription\x122\n" +
	"\x15read_write_attachment\x18\x03 \x01(\tR\x13readWriteAttachment\x122\n" +
	"\x15read_only_attachments\x18\x04 \x03(\tR\x13readOnlyAttachments\x12&\n" +
	"\x0fsource_image_id\x18\x05 \x01(\tR\rsourceImageId\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x03R\tsizeBytes\x12 \n" +
	"\vreconciling\x18\a \x01(\bR\vreconciling\"X\n" +
	"\x05State\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\t\n" +
	"\x05READY\x10\x02\x12\f\n" +
	"\bUPDATING\x10\x03\x12\f\n" +
	"\bDELETING\x10\x04\x12\t\n" +
	"\x05ERROR\x10\x05Bg\n" +
	"\x1eai.nebius.pub.compute.v1alpha1B\tDiskProtoP\x01Z5github.com/nebius/gosdk/proto/nebius/compute/v1alpha1\xb8\x01\x01b\x06proto3"

var (
	file_nebius_compute_v1alpha1_disk_proto_rawDescOnce sync.Once
	file_nebius_compute_v1alpha1_disk_proto_rawDescData []byte
)

func file_nebius_compute_v1alpha1_disk_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1alpha1_disk_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1alpha1_disk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_compute_v1alpha1_disk_proto_rawDesc), len(file_nebius_compute_v1alpha1_disk_proto_rawDesc)))
	})
	return file_nebius_compute_v1alpha1_disk_proto_rawDescData
}

var file_nebius_compute_v1alpha1_disk_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nebius_compute_v1alpha1_disk_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nebius_compute_v1alpha1_disk_proto_goTypes = []any{
	(DiskSpec_DiskType)(0),      // 0: nebius.compute.v1alpha1.DiskSpec.DiskType
	(DiskStatus_State)(0),       // 1: nebius.compute.v1alpha1.DiskStatus.State
	(*Disk)(nil),                // 2: nebius.compute.v1alpha1.Disk
	(*DiskSpec)(nil),            // 3: nebius.compute.v1alpha1.DiskSpec
	(*DiskStatus)(nil),          // 4: nebius.compute.v1alpha1.DiskStatus
	(*v1.ResourceMetadata)(nil), // 5: nebius.common.v1.ResourceMetadata
}
var file_nebius_compute_v1alpha1_disk_proto_depIdxs = []int32{
	5, // 0: nebius.compute.v1alpha1.Disk.metadata:type_name -> nebius.common.v1.ResourceMetadata
	3, // 1: nebius.compute.v1alpha1.Disk.spec:type_name -> nebius.compute.v1alpha1.DiskSpec
	4, // 2: nebius.compute.v1alpha1.Disk.status:type_name -> nebius.compute.v1alpha1.DiskStatus
	0, // 3: nebius.compute.v1alpha1.DiskSpec.type:type_name -> nebius.compute.v1alpha1.DiskSpec.DiskType
	1, // 4: nebius.compute.v1alpha1.DiskStatus.state:type_name -> nebius.compute.v1alpha1.DiskStatus.State
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1alpha1_disk_proto_init() }
func file_nebius_compute_v1alpha1_disk_proto_init() {
	if File_nebius_compute_v1alpha1_disk_proto != nil {
		return
	}
	file_nebius_compute_v1alpha1_disk_proto_msgTypes[1].OneofWrappers = []any{
		(*DiskSpec_SizeBytes)(nil),
		(*DiskSpec_SizeKibibytes)(nil),
		(*DiskSpec_SizeMebibytes)(nil),
		(*DiskSpec_SizeGibibytes)(nil),
		(*DiskSpec_SourceImageId)(nil),
		(*DiskSpec_SourceImageFamily)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_compute_v1alpha1_disk_proto_rawDesc), len(file_nebius_compute_v1alpha1_disk_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_compute_v1alpha1_disk_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1alpha1_disk_proto_depIdxs,
		EnumInfos:         file_nebius_compute_v1alpha1_disk_proto_enumTypes,
		MessageInfos:      file_nebius_compute_v1alpha1_disk_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1alpha1_disk_proto = out.File
	file_nebius_compute_v1alpha1_disk_proto_goTypes = nil
	file_nebius_compute_v1alpha1_disk_proto_depIdxs = nil
}
