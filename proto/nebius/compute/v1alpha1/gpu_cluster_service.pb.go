// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.28.3
// nebius/compute/v1alpha1/gpu_cluster_service.proto is a deprecated file.

package v1alpha1

import (
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	v1alpha1 "github.com/nebius/gosdk/proto/nebius/common/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type GetGpuClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGpuClusterRequest) Reset() {
	*x = GetGpuClusterRequest{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGpuClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGpuClusterRequest) ProtoMessage() {}

func (x *GetGpuClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGpuClusterRequest.ProtoReflect.Descriptor instead.
func (*GetGpuClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *GetGpuClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type ListGpuClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	ParentId string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGpuClustersRequest) Reset() {
	*x = ListGpuClustersRequest{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGpuClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGpuClustersRequest) ProtoMessage() {}

func (x *ListGpuClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGpuClustersRequest.ProtoReflect.Descriptor instead.
func (*ListGpuClustersRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{1}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type CreateGpuClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Spec          *GpuClusterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGpuClusterRequest) Reset() {
	*x = CreateGpuClusterRequest{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGpuClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGpuClusterRequest) ProtoMessage() {}

func (x *CreateGpuClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGpuClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateGpuClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{2}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *CreateGpuClusterRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *CreateGpuClusterRequest) GetSpec() *GpuClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type UpdateGpuClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Spec          *GpuClusterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGpuClusterRequest) Reset() {
	*x = UpdateGpuClusterRequest{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGpuClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGpuClusterRequest) ProtoMessage() {}

func (x *UpdateGpuClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGpuClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateGpuClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{3}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *UpdateGpuClusterRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *UpdateGpuClusterRequest) GetSpec() *GpuClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type DeleteGpuClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGpuClusterRequest) Reset() {
	*x = DeleteGpuClusterRequest{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGpuClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGpuClusterRequest) ProtoMessage() {}

func (x *DeleteGpuClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGpuClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteGpuClusterRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{4}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *DeleteGpuClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
type ListGpuClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	Items []*GpuCluster `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGpuClustersResponse) Reset() {
	*x = ListGpuClustersResponse{}
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGpuClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGpuClustersResponse) ProtoMessage() {}

func (x *ListGpuClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGpuClustersResponse.ProtoReflect.Descriptor instead.
func (*ListGpuClustersResponse) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP(), []int{5}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersResponse) GetItems() []*GpuCluster {
	if x != nil {
		return x.Items
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/gpu_cluster_service.proto is marked as deprecated.
func (x *ListGpuClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_nebius_compute_v1alpha1_gpu_cluster_service_proto protoreflect.FileDescriptor

var file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6e,
	0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67,
	0x70, 0x75, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x96, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x7c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32,
	0xd2, 0x05, 0x0a, 0x11, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x6e,
	0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x54, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x69, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x70, 0x75,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x70,
	0x75, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x70, 0x75, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x70, 0x75, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e,
	0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x65, 0x62, 0x69,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x03, 0x88, 0x02, 0x01, 0x42, 0x74, 0x0a, 0x1e, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x16, 0x47, 0x70, 0x75, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2f, 0x67, 0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xb8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescOnce sync.Once
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescData = file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDesc
)

func file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescData)
	})
	return file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDescData
}

var file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nebius_compute_v1alpha1_gpu_cluster_service_proto_goTypes = []any{
	(*GetGpuClusterRequest)(nil),                   // 0: nebius.compute.v1alpha1.GetGpuClusterRequest
	(*ListGpuClustersRequest)(nil),                 // 1: nebius.compute.v1alpha1.ListGpuClustersRequest
	(*CreateGpuClusterRequest)(nil),                // 2: nebius.compute.v1alpha1.CreateGpuClusterRequest
	(*UpdateGpuClusterRequest)(nil),                // 3: nebius.compute.v1alpha1.UpdateGpuClusterRequest
	(*DeleteGpuClusterRequest)(nil),                // 4: nebius.compute.v1alpha1.DeleteGpuClusterRequest
	(*ListGpuClustersResponse)(nil),                // 5: nebius.compute.v1alpha1.ListGpuClustersResponse
	(*v1.ResourceMetadata)(nil),                    // 6: nebius.common.v1.ResourceMetadata
	(*GpuClusterSpec)(nil),                         // 7: nebius.compute.v1alpha1.GpuClusterSpec
	(*GpuCluster)(nil),                             // 8: nebius.compute.v1alpha1.GpuCluster
	(*v1.GetByNameRequest)(nil),                    // 9: nebius.common.v1.GetByNameRequest
	(*v1alpha1.ListOperationsByParentRequest)(nil), // 10: nebius.common.v1alpha1.ListOperationsByParentRequest
	(*v1alpha1.Operation)(nil),                     // 11: nebius.common.v1alpha1.Operation
	(*v1alpha1.ListOperationsResponse)(nil),        // 12: nebius.common.v1alpha1.ListOperationsResponse
}
var file_nebius_compute_v1alpha1_gpu_cluster_service_proto_depIdxs = []int32{
	6,  // 0: nebius.compute.v1alpha1.CreateGpuClusterRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	7,  // 1: nebius.compute.v1alpha1.CreateGpuClusterRequest.spec:type_name -> nebius.compute.v1alpha1.GpuClusterSpec
	6,  // 2: nebius.compute.v1alpha1.UpdateGpuClusterRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	7,  // 3: nebius.compute.v1alpha1.UpdateGpuClusterRequest.spec:type_name -> nebius.compute.v1alpha1.GpuClusterSpec
	8,  // 4: nebius.compute.v1alpha1.ListGpuClustersResponse.items:type_name -> nebius.compute.v1alpha1.GpuCluster
	0,  // 5: nebius.compute.v1alpha1.GpuClusterService.Get:input_type -> nebius.compute.v1alpha1.GetGpuClusterRequest
	9,  // 6: nebius.compute.v1alpha1.GpuClusterService.GetByName:input_type -> nebius.common.v1.GetByNameRequest
	1,  // 7: nebius.compute.v1alpha1.GpuClusterService.List:input_type -> nebius.compute.v1alpha1.ListGpuClustersRequest
	2,  // 8: nebius.compute.v1alpha1.GpuClusterService.Create:input_type -> nebius.compute.v1alpha1.CreateGpuClusterRequest
	3,  // 9: nebius.compute.v1alpha1.GpuClusterService.Update:input_type -> nebius.compute.v1alpha1.UpdateGpuClusterRequest
	4,  // 10: nebius.compute.v1alpha1.GpuClusterService.Delete:input_type -> nebius.compute.v1alpha1.DeleteGpuClusterRequest
	10, // 11: nebius.compute.v1alpha1.GpuClusterService.ListOperationsByParent:input_type -> nebius.common.v1alpha1.ListOperationsByParentRequest
	8,  // 12: nebius.compute.v1alpha1.GpuClusterService.Get:output_type -> nebius.compute.v1alpha1.GpuCluster
	8,  // 13: nebius.compute.v1alpha1.GpuClusterService.GetByName:output_type -> nebius.compute.v1alpha1.GpuCluster
	5,  // 14: nebius.compute.v1alpha1.GpuClusterService.List:output_type -> nebius.compute.v1alpha1.ListGpuClustersResponse
	11, // 15: nebius.compute.v1alpha1.GpuClusterService.Create:output_type -> nebius.common.v1alpha1.Operation
	11, // 16: nebius.compute.v1alpha1.GpuClusterService.Update:output_type -> nebius.common.v1alpha1.Operation
	11, // 17: nebius.compute.v1alpha1.GpuClusterService.Delete:output_type -> nebius.common.v1alpha1.Operation
	12, // 18: nebius.compute.v1alpha1.GpuClusterService.ListOperationsByParent:output_type -> nebius.common.v1alpha1.ListOperationsResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1alpha1_gpu_cluster_service_proto_init() }
func file_nebius_compute_v1alpha1_gpu_cluster_service_proto_init() {
	if File_nebius_compute_v1alpha1_gpu_cluster_service_proto != nil {
		return
	}
	file_nebius_compute_v1alpha1_gpu_cluster_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_compute_v1alpha1_gpu_cluster_service_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1alpha1_gpu_cluster_service_proto_depIdxs,
		MessageInfos:      file_nebius_compute_v1alpha1_gpu_cluster_service_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1alpha1_gpu_cluster_service_proto = out.File
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_rawDesc = nil
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_goTypes = nil
	file_nebius_compute_v1alpha1_gpu_cluster_service_proto_depIdxs = nil
}
