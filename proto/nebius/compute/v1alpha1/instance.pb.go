// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// nebius/compute/v1alpha1/instance.proto is a deprecated file.

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	v1alpha1 "github.com/nebius/gosdk/proto/nebius/vpc/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type InstanceRecoveryPolicy int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceRecoveryPolicy_RECOVER InstanceRecoveryPolicy = 0
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceRecoveryPolicy_FAIL InstanceRecoveryPolicy = 1
)

// Enum value maps for InstanceRecoveryPolicy.
var (
	InstanceRecoveryPolicy_name = map[int32]string{
		0: "RECOVER",
		1: "FAIL",
	}
	InstanceRecoveryPolicy_value = map[string]int32{
		"RECOVER": 0,
		"FAIL":    1,
	}
)

func (x InstanceRecoveryPolicy) Enum() *InstanceRecoveryPolicy {
	p := new(InstanceRecoveryPolicy)
	*p = x
	return p
}

func (x InstanceRecoveryPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceRecoveryPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_instance_proto_enumTypes[0].Descriptor()
}

func (InstanceRecoveryPolicy) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_instance_proto_enumTypes[0]
}

func (x InstanceRecoveryPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceRecoveryPolicy.Descriptor instead.
func (InstanceRecoveryPolicy) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type AttachedDiskSpec_AttachMode int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedDiskSpec_UNSPECIFIED AttachedDiskSpec_AttachMode = 0
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedDiskSpec_READ_ONLY AttachedDiskSpec_AttachMode = 1
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedDiskSpec_READ_WRITE AttachedDiskSpec_AttachMode = 2
)

// Enum value maps for AttachedDiskSpec_AttachMode.
var (
	AttachedDiskSpec_AttachMode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "READ_ONLY",
		2: "READ_WRITE",
	}
	AttachedDiskSpec_AttachMode_value = map[string]int32{
		"UNSPECIFIED": 0,
		"READ_ONLY":   1,
		"READ_WRITE":  2,
	}
)

func (x AttachedDiskSpec_AttachMode) Enum() *AttachedDiskSpec_AttachMode {
	p := new(AttachedDiskSpec_AttachMode)
	*p = x
	return p
}

func (x AttachedDiskSpec_AttachMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachedDiskSpec_AttachMode) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_instance_proto_enumTypes[1].Descriptor()
}

func (AttachedDiskSpec_AttachMode) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_instance_proto_enumTypes[1]
}

func (x AttachedDiskSpec_AttachMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachedDiskSpec_AttachMode.Descriptor instead.
func (AttachedDiskSpec_AttachMode) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{4, 0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type AttachedFilesystemSpec_AttachMode int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedFilesystemSpec_UNSPECIFIED AttachedFilesystemSpec_AttachMode = 0
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedFilesystemSpec_READ_ONLY AttachedFilesystemSpec_AttachMode = 1
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachedFilesystemSpec_READ_WRITE AttachedFilesystemSpec_AttachMode = 2
)

// Enum value maps for AttachedFilesystemSpec_AttachMode.
var (
	AttachedFilesystemSpec_AttachMode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "READ_ONLY",
		2: "READ_WRITE",
	}
	AttachedFilesystemSpec_AttachMode_value = map[string]int32{
		"UNSPECIFIED": 0,
		"READ_ONLY":   1,
		"READ_WRITE":  2,
	}
)

func (x AttachedFilesystemSpec_AttachMode) Enum() *AttachedFilesystemSpec_AttachMode {
	p := new(AttachedFilesystemSpec_AttachMode)
	*p = x
	return p
}

func (x AttachedFilesystemSpec_AttachMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachedFilesystemSpec_AttachMode) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_instance_proto_enumTypes[2].Descriptor()
}

func (AttachedFilesystemSpec_AttachMode) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_instance_proto_enumTypes[2]
}

func (x AttachedFilesystemSpec_AttachMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachedFilesystemSpec_AttachMode.Descriptor instead.
func (AttachedFilesystemSpec_AttachMode) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{7, 0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type InstanceStatus_InstanceState int32

const (
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_UNSPECIFIED InstanceStatus_InstanceState = 0
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_CREATING InstanceStatus_InstanceState = 1
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_UPDATING InstanceStatus_InstanceState = 2
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_STARTING InstanceStatus_InstanceState = 3
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_RUNNING InstanceStatus_InstanceState = 4
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_STOPPING InstanceStatus_InstanceState = 5
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_STOPPED InstanceStatus_InstanceState = 6
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_DELETING InstanceStatus_InstanceState = 7
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	InstanceStatus_ERROR InstanceStatus_InstanceState = 8
)

// Enum value maps for InstanceStatus_InstanceState.
var (
	InstanceStatus_InstanceState_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CREATING",
		2: "UPDATING",
		3: "STARTING",
		4: "RUNNING",
		5: "STOPPING",
		6: "STOPPED",
		7: "DELETING",
		8: "ERROR",
	}
	InstanceStatus_InstanceState_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CREATING":    1,
		"UPDATING":    2,
		"STARTING":    3,
		"RUNNING":     4,
		"STOPPING":    5,
		"STOPPED":     6,
		"DELETING":    7,
		"ERROR":       8,
	}
)

func (x InstanceStatus_InstanceState) Enum() *InstanceStatus_InstanceState {
	p := new(InstanceStatus_InstanceState)
	*p = x
	return p
}

func (x InstanceStatus_InstanceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceStatus_InstanceState) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1alpha1_instance_proto_enumTypes[3].Descriptor()
}

func (InstanceStatus_InstanceState) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1alpha1_instance_proto_enumTypes[3]
}

func (x InstanceStatus_InstanceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceStatus_InstanceState.Descriptor instead.
func (InstanceStatus_InstanceState) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{8, 0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type Instance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Spec *InstanceSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Status        *InstanceStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{0}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *Instance) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *Instance) GetSpec() *InstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *Instance) GetStatus() *InstanceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type InstanceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	ServiceAccountId string `protobuf:"bytes,1,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Resources *ResourcesSpec `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	GpuCluster *InstanceGpuClusterSpec `protobuf:"bytes,3,opt,name=gpu_cluster,json=gpuCluster,proto3" json:"gpu_cluster,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	NetworkInterfaces []*v1alpha1.NetworkInterfaceSpec `protobuf:"bytes,4,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	BootDisk *AttachedDiskSpec `protobuf:"bytes,5,opt,name=boot_disk,json=bootDisk,proto3" json:"boot_disk,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	SecondaryDisks []*AttachedDiskSpec `protobuf:"bytes,6,rep,name=secondary_disks,json=secondaryDisks,proto3" json:"secondary_disks,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Filesystems []*AttachedFilesystemSpec `protobuf:"bytes,7,rep,name=filesystems,proto3" json:"filesystems,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	CloudInitUserData string `protobuf:"bytes,8,opt,name=cloud_init_user_data,json=cloudInitUserData,proto3" json:"cloud_init_user_data,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Stopped bool `protobuf:"varint,13,opt,name=stopped,proto3" json:"stopped,omitempty"`
	// Recovery policy defines how the instance will be treated in case of a failure. Common source of failure is a host failure, but it can be any other failure.
	// Instance undergoing a guest shutdown (poweroff, etc.) will be subject to recovery policy, meaning that it could be restarted and billed accordingly. Stop instance via API or UI to stop it to avoid recovering.
	// If set to RECOVER, instance will be restarted, if possible. It could be restarted on the same host or on another host.
	// If set to FAIL, instance will be stopped and not restarted.
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	RecoveryPolicy InstanceRecoveryPolicy `protobuf:"varint,15,opt,name=recovery_policy,json=recoveryPolicy,proto3,enum=nebius.compute.v1alpha1.InstanceRecoveryPolicy" json:"recovery_policy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InstanceSpec) Reset() {
	*x = InstanceSpec{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceSpec) ProtoMessage() {}

func (x *InstanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceSpec.ProtoReflect.Descriptor instead.
func (*InstanceSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{1}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetResources() *ResourcesSpec {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetGpuCluster() *InstanceGpuClusterSpec {
	if x != nil {
		return x.GpuCluster
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetNetworkInterfaces() []*v1alpha1.NetworkInterfaceSpec {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetBootDisk() *AttachedDiskSpec {
	if x != nil {
		return x.BootDisk
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetSecondaryDisks() []*AttachedDiskSpec {
	if x != nil {
		return x.SecondaryDisks
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetFilesystems() []*AttachedFilesystemSpec {
	if x != nil {
		return x.Filesystems
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetCloudInitUserData() string {
	if x != nil {
		return x.CloudInitUserData
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceSpec) GetRecoveryPolicy() InstanceRecoveryPolicy {
	if x != nil {
		return x.RecoveryPolicy
	}
	return InstanceRecoveryPolicy_RECOVER
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type ResourcesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	// Types that are valid to be assigned to Size:
	//
	//	*ResourcesSpec_Preset
	Size          isResourcesSpec_Size `protobuf_oneof:"size"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcesSpec) Reset() {
	*x = ResourcesSpec{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesSpec) ProtoMessage() {}

func (x *ResourcesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesSpec.ProtoReflect.Descriptor instead.
func (*ResourcesSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{2}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *ResourcesSpec) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ResourcesSpec) GetSize() isResourcesSpec_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *ResourcesSpec) GetPreset() string {
	if x != nil {
		if x, ok := x.Size.(*ResourcesSpec_Preset); ok {
			return x.Preset
		}
	}
	return ""
}

type isResourcesSpec_Size interface {
	isResourcesSpec_Size()
}

type ResourcesSpec_Preset struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Preset string `protobuf:"bytes,2,opt,name=preset,proto3,oneof"`
}

func (*ResourcesSpec_Preset) isResourcesSpec_Size() {}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type InstanceGpuClusterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceGpuClusterSpec) Reset() {
	*x = InstanceGpuClusterSpec{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceGpuClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGpuClusterSpec) ProtoMessage() {}

func (x *InstanceGpuClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGpuClusterSpec.ProtoReflect.Descriptor instead.
func (*InstanceGpuClusterSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{3}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceGpuClusterSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type AttachedDiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachMode AttachedDiskSpec_AttachMode `protobuf:"varint,1,opt,name=attach_mode,json=attachMode,proto3,enum=nebius.compute.v1alpha1.AttachedDiskSpec_AttachMode" json:"attach_mode,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*AttachedDiskSpec_ExistingDisk
	Type isAttachedDiskSpec_Type `protobuf_oneof:"type"`
	// Specifies the user-defined identifier, allowing to use '/dev/disk/by-id/virtio-{device_name}' as a device path in mount command.
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	DeviceName    string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedDiskSpec) Reset() {
	*x = AttachedDiskSpec{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedDiskSpec) ProtoMessage() {}

func (x *AttachedDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedDiskSpec.ProtoReflect.Descriptor instead.
func (*AttachedDiskSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{4}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedDiskSpec) GetAttachMode() AttachedDiskSpec_AttachMode {
	if x != nil {
		return x.AttachMode
	}
	return AttachedDiskSpec_UNSPECIFIED
}

func (x *AttachedDiskSpec) GetType() isAttachedDiskSpec_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedDiskSpec) GetExistingDisk() *ExistingDisk {
	if x != nil {
		if x, ok := x.Type.(*AttachedDiskSpec_ExistingDisk); ok {
			return x.ExistingDisk
		}
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedDiskSpec) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type isAttachedDiskSpec_Type interface {
	isAttachedDiskSpec_Type()
}

type AttachedDiskSpec_ExistingDisk struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	ExistingDisk *ExistingDisk `protobuf:"bytes,2,opt,name=existing_disk,json=existingDisk,proto3,oneof"`
}

func (*AttachedDiskSpec_ExistingDisk) isAttachedDiskSpec_Type() {}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type ExistingDisk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistingDisk) Reset() {
	*x = ExistingDisk{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistingDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingDisk) ProtoMessage() {}

func (x *ExistingDisk) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingDisk.ProtoReflect.Descriptor instead.
func (*ExistingDisk) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{5}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *ExistingDisk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type ExistingFilesystem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistingFilesystem) Reset() {
	*x = ExistingFilesystem{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistingFilesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingFilesystem) ProtoMessage() {}

func (x *ExistingFilesystem) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingFilesystem.ProtoReflect.Descriptor instead.
func (*ExistingFilesystem) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{6}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *ExistingFilesystem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type AttachedFilesystemSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	AttachMode AttachedFilesystemSpec_AttachMode `protobuf:"varint,1,opt,name=attach_mode,json=attachMode,proto3,enum=nebius.compute.v1alpha1.AttachedFilesystemSpec_AttachMode" json:"attach_mode,omitempty"`
	// Specifies the user-defined identifier, allowing to use it as a device in mount command.
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*AttachedFilesystemSpec_ExistingFilesystem
	Type          isAttachedFilesystemSpec_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedFilesystemSpec) Reset() {
	*x = AttachedFilesystemSpec{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedFilesystemSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedFilesystemSpec) ProtoMessage() {}

func (x *AttachedFilesystemSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedFilesystemSpec.ProtoReflect.Descriptor instead.
func (*AttachedFilesystemSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{7}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedFilesystemSpec) GetAttachMode() AttachedFilesystemSpec_AttachMode {
	if x != nil {
		return x.AttachMode
	}
	return AttachedFilesystemSpec_UNSPECIFIED
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedFilesystemSpec) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AttachedFilesystemSpec) GetType() isAttachedFilesystemSpec_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *AttachedFilesystemSpec) GetExistingFilesystem() *ExistingFilesystem {
	if x != nil {
		if x, ok := x.Type.(*AttachedFilesystemSpec_ExistingFilesystem); ok {
			return x.ExistingFilesystem
		}
	}
	return nil
}

type isAttachedFilesystemSpec_Type interface {
	isAttachedFilesystemSpec_Type()
}

type AttachedFilesystemSpec_ExistingFilesystem struct {
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	ExistingFilesystem *ExistingFilesystem `protobuf:"bytes,3,opt,name=existing_filesystem,json=existingFilesystem,proto3,oneof"`
}

func (*AttachedFilesystemSpec_ExistingFilesystem) isAttachedFilesystemSpec_Type() {}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
type InstanceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	State InstanceStatus_InstanceState `protobuf:"varint,1,opt,name=state,proto3,enum=nebius.compute.v1alpha1.InstanceStatus_InstanceState" json:"state,omitempty"`
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	NetworkInterfaces []*v1alpha1.NetworkInterfaceStatus `protobuf:"bytes,2,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// Indicates whether there is an ongoing operation
	//
	// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
	Reconciling   bool `protobuf:"varint,5,opt,name=reconciling,proto3" json:"reconciling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceStatus) Reset() {
	*x = InstanceStatus{}
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceStatus) ProtoMessage() {}

func (x *InstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1alpha1_instance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceStatus.ProtoReflect.Descriptor instead.
func (*InstanceStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP(), []int{8}
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceStatus) GetState() InstanceStatus_InstanceState {
	if x != nil {
		return x.State
	}
	return InstanceStatus_UNSPECIFIED
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceStatus) GetNetworkInterfaces() []*v1alpha1.NetworkInterfaceStatus {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

// Deprecated: The entire proto file nebius/compute/v1alpha1/instance.proto is marked as deprecated.
func (x *InstanceStatus) GetReconciling() bool {
	if x != nil {
		return x.Reconciling
	}
	return false
}

var File_nebius_compute_v1alpha1_instance_proto protoreflect.FileDescriptor

const file_nebius_compute_v1alpha1_instance_proto_rawDesc = "" +
	"\n" +
	"&nebius/compute/v1alpha1/instance.proto\x12\x17nebius.compute.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\x1a+nebius/vpc/v1alpha1/network_interface.proto\"\xc6\x01\n" +
	"\bInstance\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataR\bmetadata\x129\n" +
	"\x04spec\x18\x02 \x01(\v2%.nebius.compute.v1alpha1.InstanceSpecR\x04spec\x12?\n" +
	"\x06status\x18\x03 \x01(\v2'.nebius.compute.v1alpha1.InstanceStatusR\x06status\"\x83\x06\n" +
	"\fInstanceSpec\x122\n" +
	"\x12service_account_id\x18\x01 \x01(\tB\x04\xbaJ\x01\x02R\x10serviceAccountId\x12P\n" +
	"\tresources\x18\x02 \x01(\v2&.nebius.compute.v1alpha1.ResourcesSpecB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\tresources\x12V\n" +
	"\vgpu_cluster\x18\x03 \x01(\v2/.nebius.compute.v1alpha1.InstanceGpuClusterSpecB\x04\xbaJ\x01\x02R\n" +
	"gpuCluster\x12d\n" +
	"\x12network_interfaces\x18\x04 \x03(\v2).nebius.vpc.v1alpha1.NetworkInterfaceSpecB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x11networkInterfaces\x12L\n" +
	"\tboot_disk\x18\x05 \x01(\v2).nebius.compute.v1alpha1.AttachedDiskSpecB\x04\xbaJ\x01\x02R\bbootDisk\x12R\n" +
	"\x0fsecondary_disks\x18\x06 \x03(\v2).nebius.compute.v1alpha1.AttachedDiskSpecR\x0esecondaryDisks\x12W\n" +
	"\vfilesystems\x18\a \x03(\v2/.nebius.compute.v1alpha1.AttachedFilesystemSpecB\x04\xbaJ\x01\x02R\vfilesystems\x124\n" +
	"\x14cloud_init_user_data\x18\b \x01(\tB\x03\xc0J\x01R\x11cloudInitUserData\x12\x18\n" +
	"\astopped\x18\r \x01(\bR\astopped\x12^\n" +
	"\x0frecovery_policy\x18\x0f \x01(\x0e2/.nebius.compute.v1alpha1.InstanceRecoveryPolicyB\x04\xbaJ\x01\x02R\x0erecoveryPolicyJ\x04\b\v\x10\f\"\\\n" +
	"\rResourcesSpec\x12\"\n" +
	"\bplatform\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bplatform\x12\x18\n" +
	"\x06preset\x18\x02 \x01(\tH\x00R\x06presetB\r\n" +
	"\x04size\x12\x05\xbaH\x02\b\x01\"(\n" +
	"\x16InstanceGpuClusterSpec\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xb6\x02\n" +
	"\x10AttachedDiskSpec\x12]\n" +
	"\vattach_mode\x18\x01 \x01(\x0e24.nebius.compute.v1alpha1.AttachedDiskSpec.AttachModeB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"attachMode\x12L\n" +
	"\rexisting_disk\x18\x02 \x01(\v2%.nebius.compute.v1alpha1.ExistingDiskH\x00R\fexistingDisk\x12(\n" +
	"\vdevice_name\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x18\x14R\n" +
	"deviceName\"<\n" +
	"\n" +
	"AttachMode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\r\n" +
	"\tREAD_ONLY\x10\x01\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x02B\r\n" +
	"\x04type\x12\x05\xbaH\x02\b\x01\"&\n" +
	"\fExistingDisk\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\",\n" +
	"\x12ExistingFilesystem\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\"\xd3\x02\n" +
	"\x16AttachedFilesystemSpec\x12c\n" +
	"\vattach_mode\x18\x01 \x01(\x0e2:.nebius.compute.v1alpha1.AttachedFilesystemSpec.AttachModeB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"attachMode\x12'\n" +
	"\vdevice_name\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"deviceName\x12^\n" +
	"\x13existing_filesystem\x18\x03 \x01(\v2+.nebius.compute.v1alpha1.ExistingFilesystemH\x00R\x12existingFilesystem\"<\n" +
	"\n" +
	"AttachMode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\r\n" +
	"\tREAD_ONLY\x10\x01\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x02B\r\n" +
	"\x04type\x12\x05\xbaH\x02\b\x01\"\xe9\x02\n" +
	"\x0eInstanceStatus\x12K\n" +
	"\x05state\x18\x01 \x01(\x0e25.nebius.compute.v1alpha1.InstanceStatus.InstanceStateR\x05state\x12Z\n" +
	"\x12network_interfaces\x18\x02 \x03(\v2+.nebius.vpc.v1alpha1.NetworkInterfaceStatusR\x11networkInterfaces\x12 \n" +
	"\vreconciling\x18\x05 \x01(\bR\vreconciling\"\x8b\x01\n" +
	"\rInstanceState\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\f\n" +
	"\bUPDATING\x10\x02\x12\f\n" +
	"\bSTARTING\x10\x03\x12\v\n" +
	"\aRUNNING\x10\x04\x12\f\n" +
	"\bSTOPPING\x10\x05\x12\v\n" +
	"\aSTOPPED\x10\x06\x12\f\n" +
	"\bDELETING\x10\a\x12\t\n" +
	"\x05ERROR\x10\b*/\n" +
	"\x16InstanceRecoveryPolicy\x12\v\n" +
	"\aRECOVER\x10\x00\x12\b\n" +
	"\x04FAIL\x10\x01Bk\n" +
	"\x1eai.nebius.pub.compute.v1alpha1B\rInstanceProtoP\x01Z5github.com/nebius/gosdk/proto/nebius/compute/v1alpha1\xb8\x01\x01b\x06proto3"

var (
	file_nebius_compute_v1alpha1_instance_proto_rawDescOnce sync.Once
	file_nebius_compute_v1alpha1_instance_proto_rawDescData []byte
)

func file_nebius_compute_v1alpha1_instance_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1alpha1_instance_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1alpha1_instance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_compute_v1alpha1_instance_proto_rawDesc), len(file_nebius_compute_v1alpha1_instance_proto_rawDesc)))
	})
	return file_nebius_compute_v1alpha1_instance_proto_rawDescData
}

var file_nebius_compute_v1alpha1_instance_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_nebius_compute_v1alpha1_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_nebius_compute_v1alpha1_instance_proto_goTypes = []any{
	(InstanceRecoveryPolicy)(0),             // 0: nebius.compute.v1alpha1.InstanceRecoveryPolicy
	(AttachedDiskSpec_AttachMode)(0),        // 1: nebius.compute.v1alpha1.AttachedDiskSpec.AttachMode
	(AttachedFilesystemSpec_AttachMode)(0),  // 2: nebius.compute.v1alpha1.AttachedFilesystemSpec.AttachMode
	(InstanceStatus_InstanceState)(0),       // 3: nebius.compute.v1alpha1.InstanceStatus.InstanceState
	(*Instance)(nil),                        // 4: nebius.compute.v1alpha1.Instance
	(*InstanceSpec)(nil),                    // 5: nebius.compute.v1alpha1.InstanceSpec
	(*ResourcesSpec)(nil),                   // 6: nebius.compute.v1alpha1.ResourcesSpec
	(*InstanceGpuClusterSpec)(nil),          // 7: nebius.compute.v1alpha1.InstanceGpuClusterSpec
	(*AttachedDiskSpec)(nil),                // 8: nebius.compute.v1alpha1.AttachedDiskSpec
	(*ExistingDisk)(nil),                    // 9: nebius.compute.v1alpha1.ExistingDisk
	(*ExistingFilesystem)(nil),              // 10: nebius.compute.v1alpha1.ExistingFilesystem
	(*AttachedFilesystemSpec)(nil),          // 11: nebius.compute.v1alpha1.AttachedFilesystemSpec
	(*InstanceStatus)(nil),                  // 12: nebius.compute.v1alpha1.InstanceStatus
	(*v1.ResourceMetadata)(nil),             // 13: nebius.common.v1.ResourceMetadata
	(*v1alpha1.NetworkInterfaceSpec)(nil),   // 14: nebius.vpc.v1alpha1.NetworkInterfaceSpec
	(*v1alpha1.NetworkInterfaceStatus)(nil), // 15: nebius.vpc.v1alpha1.NetworkInterfaceStatus
}
var file_nebius_compute_v1alpha1_instance_proto_depIdxs = []int32{
	13, // 0: nebius.compute.v1alpha1.Instance.metadata:type_name -> nebius.common.v1.ResourceMetadata
	5,  // 1: nebius.compute.v1alpha1.Instance.spec:type_name -> nebius.compute.v1alpha1.InstanceSpec
	12, // 2: nebius.compute.v1alpha1.Instance.status:type_name -> nebius.compute.v1alpha1.InstanceStatus
	6,  // 3: nebius.compute.v1alpha1.InstanceSpec.resources:type_name -> nebius.compute.v1alpha1.ResourcesSpec
	7,  // 4: nebius.compute.v1alpha1.InstanceSpec.gpu_cluster:type_name -> nebius.compute.v1alpha1.InstanceGpuClusterSpec
	14, // 5: nebius.compute.v1alpha1.InstanceSpec.network_interfaces:type_name -> nebius.vpc.v1alpha1.NetworkInterfaceSpec
	8,  // 6: nebius.compute.v1alpha1.InstanceSpec.boot_disk:type_name -> nebius.compute.v1alpha1.AttachedDiskSpec
	8,  // 7: nebius.compute.v1alpha1.InstanceSpec.secondary_disks:type_name -> nebius.compute.v1alpha1.AttachedDiskSpec
	11, // 8: nebius.compute.v1alpha1.InstanceSpec.filesystems:type_name -> nebius.compute.v1alpha1.AttachedFilesystemSpec
	0,  // 9: nebius.compute.v1alpha1.InstanceSpec.recovery_policy:type_name -> nebius.compute.v1alpha1.InstanceRecoveryPolicy
	1,  // 10: nebius.compute.v1alpha1.AttachedDiskSpec.attach_mode:type_name -> nebius.compute.v1alpha1.AttachedDiskSpec.AttachMode
	9,  // 11: nebius.compute.v1alpha1.AttachedDiskSpec.existing_disk:type_name -> nebius.compute.v1alpha1.ExistingDisk
	2,  // 12: nebius.compute.v1alpha1.AttachedFilesystemSpec.attach_mode:type_name -> nebius.compute.v1alpha1.AttachedFilesystemSpec.AttachMode
	10, // 13: nebius.compute.v1alpha1.AttachedFilesystemSpec.existing_filesystem:type_name -> nebius.compute.v1alpha1.ExistingFilesystem
	3,  // 14: nebius.compute.v1alpha1.InstanceStatus.state:type_name -> nebius.compute.v1alpha1.InstanceStatus.InstanceState
	15, // 15: nebius.compute.v1alpha1.InstanceStatus.network_interfaces:type_name -> nebius.vpc.v1alpha1.NetworkInterfaceStatus
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1alpha1_instance_proto_init() }
func file_nebius_compute_v1alpha1_instance_proto_init() {
	if File_nebius_compute_v1alpha1_instance_proto != nil {
		return
	}
	file_nebius_compute_v1alpha1_instance_proto_msgTypes[2].OneofWrappers = []any{
		(*ResourcesSpec_Preset)(nil),
	}
	file_nebius_compute_v1alpha1_instance_proto_msgTypes[4].OneofWrappers = []any{
		(*AttachedDiskSpec_ExistingDisk)(nil),
	}
	file_nebius_compute_v1alpha1_instance_proto_msgTypes[7].OneofWrappers = []any{
		(*AttachedFilesystemSpec_ExistingFilesystem)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_compute_v1alpha1_instance_proto_rawDesc), len(file_nebius_compute_v1alpha1_instance_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_compute_v1alpha1_instance_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1alpha1_instance_proto_depIdxs,
		EnumInfos:         file_nebius_compute_v1alpha1_instance_proto_enumTypes,
		MessageInfos:      file_nebius_compute_v1alpha1_instance_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1alpha1_instance_proto = out.File
	file_nebius_compute_v1alpha1_instance_proto_goTypes = nil
	file_nebius_compute_v1alpha1_instance_proto_depIdxs = nil
}
