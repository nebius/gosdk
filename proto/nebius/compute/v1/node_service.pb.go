// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/compute/v1/node_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeSetUnhealthyRequest struct {
	state           protoimpl.MessageState                   `protogen:"open.v1"`
	InstanceId      string                                   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	HealthCheckInfo *NodeSetUnhealthyRequest_HealthCheckInfo `protobuf:"bytes,2,opt,name=health_check_info,json=healthCheckInfo,proto3" json:"health_check_info,omitempty"`
	// If set to true, the call performs the authorization and limit checks, but does not mark node unhealthy.
	// False by default
	DryRun        bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeSetUnhealthyRequest) Reset() {
	*x = NodeSetUnhealthyRequest{}
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSetUnhealthyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSetUnhealthyRequest) ProtoMessage() {}

func (x *NodeSetUnhealthyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSetUnhealthyRequest.ProtoReflect.Descriptor instead.
func (*NodeSetUnhealthyRequest) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_node_service_proto_rawDescGZIP(), []int{0}
}

func (x *NodeSetUnhealthyRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *NodeSetUnhealthyRequest) GetHealthCheckInfo() *NodeSetUnhealthyRequest_HealthCheckInfo {
	if x != nil {
		return x.HealthCheckInfo
	}
	return nil
}

func (x *NodeSetUnhealthyRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type NodeSetUnhealthyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeSetUnhealthyResponse) Reset() {
	*x = NodeSetUnhealthyResponse{}
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSetUnhealthyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSetUnhealthyResponse) ProtoMessage() {}

func (x *NodeSetUnhealthyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSetUnhealthyResponse.ProtoReflect.Descriptor instead.
func (*NodeSetUnhealthyResponse) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_node_service_proto_rawDescGZIP(), []int{1}
}

type NodeSetUnhealthyRequest_HealthCheckInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Time when the unhealthy node was observed
	ObservedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=observed_at,json=observedAt,proto3" json:"observed_at,omitempty"`
	// Identifies specific GPU check that failed in soperator (key for observability)
	CheckId string `protobuf:"bytes,2,opt,name=check_id,json=checkId,proto3" json:"check_id,omitempty"`
	// Human-readable description of the error for further investigation
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) Reset() {
	*x = NodeSetUnhealthyRequest_HealthCheckInfo{}
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSetUnhealthyRequest_HealthCheckInfo) ProtoMessage() {}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_node_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSetUnhealthyRequest_HealthCheckInfo.ProtoReflect.Descriptor instead.
func (*NodeSetUnhealthyRequest_HealthCheckInfo) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_node_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) GetObservedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ObservedAt
	}
	return nil
}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) GetCheckId() string {
	if x != nil {
		return x.CheckId
	}
	return ""
}

func (x *NodeSetUnhealthyRequest_HealthCheckInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_nebius_compute_v1_node_service_proto protoreflect.FileDescriptor

const file_nebius_compute_v1_node_service_proto_rawDesc = "" +
	"\n" +
	"$nebius/compute/v1/node_service.proto\x12\x11nebius.compute.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\"\xf1\x02\n" +
	"\x17NodeSetUnhealthyRequest\x12'\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"instanceId\x12n\n" +
	"\x11health_check_info\x18\x02 \x01(\v2:.nebius.compute.v1.NodeSetUnhealthyRequest.HealthCheckInfoB\x06\xbaH\x03\xc8\x01\x01R\x0fhealthCheckInfo\x12\x17\n" +
	"\adry_run\x18\x03 \x01(\bR\x06dryRun\x1a\xa3\x01\n" +
	"\x0fHealthCheckInfo\x12C\n" +
	"\vobserved_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"observedAt\x12!\n" +
	"\bcheck_id\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\acheckId\x12(\n" +
	"\vdescription\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\vdescription\"\x1a\n" +
	"\x18NodeSetUnhealthyResponse2\x82\x01\n" +
	"\vNodeService\x12g\n" +
	"\fSetUnhealthy\x12*.nebius.compute.v1.NodeSetUnhealthyRequest\x1a+.nebius.compute.v1.NodeSetUnhealthyResponse\x1a\n" +
	"\xbaJ\acomputeB_\n" +
	"\x18ai.nebius.pub.compute.v1B\x10NodeServiceProtoP\x01Z/github.com/nebius/gosdk/proto/nebius/compute/v1b\x06proto3"

var (
	file_nebius_compute_v1_node_service_proto_rawDescOnce sync.Once
	file_nebius_compute_v1_node_service_proto_rawDescData []byte
)

func file_nebius_compute_v1_node_service_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1_node_service_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1_node_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_node_service_proto_rawDesc), len(file_nebius_compute_v1_node_service_proto_rawDesc)))
	})
	return file_nebius_compute_v1_node_service_proto_rawDescData
}

var file_nebius_compute_v1_node_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nebius_compute_v1_node_service_proto_goTypes = []any{
	(*NodeSetUnhealthyRequest)(nil),                 // 0: nebius.compute.v1.NodeSetUnhealthyRequest
	(*NodeSetUnhealthyResponse)(nil),                // 1: nebius.compute.v1.NodeSetUnhealthyResponse
	(*NodeSetUnhealthyRequest_HealthCheckInfo)(nil), // 2: nebius.compute.v1.NodeSetUnhealthyRequest.HealthCheckInfo
	(*timestamppb.Timestamp)(nil),                   // 3: google.protobuf.Timestamp
}
var file_nebius_compute_v1_node_service_proto_depIdxs = []int32{
	2, // 0: nebius.compute.v1.NodeSetUnhealthyRequest.health_check_info:type_name -> nebius.compute.v1.NodeSetUnhealthyRequest.HealthCheckInfo
	3, // 1: nebius.compute.v1.NodeSetUnhealthyRequest.HealthCheckInfo.observed_at:type_name -> google.protobuf.Timestamp
	0, // 2: nebius.compute.v1.NodeService.SetUnhealthy:input_type -> nebius.compute.v1.NodeSetUnhealthyRequest
	1, // 3: nebius.compute.v1.NodeService.SetUnhealthy:output_type -> nebius.compute.v1.NodeSetUnhealthyResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1_node_service_proto_init() }
func file_nebius_compute_v1_node_service_proto_init() {
	if File_nebius_compute_v1_node_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_node_service_proto_rawDesc), len(file_nebius_compute_v1_node_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_compute_v1_node_service_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1_node_service_proto_depIdxs,
		MessageInfos:      file_nebius_compute_v1_node_service_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1_node_service_proto = out.File
	file_nebius_compute_v1_node_service_proto_goTypes = nil
	file_nebius_compute_v1_node_service_proto_depIdxs = nil
}
