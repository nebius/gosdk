// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/compute/v1/image.proto

package v1

import (
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageSpec_CPUArchitecture int32

const (
	ImageSpec_UNSPECIFIED ImageSpec_CPUArchitecture = 0
	ImageSpec_AMD64       ImageSpec_CPUArchitecture = 1
	ImageSpec_ARM64       ImageSpec_CPUArchitecture = 2
)

// Enum value maps for ImageSpec_CPUArchitecture.
var (
	ImageSpec_CPUArchitecture_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "AMD64",
		2: "ARM64",
	}
	ImageSpec_CPUArchitecture_value = map[string]int32{
		"UNSPECIFIED": 0,
		"AMD64":       1,
		"ARM64":       2,
	}
)

func (x ImageSpec_CPUArchitecture) Enum() *ImageSpec_CPUArchitecture {
	p := new(ImageSpec_CPUArchitecture)
	*p = x
	return p
}

func (x ImageSpec_CPUArchitecture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageSpec_CPUArchitecture) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1_image_proto_enumTypes[0].Descriptor()
}

func (ImageSpec_CPUArchitecture) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1_image_proto_enumTypes[0]
}

func (x ImageSpec_CPUArchitecture) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageSpec_CPUArchitecture.Descriptor instead.
func (ImageSpec_CPUArchitecture) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1_image_proto_rawDescGZIP(), []int{1, 0}
}

type ImageStatus_State int32

const (
	ImageStatus_UNSPECIFIED ImageStatus_State = 0
	ImageStatus_CREATING    ImageStatus_State = 1
	ImageStatus_READY       ImageStatus_State = 2
	ImageStatus_UPDATING    ImageStatus_State = 3
	ImageStatus_DELETING    ImageStatus_State = 4
	ImageStatus_ERROR       ImageStatus_State = 5
)

// Enum value maps for ImageStatus_State.
var (
	ImageStatus_State_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CREATING",
		2: "READY",
		3: "UPDATING",
		4: "DELETING",
		5: "ERROR",
	}
	ImageStatus_State_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CREATING":    1,
		"READY":       2,
		"UPDATING":    3,
		"DELETING":    4,
		"ERROR":       5,
	}
)

func (x ImageStatus_State) Enum() *ImageStatus_State {
	p := new(ImageStatus_State)
	*p = x
	return p
}

func (x ImageStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_compute_v1_image_proto_enumTypes[1].Descriptor()
}

func (ImageStatus_State) Type() protoreflect.EnumType {
	return &file_nebius_compute_v1_image_proto_enumTypes[1]
}

func (x ImageStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageStatus_State.Descriptor instead.
func (ImageStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_compute_v1_image_proto_rawDescGZIP(), []int{2, 0}
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ImageSpec             `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *ImageStatus           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_nebius_compute_v1_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_image_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Image) GetSpec() *ImageSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Image) GetStatus() *ImageStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ImageSpec struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	Description     *string                   `protobuf:"bytes,1,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ImageFamily     string                    `protobuf:"bytes,2,opt,name=image_family,json=imageFamily,proto3" json:"image_family,omitempty"`
	Version         string                    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	CpuArchitecture ImageSpec_CPUArchitecture `protobuf:"varint,6,opt,name=cpu_architecture,json=cpuArchitecture,proto3,enum=nebius.compute.v1.ImageSpec_CPUArchitecture" json:"cpu_architecture,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImageSpec) Reset() {
	*x = ImageSpec{}
	mi := &file_nebius_compute_v1_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpec) ProtoMessage() {}

func (x *ImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpec.ProtoReflect.Descriptor instead.
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageSpec) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ImageSpec) GetImageFamily() string {
	if x != nil {
		return x.ImageFamily
	}
	return ""
}

func (x *ImageSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ImageSpec) GetCpuArchitecture() ImageSpec_CPUArchitecture {
	if x != nil {
		return x.CpuArchitecture
	}
	return ImageSpec_UNSPECIFIED
}

type ImageStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	State            ImageStatus_State      `protobuf:"varint,1,opt,name=state,proto3,enum=nebius.compute.v1.ImageStatus_State" json:"state,omitempty"`
	StateDescription string                 `protobuf:"bytes,2,opt,name=state_description,json=stateDescription,proto3" json:"state_description,omitempty"`
	StorageSizeBytes int64                  `protobuf:"varint,3,opt,name=storage_size_bytes,json=storageSizeBytes,proto3" json:"storage_size_bytes,omitempty"`
	MinDiskSizeBytes int64                  `protobuf:"varint,4,opt,name=min_disk_size_bytes,json=minDiskSizeBytes,proto3" json:"min_disk_size_bytes,omitempty"`
	// Indicates whether there is an ongoing operation
	Reconciling   bool `protobuf:"varint,5,opt,name=reconciling,proto3" json:"reconciling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageStatus) Reset() {
	*x = ImageStatus{}
	mi := &file_nebius_compute_v1_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageStatus) ProtoMessage() {}

func (x *ImageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageStatus.ProtoReflect.Descriptor instead.
func (*ImageStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_image_proto_rawDescGZIP(), []int{2}
}

func (x *ImageStatus) GetState() ImageStatus_State {
	if x != nil {
		return x.State
	}
	return ImageStatus_UNSPECIFIED
}

func (x *ImageStatus) GetStateDescription() string {
	if x != nil {
		return x.StateDescription
	}
	return ""
}

func (x *ImageStatus) GetStorageSizeBytes() int64 {
	if x != nil {
		return x.StorageSizeBytes
	}
	return 0
}

func (x *ImageStatus) GetMinDiskSizeBytes() int64 {
	if x != nil {
		return x.MinDiskSizeBytes
	}
	return 0
}

func (x *ImageStatus) GetReconciling() bool {
	if x != nil {
		return x.Reconciling
	}
	return false
}

var File_nebius_compute_v1_image_proto protoreflect.FileDescriptor

const file_nebius_compute_v1_image_proto_rawDesc = "" +
	"\n" +
	"\x1dnebius/compute/v1/image.proto\x12\x11nebius.compute.v1\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\"\xb1\x01\n" +
	"\x05Image\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataR\bmetadata\x120\n" +
	"\x04spec\x18\x02 \x01(\v2\x1c.nebius.compute.v1.ImageSpecR\x04spec\x126\n" +
	"\x06status\x18\x03 \x01(\v2\x1e.nebius.compute.v1.ImageStatusR\x06status\"\xaa\x02\n" +
	"\tImageSpec\x12+\n" +
	"\vdescription\x18\x01 \x01(\tB\x04\xbaJ\x01\x02H\x00R\vdescription\x88\x01\x01\x12'\n" +
	"\fimage_family\x18\x02 \x01(\tB\x04\xbaJ\x01\x02R\vimageFamily\x12\x1e\n" +
	"\aversion\x18\x03 \x01(\tB\x04\xbaJ\x01\x02R\aversion\x12]\n" +
	"\x10cpu_architecture\x18\x06 \x01(\x0e2,.nebius.compute.v1.ImageSpec.CPUArchitectureB\x04\xbaJ\x01\x02R\x0fcpuArchitecture\"8\n" +
	"\x0fCPUArchitecture\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\t\n" +
	"\x05AMD64\x10\x01\x12\t\n" +
	"\x05ARM64\x10\x02B\x0e\n" +
	"\f_description\"\xcf\x02\n" +
	"\vImageStatus\x12:\n" +
	"\x05state\x18\x01 \x01(\x0e2$.nebius.compute.v1.ImageStatus.StateR\x05state\x12+\n" +
	"\x11state_description\x18\x02 \x01(\tR\x10stateDescription\x12,\n" +
	"\x12storage_size_bytes\x18\x03 \x01(\x03R\x10storageSizeBytes\x12-\n" +
	"\x13min_disk_size_bytes\x18\x04 \x01(\x03R\x10minDiskSizeBytes\x12 \n" +
	"\vreconciling\x18\x05 \x01(\bR\vreconciling\"X\n" +
	"\x05State\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\t\n" +
	"\x05READY\x10\x02\x12\f\n" +
	"\bUPDATING\x10\x03\x12\f\n" +
	"\bDELETING\x10\x04\x12\t\n" +
	"\x05ERROR\x10\x05BY\n" +
	"\x18ai.nebius.pub.compute.v1B\n" +
	"ImageProtoP\x01Z/github.com/nebius/gosdk/proto/nebius/compute/v1b\x06proto3"

var (
	file_nebius_compute_v1_image_proto_rawDescOnce sync.Once
	file_nebius_compute_v1_image_proto_rawDescData []byte
)

func file_nebius_compute_v1_image_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1_image_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1_image_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_image_proto_rawDesc), len(file_nebius_compute_v1_image_proto_rawDesc)))
	})
	return file_nebius_compute_v1_image_proto_rawDescData
}

var file_nebius_compute_v1_image_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nebius_compute_v1_image_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nebius_compute_v1_image_proto_goTypes = []any{
	(ImageSpec_CPUArchitecture)(0), // 0: nebius.compute.v1.ImageSpec.CPUArchitecture
	(ImageStatus_State)(0),         // 1: nebius.compute.v1.ImageStatus.State
	(*Image)(nil),                  // 2: nebius.compute.v1.Image
	(*ImageSpec)(nil),              // 3: nebius.compute.v1.ImageSpec
	(*ImageStatus)(nil),            // 4: nebius.compute.v1.ImageStatus
	(*v1.ResourceMetadata)(nil),    // 5: nebius.common.v1.ResourceMetadata
}
var file_nebius_compute_v1_image_proto_depIdxs = []int32{
	5, // 0: nebius.compute.v1.Image.metadata:type_name -> nebius.common.v1.ResourceMetadata
	3, // 1: nebius.compute.v1.Image.spec:type_name -> nebius.compute.v1.ImageSpec
	4, // 2: nebius.compute.v1.Image.status:type_name -> nebius.compute.v1.ImageStatus
	0, // 3: nebius.compute.v1.ImageSpec.cpu_architecture:type_name -> nebius.compute.v1.ImageSpec.CPUArchitecture
	1, // 4: nebius.compute.v1.ImageStatus.state:type_name -> nebius.compute.v1.ImageStatus.State
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1_image_proto_init() }
func file_nebius_compute_v1_image_proto_init() {
	if File_nebius_compute_v1_image_proto != nil {
		return
	}
	file_nebius_compute_v1_image_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_image_proto_rawDesc), len(file_nebius_compute_v1_image_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_compute_v1_image_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1_image_proto_depIdxs,
		EnumInfos:         file_nebius_compute_v1_image_proto_enumTypes,
		MessageInfos:      file_nebius_compute_v1_image_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1_image_proto = out.File
	file_nebius_compute_v1_image_proto_goTypes = nil
	file_nebius_compute_v1_image_proto_depIdxs = nil
}
