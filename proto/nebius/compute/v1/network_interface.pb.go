// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: nebius/compute/v1/network_interface.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the specification of a network interface.
type NetworkInterfaceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subnet ID
	SubnetId string `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Name for interface.
	// Must be unique within instance's network interfaces
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Private IPv4 address associated with the interface.
	IpAddress *IPAddress `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Public IPv4 address associated with the interface.
	PublicIpAddress *PublicIPAddress `protobuf:"bytes,4,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
}

func (x *NetworkInterfaceSpec) Reset() {
	*x = NetworkInterfaceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceSpec) ProtoMessage() {}

func (x *NetworkInterfaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceSpec.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInterfaceSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetIpAddress() *IPAddress {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetPublicIpAddress() *PublicIPAddress {
	if x != nil {
		return x.PublicIpAddress
	}
	return nil
}

// Describes an IPv4 address.
type IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Allocation identifier if it was created before.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *IPAddress) Reset() {
	*x = IPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddress) ProtoMessage() {}

func (x *IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddress.ProtoReflect.Descriptor instead.
func (*IPAddress) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{1}
}

func (x *IPAddress) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Describes a public IP address.
type PublicIPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes different methods of public IP address allocation.
	//
	// Types that are assignable to Allocation:
	//
	//	*PublicIPAddress_AllocationId
	Allocation isPublicIPAddress_Allocation `protobuf_oneof:"allocation"`
	// If false - Allocation will be created/deleted during NetworkInterface.Allocate/NetworkInterface.Deallocate
	// If true  - Allocation will be created/deleted during NetworkInterface.Create/NetworkInterface.Delete
	// False by default
	Static bool `protobuf:"varint,3,opt,name=static,proto3" json:"static,omitempty"`
}

func (x *PublicIPAddress) Reset() {
	*x = PublicIPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicIPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicIPAddress) ProtoMessage() {}

func (x *PublicIPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicIPAddress.ProtoReflect.Descriptor instead.
func (*PublicIPAddress) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{2}
}

func (m *PublicIPAddress) GetAllocation() isPublicIPAddress_Allocation {
	if m != nil {
		return m.Allocation
	}
	return nil
}

func (x *PublicIPAddress) GetAllocationId() string {
	if x, ok := x.GetAllocation().(*PublicIPAddress_AllocationId); ok {
		return x.AllocationId
	}
	return ""
}

func (x *PublicIPAddress) GetStatic() bool {
	if x != nil {
		return x.Static
	}
	return false
}

type isPublicIPAddress_Allocation interface {
	isPublicIPAddress_Allocation()
}

type PublicIPAddress_AllocationId struct {
	// Allocation identifier if it was created before.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3,oneof"`
}

func (*PublicIPAddress_AllocationId) isPublicIPAddress_Allocation() {}

// Describes the status of a network interface.
type NetworkInterfaceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the network interface
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// Name for interface.
	// Unique within instance's network interfaces
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Effective Private IPv4 address
	IpAddress *IPAddressStatus `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Effective Public IPv4 address
	PublicIpAddress *PublicIPAddressStatus `protobuf:"bytes,4,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
	// MAC address
	MacAddress string `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *NetworkInterfaceStatus) Reset() {
	*x = NetworkInterfaceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceStatus) ProtoMessage() {}

func (x *NetworkInterfaceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceStatus.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkInterfaceStatus) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NetworkInterfaceStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceStatus) GetIpAddress() *IPAddressStatus {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *NetworkInterfaceStatus) GetPublicIpAddress() *PublicIPAddressStatus {
	if x != nil {
		return x.PublicIpAddress
	}
	return nil
}

func (x *NetworkInterfaceStatus) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type IPAddressStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Effective private IPv4 address assigned to the interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Allocation identifier.
	AllocationId string `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *IPAddressStatus) Reset() {
	*x = IPAddressStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddressStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddressStatus) ProtoMessage() {}

func (x *IPAddressStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddressStatus.ProtoReflect.Descriptor instead.
func (*IPAddressStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{4}
}

func (x *IPAddressStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IPAddressStatus) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

type PublicIPAddressStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Effective public IPv4 address assigned to the interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Allocation identifier.
	AllocationId string `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *PublicIPAddressStatus) Reset() {
	*x = PublicIPAddressStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicIPAddressStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicIPAddressStatus) ProtoMessage() {}

func (x *PublicIPAddressStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicIPAddressStatus.ProtoReflect.Descriptor instead.
func (*PublicIPAddressStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{5}
}

func (x *PublicIPAddressStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PublicIPAddressStatus) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

var File_nebius_compute_v1_network_interface_proto protoreflect.FileDescriptor

var file_nebius_compute_v1_network_interface_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x02, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x27,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xba, 0x4a, 0x01, 0x02, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xba, 0x48, 0x1f, 0xc8, 0x01, 0x01, 0x72, 0x1a, 0x10,
	0x01, 0x18, 0x3c, 0x32, 0x14, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x30,
	0x2d, 0x39, 0x61, 0x2d, 0x7a, 0x2d, 0x5d, 0x2a, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x41, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x04, 0xba, 0x4a, 0x01, 0x06, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x04, 0xba, 0x4a, 0x01, 0x06, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0f, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x0c, 0x0a, 0x0a,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x01, 0x0a, 0x16, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x41, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x0f, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x15, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0x64, 0x0a, 0x18, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2e, 0x70, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x42,
	0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67, 0x6f, 0x73, 0x64,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_nebius_compute_v1_network_interface_proto_rawDescOnce sync.Once
	file_nebius_compute_v1_network_interface_proto_rawDescData = file_nebius_compute_v1_network_interface_proto_rawDesc
)

func file_nebius_compute_v1_network_interface_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1_network_interface_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1_network_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebius_compute_v1_network_interface_proto_rawDescData)
	})
	return file_nebius_compute_v1_network_interface_proto_rawDescData
}

var file_nebius_compute_v1_network_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nebius_compute_v1_network_interface_proto_goTypes = []any{
	(*NetworkInterfaceSpec)(nil),   // 0: nebius.compute.v1.NetworkInterfaceSpec
	(*IPAddress)(nil),              // 1: nebius.compute.v1.IPAddress
	(*PublicIPAddress)(nil),        // 2: nebius.compute.v1.PublicIPAddress
	(*NetworkInterfaceStatus)(nil), // 3: nebius.compute.v1.NetworkInterfaceStatus
	(*IPAddressStatus)(nil),        // 4: nebius.compute.v1.IPAddressStatus
	(*PublicIPAddressStatus)(nil),  // 5: nebius.compute.v1.PublicIPAddressStatus
}
var file_nebius_compute_v1_network_interface_proto_depIdxs = []int32{
	1, // 0: nebius.compute.v1.NetworkInterfaceSpec.ip_address:type_name -> nebius.compute.v1.IPAddress
	2, // 1: nebius.compute.v1.NetworkInterfaceSpec.public_ip_address:type_name -> nebius.compute.v1.PublicIPAddress
	4, // 2: nebius.compute.v1.NetworkInterfaceStatus.ip_address:type_name -> nebius.compute.v1.IPAddressStatus
	5, // 3: nebius.compute.v1.NetworkInterfaceStatus.public_ip_address:type_name -> nebius.compute.v1.PublicIPAddressStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1_network_interface_proto_init() }
func file_nebius_compute_v1_network_interface_proto_init() {
	if File_nebius_compute_v1_network_interface_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nebius_compute_v1_network_interface_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkInterfaceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebius_compute_v1_network_interface_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebius_compute_v1_network_interface_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PublicIPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebius_compute_v1_network_interface_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkInterfaceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebius_compute_v1_network_interface_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*IPAddressStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nebius_compute_v1_network_interface_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PublicIPAddressStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nebius_compute_v1_network_interface_proto_msgTypes[2].OneofWrappers = []any{
		(*PublicIPAddress_AllocationId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebius_compute_v1_network_interface_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_compute_v1_network_interface_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1_network_interface_proto_depIdxs,
		MessageInfos:      file_nebius_compute_v1_network_interface_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1_network_interface_proto = out.File
	file_nebius_compute_v1_network_interface_proto_rawDesc = nil
	file_nebius_compute_v1_network_interface_proto_goTypes = nil
	file_nebius_compute_v1_network_interface_proto_depIdxs = nil
}
