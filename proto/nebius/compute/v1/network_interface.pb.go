// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/compute/v1/network_interface.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the specification of a network interface.
type NetworkInterfaceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subnet ID
	SubnetId string `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Interface name
	// Value of this field configures the name of the network interface inside VM's OS.
	// Longer values will persist in the specification but will be truncated to 15 symbols before being passed to VM configuration.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Private IPv4 address associated with the interface.
	IpAddress *IPAddress `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Public IPv4 address associated with the interface.
	PublicIpAddress *PublicIPAddress `protobuf:"bytes,4,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
	// Assign ranges of IP addresses as aliases
	Aliases       []*IPAlias `protobuf:"bytes,6,rep,name=aliases,proto3" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceSpec) Reset() {
	*x = NetworkInterfaceSpec{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceSpec) ProtoMessage() {}

func (x *NetworkInterfaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceSpec.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceSpec) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInterfaceSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetIpAddress() *IPAddress {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetPublicIpAddress() *PublicIPAddress {
	if x != nil {
		return x.PublicIpAddress
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetAliases() []*IPAlias {
	if x != nil {
		return x.Aliases
	}
	return nil
}

// Describes an IPv4 address.
type IPAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Allocation identifier if it was created before.
	AllocationId  string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAddress) Reset() {
	*x = IPAddress{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddress) ProtoMessage() {}

func (x *IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddress.ProtoReflect.Descriptor instead.
func (*IPAddress) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{1}
}

func (x *IPAddress) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Describes a public IP address.
type PublicIPAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Describes different methods of public IP address allocation.
	//
	// Types that are valid to be assigned to Allocation:
	//
	//	*PublicIPAddress_AllocationId
	Allocation isPublicIPAddress_Allocation `protobuf_oneof:"allocation"`
	// If false - Allocation will be created/deleted during NetworkInterface.Allocate/NetworkInterface.Deallocate
	// If true  - Allocation will be created/deleted during NetworkInterface.Create/NetworkInterface.Delete
	// False by default
	Static        bool `protobuf:"varint,3,opt,name=static,proto3" json:"static,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicIPAddress) Reset() {
	*x = PublicIPAddress{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicIPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicIPAddress) ProtoMessage() {}

func (x *PublicIPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicIPAddress.ProtoReflect.Descriptor instead.
func (*PublicIPAddress) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{2}
}

func (x *PublicIPAddress) GetAllocation() isPublicIPAddress_Allocation {
	if x != nil {
		return x.Allocation
	}
	return nil
}

func (x *PublicIPAddress) GetAllocationId() string {
	if x != nil {
		if x, ok := x.Allocation.(*PublicIPAddress_AllocationId); ok {
			return x.AllocationId
		}
	}
	return ""
}

func (x *PublicIPAddress) GetStatic() bool {
	if x != nil {
		return x.Static
	}
	return false
}

type isPublicIPAddress_Allocation interface {
	isPublicIPAddress_Allocation()
}

type PublicIPAddress_AllocationId struct {
	// Allocation identifier if it was created before.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3,oneof"`
}

func (*PublicIPAddress_AllocationId) isPublicIPAddress_Allocation() {}

type IPAlias struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of allocation
	AllocationId  string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAlias) Reset() {
	*x = IPAlias{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAlias) ProtoMessage() {}

func (x *IPAlias) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAlias.ProtoReflect.Descriptor instead.
func (*IPAlias) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{3}
}

func (x *IPAlias) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Describes the status of a network interface.
type NetworkInterfaceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The index of the network interface
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// Name for interface.
	// Unique within instance's network interfaces
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Effective Private IPv4 address
	IpAddress *IPAddressStatus `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Effective Public IPv4 address
	PublicIpAddress *PublicIPAddressStatus `protobuf:"bytes,4,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
	// Effective IP Aliases
	Aliases *IPAliasesStatus `protobuf:"bytes,6,opt,name=aliases,proto3" json:"aliases,omitempty"`
	// MAC address
	MacAddress string `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// FQDN of the interface
	Fqdn          string `protobuf:"bytes,9,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceStatus) Reset() {
	*x = NetworkInterfaceStatus{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceStatus) ProtoMessage() {}

func (x *NetworkInterfaceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceStatus.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkInterfaceStatus) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NetworkInterfaceStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceStatus) GetIpAddress() *IPAddressStatus {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *NetworkInterfaceStatus) GetPublicIpAddress() *PublicIPAddressStatus {
	if x != nil {
		return x.PublicIpAddress
	}
	return nil
}

func (x *NetworkInterfaceStatus) GetAliases() *IPAliasesStatus {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *NetworkInterfaceStatus) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterfaceStatus) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

type IPAddressStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Effective private IPv4 address assigned to the interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Allocation identifier.
	AllocationId  string `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAddressStatus) Reset() {
	*x = IPAddressStatus{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAddressStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddressStatus) ProtoMessage() {}

func (x *IPAddressStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddressStatus.ProtoReflect.Descriptor instead.
func (*IPAddressStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{5}
}

func (x *IPAddressStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IPAddressStatus) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

type PublicIPAddressStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Effective public IPv4 address assigned to the interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Allocation identifier.
	AllocationId string `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	// If false - Allocation will be created/deleted during NetworkInterface.Allocate/NetworkInterface.Deallocate
	// If true  - Allocation will be created/deleted during NetworkInterface.Create/NetworkInterface.Delete
	// False by default
	Static        bool `protobuf:"varint,3,opt,name=static,proto3" json:"static,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicIPAddressStatus) Reset() {
	*x = PublicIPAddressStatus{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicIPAddressStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicIPAddressStatus) ProtoMessage() {}

func (x *PublicIPAddressStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicIPAddressStatus.ProtoReflect.Descriptor instead.
func (*PublicIPAddressStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{6}
}

func (x *PublicIPAddressStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PublicIPAddressStatus) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

func (x *PublicIPAddressStatus) GetStatic() bool {
	if x != nil {
		return x.Static
	}
	return false
}

type IPAliasesStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cidrs         []string               `protobuf:"bytes,2,rep,name=cidrs,proto3" json:"cidrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAliasesStatus) Reset() {
	*x = IPAliasesStatus{}
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAliasesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAliasesStatus) ProtoMessage() {}

func (x *IPAliasesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_compute_v1_network_interface_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAliasesStatus.ProtoReflect.Descriptor instead.
func (*IPAliasesStatus) Descriptor() ([]byte, []int) {
	return file_nebius_compute_v1_network_interface_proto_rawDescGZIP(), []int{7}
}

func (x *IPAliasesStatus) GetCidrs() []string {
	if x != nil {
		return x.Cidrs
	}
	return nil
}

var File_nebius_compute_v1_network_interface_proto protoreflect.FileDescriptor

const file_nebius_compute_v1_network_interface_proto_rawDesc = "" +
	"\n" +
	")nebius/compute/v1/network_interface.proto\x12\x11nebius.compute.v1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\"\xd1\x02\n" +
	"\x14NetworkInterfaceSpec\x12'\n" +
	"\tsubnet_id\x18\x01 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\bsubnetId\x12:\n" +
	"\x04name\x18\x02 \x01(\tB&\xbaH\x1f\xc8\x01\x01r\x1a\x10\x01\x18<2\x14^[0-9a-z][0-9a-z-]*$\xbaJ\x01\x02R\x04name\x12H\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\v2\x1c.nebius.compute.v1.IPAddressB\v\xbaH\x03\xc8\x01\x01\xbaJ\x02\x06\x02R\tipAddress\x12T\n" +
	"\x11public_ip_address\x18\x04 \x01(\v2\".nebius.compute.v1.PublicIPAddressB\x04\xbaJ\x01\x06R\x0fpublicIpAddress\x124\n" +
	"\aaliases\x18\x06 \x03(\v2\x1a.nebius.compute.v1.IPAliasR\aaliases\"0\n" +
	"\tIPAddress\x12#\n" +
	"\rallocation_id\x18\x01 \x01(\tR\fallocationId\"^\n" +
	"\x0fPublicIPAddress\x12%\n" +
	"\rallocation_id\x18\x01 \x01(\tH\x00R\fallocationId\x12\x16\n" +
	"\x06static\x18\x03 \x01(\bR\x06staticB\f\n" +
	"\n" +
	"allocation\"6\n" +
	"\aIPAlias\x12+\n" +
	"\rallocation_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\fallocationId\"\xce\x02\n" +
	"\x16NetworkInterfaceStatus\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12A\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\v2\".nebius.compute.v1.IPAddressStatusR\tipAddress\x12T\n" +
	"\x11public_ip_address\x18\x04 \x01(\v2(.nebius.compute.v1.PublicIPAddressStatusR\x0fpublicIpAddress\x12<\n" +
	"\aaliases\x18\x06 \x01(\v2\".nebius.compute.v1.IPAliasesStatusR\aaliases\x12\x1f\n" +
	"\vmac_address\x18\a \x01(\tR\n" +
	"macAddress\x12\x12\n" +
	"\x04fqdn\x18\t \x01(\tR\x04fqdn\"P\n" +
	"\x0fIPAddressStatus\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\"n\n" +
	"\x15PublicIPAddressStatus\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\x12\x16\n" +
	"\x06static\x18\x03 \x01(\bR\x06static\"'\n" +
	"\x0fIPAliasesStatus\x12\x14\n" +
	"\x05cidrs\x18\x02 \x03(\tR\x05cidrsBd\n" +
	"\x18ai.nebius.pub.compute.v1B\x15NetworkInterfaceProtoP\x01Z/github.com/nebius/gosdk/proto/nebius/compute/v1b\x06proto3"

var (
	file_nebius_compute_v1_network_interface_proto_rawDescOnce sync.Once
	file_nebius_compute_v1_network_interface_proto_rawDescData []byte
)

func file_nebius_compute_v1_network_interface_proto_rawDescGZIP() []byte {
	file_nebius_compute_v1_network_interface_proto_rawDescOnce.Do(func() {
		file_nebius_compute_v1_network_interface_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_network_interface_proto_rawDesc), len(file_nebius_compute_v1_network_interface_proto_rawDesc)))
	})
	return file_nebius_compute_v1_network_interface_proto_rawDescData
}

var file_nebius_compute_v1_network_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_nebius_compute_v1_network_interface_proto_goTypes = []any{
	(*NetworkInterfaceSpec)(nil),   // 0: nebius.compute.v1.NetworkInterfaceSpec
	(*IPAddress)(nil),              // 1: nebius.compute.v1.IPAddress
	(*PublicIPAddress)(nil),        // 2: nebius.compute.v1.PublicIPAddress
	(*IPAlias)(nil),                // 3: nebius.compute.v1.IPAlias
	(*NetworkInterfaceStatus)(nil), // 4: nebius.compute.v1.NetworkInterfaceStatus
	(*IPAddressStatus)(nil),        // 5: nebius.compute.v1.IPAddressStatus
	(*PublicIPAddressStatus)(nil),  // 6: nebius.compute.v1.PublicIPAddressStatus
	(*IPAliasesStatus)(nil),        // 7: nebius.compute.v1.IPAliasesStatus
}
var file_nebius_compute_v1_network_interface_proto_depIdxs = []int32{
	1, // 0: nebius.compute.v1.NetworkInterfaceSpec.ip_address:type_name -> nebius.compute.v1.IPAddress
	2, // 1: nebius.compute.v1.NetworkInterfaceSpec.public_ip_address:type_name -> nebius.compute.v1.PublicIPAddress
	3, // 2: nebius.compute.v1.NetworkInterfaceSpec.aliases:type_name -> nebius.compute.v1.IPAlias
	5, // 3: nebius.compute.v1.NetworkInterfaceStatus.ip_address:type_name -> nebius.compute.v1.IPAddressStatus
	6, // 4: nebius.compute.v1.NetworkInterfaceStatus.public_ip_address:type_name -> nebius.compute.v1.PublicIPAddressStatus
	7, // 5: nebius.compute.v1.NetworkInterfaceStatus.aliases:type_name -> nebius.compute.v1.IPAliasesStatus
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_nebius_compute_v1_network_interface_proto_init() }
func file_nebius_compute_v1_network_interface_proto_init() {
	if File_nebius_compute_v1_network_interface_proto != nil {
		return
	}
	file_nebius_compute_v1_network_interface_proto_msgTypes[2].OneofWrappers = []any{
		(*PublicIPAddress_AllocationId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_compute_v1_network_interface_proto_rawDesc), len(file_nebius_compute_v1_network_interface_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_compute_v1_network_interface_proto_goTypes,
		DependencyIndexes: file_nebius_compute_v1_network_interface_proto_depIdxs,
		MessageInfos:      file_nebius_compute_v1_network_interface_proto_msgTypes,
	}.Build()
	File_nebius_compute_v1_network_interface_proto = out.File
	file_nebius_compute_v1_network_interface_proto_goTypes = nil
	file_nebius_compute_v1_network_interface_proto_depIdxs = nil
}
