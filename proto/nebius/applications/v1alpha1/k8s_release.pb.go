// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/applications/v1alpha1/k8s_release.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type K8SReleaseStatus_State int32

const (
	K8SReleaseStatus_UNSPECIFIED K8SReleaseStatus_State = 0
	K8SReleaseStatus_CREATED     K8SReleaseStatus_State = 1
	K8SReleaseStatus_RUNNING     K8SReleaseStatus_State = 2
	K8SReleaseStatus_DEPLOYED    K8SReleaseStatus_State = 3
	K8SReleaseStatus_FAILED      K8SReleaseStatus_State = 4
	K8SReleaseStatus_INSTALLING  K8SReleaseStatus_State = 5
)

// Enum value maps for K8SReleaseStatus_State.
var (
	K8SReleaseStatus_State_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CREATED",
		2: "RUNNING",
		3: "DEPLOYED",
		4: "FAILED",
		5: "INSTALLING",
	}
	K8SReleaseStatus_State_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CREATED":     1,
		"RUNNING":     2,
		"DEPLOYED":    3,
		"FAILED":      4,
		"INSTALLING":  5,
	}
)

func (x K8SReleaseStatus_State) Enum() *K8SReleaseStatus_State {
	p := new(K8SReleaseStatus_State)
	*p = x
	return p
}

func (x K8SReleaseStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K8SReleaseStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_applications_v1alpha1_k8s_release_proto_enumTypes[0].Descriptor()
}

func (K8SReleaseStatus_State) Type() protoreflect.EnumType {
	return &file_nebius_applications_v1alpha1_k8s_release_proto_enumTypes[0]
}

func (x K8SReleaseStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K8SReleaseStatus_State.Descriptor instead.
func (K8SReleaseStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_proto_rawDescGZIP(), []int{2, 0}
}

type K8SRelease struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *K8SReleaseSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *K8SReleaseStatus      `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SRelease) Reset() {
	*x = K8SRelease{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SRelease) ProtoMessage() {}

func (x *K8SRelease) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SRelease.ProtoReflect.Descriptor instead.
func (*K8SRelease) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_proto_rawDescGZIP(), []int{0}
}

func (x *K8SRelease) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *K8SRelease) GetSpec() *K8SReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *K8SRelease) GetStatus() *K8SReleaseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type K8SReleaseSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClusterId       string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ProductSlug     string                 `protobuf:"bytes,2,opt,name=product_slug,json=productSlug,proto3" json:"product_slug,omitempty"`
	Namespace       string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ApplicationName string                 `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	Values          string                 `protobuf:"bytes,5,opt,name=values,proto3" json:"values,omitempty"`
	Set             map[string]string      `protobuf:"bytes,6,rep,name=set,proto3" json:"set,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *K8SReleaseSpec) Reset() {
	*x = K8SReleaseSpec{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SReleaseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SReleaseSpec) ProtoMessage() {}

func (x *K8SReleaseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SReleaseSpec.ProtoReflect.Descriptor instead.
func (*K8SReleaseSpec) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_proto_rawDescGZIP(), []int{1}
}

func (x *K8SReleaseSpec) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *K8SReleaseSpec) GetProductSlug() string {
	if x != nil {
		return x.ProductSlug
	}
	return ""
}

func (x *K8SReleaseSpec) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SReleaseSpec) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *K8SReleaseSpec) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *K8SReleaseSpec) GetSet() map[string]string {
	if x != nil {
		return x.Set
	}
	return nil
}

type K8SReleaseStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         K8SReleaseStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=nebius.applications.v1alpha1.K8SReleaseStatus_State" json:"state,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SReleaseStatus) Reset() {
	*x = K8SReleaseStatus{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SReleaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SReleaseStatus) ProtoMessage() {}

func (x *K8SReleaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SReleaseStatus.ProtoReflect.Descriptor instead.
func (*K8SReleaseStatus) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_proto_rawDescGZIP(), []int{2}
}

func (x *K8SReleaseStatus) GetState() K8SReleaseStatus_State {
	if x != nil {
		return x.State
	}
	return K8SReleaseStatus_UNSPECIFIED
}

func (x *K8SReleaseStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_nebius_applications_v1alpha1_k8s_release_proto protoreflect.FileDescriptor

const file_nebius_applications_v1alpha1_k8s_release_proto_rawDesc = "" +
	"\n" +
	".nebius/applications/v1alpha1/k8s_release.proto\x12\x1cnebius.applications.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\"\xf2\x01\n" +
	"\n" +
	"K8sRelease\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12H\n" +
	"\x04spec\x18\x02 \x01(\v2,.nebius.applications.v1alpha1.K8sReleaseSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12L\n" +
	"\x06status\x18\x03 \x01(\v2..nebius.applications.v1alpha1.K8sReleaseStatusB\x04\xbaJ\x01\x05R\x06status:\x04\xbaJ\x01\x02\"\xf6\x02\n" +
	"\x0eK8sReleaseSpec\x12)\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\tclusterId\x12-\n" +
	"\fproduct_slug\x18\x02 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\vproductSlug\x12(\n" +
	"\tnamespace\x18\x03 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\tnamespace\x125\n" +
	"\x10application_name\x18\x04 \x01(\tB\n" +
	"\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x0fapplicationName\x12\x1f\n" +
	"\x06values\x18\x05 \x01(\tB\a\xbaJ\x01\x04\xc0J\x01R\x06values\x12P\n" +
	"\x03set\x18\x06 \x03(\v25.nebius.applications.v1alpha1.K8sReleaseSpec.SetEntryB\a\xbaJ\x01\x04\xc0J\x01R\x03set\x1a6\n" +
	"\bSetEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x01\n" +
	"\x10K8sReleaseStatus\x12J\n" +
	"\x05state\x18\x01 \x01(\x0e24.nebius.applications.v1alpha1.K8sReleaseStatus.StateR\x05state\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\\\n" +
	"\x05State\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aCREATED\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\f\n" +
	"\bDEPLOYED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\x0e\n" +
	"\n" +
	"INSTALLING\x10\x05Bt\n" +
	"#ai.nebius.pub.applications.v1alpha1B\x0fK8SReleaseProtoP\x01Z:github.com/nebius/gosdk/proto/nebius/applications/v1alpha1b\x06proto3"

var (
	file_nebius_applications_v1alpha1_k8s_release_proto_rawDescOnce sync.Once
	file_nebius_applications_v1alpha1_k8s_release_proto_rawDescData []byte
)

func file_nebius_applications_v1alpha1_k8s_release_proto_rawDescGZIP() []byte {
	file_nebius_applications_v1alpha1_k8s_release_proto_rawDescOnce.Do(func() {
		file_nebius_applications_v1alpha1_k8s_release_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_applications_v1alpha1_k8s_release_proto_rawDesc), len(file_nebius_applications_v1alpha1_k8s_release_proto_rawDesc)))
	})
	return file_nebius_applications_v1alpha1_k8s_release_proto_rawDescData
}

var file_nebius_applications_v1alpha1_k8s_release_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_applications_v1alpha1_k8s_release_proto_goTypes = []any{
	(K8SReleaseStatus_State)(0), // 0: nebius.applications.v1alpha1.K8sReleaseStatus.State
	(*K8SRelease)(nil),          // 1: nebius.applications.v1alpha1.K8sRelease
	(*K8SReleaseSpec)(nil),      // 2: nebius.applications.v1alpha1.K8sReleaseSpec
	(*K8SReleaseStatus)(nil),    // 3: nebius.applications.v1alpha1.K8sReleaseStatus
	nil,                         // 4: nebius.applications.v1alpha1.K8sReleaseSpec.SetEntry
	(*v1.ResourceMetadata)(nil), // 5: nebius.common.v1.ResourceMetadata
}
var file_nebius_applications_v1alpha1_k8s_release_proto_depIdxs = []int32{
	5, // 0: nebius.applications.v1alpha1.K8sRelease.metadata:type_name -> nebius.common.v1.ResourceMetadata
	2, // 1: nebius.applications.v1alpha1.K8sRelease.spec:type_name -> nebius.applications.v1alpha1.K8sReleaseSpec
	3, // 2: nebius.applications.v1alpha1.K8sRelease.status:type_name -> nebius.applications.v1alpha1.K8sReleaseStatus
	4, // 3: nebius.applications.v1alpha1.K8sReleaseSpec.set:type_name -> nebius.applications.v1alpha1.K8sReleaseSpec.SetEntry
	0, // 4: nebius.applications.v1alpha1.K8sReleaseStatus.state:type_name -> nebius.applications.v1alpha1.K8sReleaseStatus.State
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_applications_v1alpha1_k8s_release_proto_init() }
func file_nebius_applications_v1alpha1_k8s_release_proto_init() {
	if File_nebius_applications_v1alpha1_k8s_release_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_applications_v1alpha1_k8s_release_proto_rawDesc), len(file_nebius_applications_v1alpha1_k8s_release_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_applications_v1alpha1_k8s_release_proto_goTypes,
		DependencyIndexes: file_nebius_applications_v1alpha1_k8s_release_proto_depIdxs,
		EnumInfos:         file_nebius_applications_v1alpha1_k8s_release_proto_enumTypes,
		MessageInfos:      file_nebius_applications_v1alpha1_k8s_release_proto_msgTypes,
	}.Build()
	File_nebius_applications_v1alpha1_k8s_release_proto = out.File
	file_nebius_applications_v1alpha1_k8s_release_proto_goTypes = nil
	file_nebius_applications_v1alpha1_k8s_release_proto_depIdxs = nil
}
