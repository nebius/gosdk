// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/applications/v1alpha1/k8s_release_service.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetK8SReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetK8SReleaseRequest) Reset() {
	*x = GetK8SReleaseRequest{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetK8SReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetK8SReleaseRequest) ProtoMessage() {}

func (x *GetK8SReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetK8SReleaseRequest.ProtoReflect.Descriptor instead.
func (*GetK8SReleaseRequest) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetK8SReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListK8SReleasesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      string                 `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter        string                 `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	ClusterId     string                 `protobuf:"bytes,5,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListK8SReleasesRequest) Reset() {
	*x = ListK8SReleasesRequest{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListK8SReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListK8SReleasesRequest) ProtoMessage() {}

func (x *ListK8SReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListK8SReleasesRequest.ProtoReflect.Descriptor instead.
func (*ListK8SReleasesRequest) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListK8SReleasesRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListK8SReleasesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListK8SReleasesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListK8SReleasesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListK8SReleasesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type CreateK8SReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *K8SReleaseSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateK8SReleaseRequest) Reset() {
	*x = CreateK8SReleaseRequest{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateK8SReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateK8SReleaseRequest) ProtoMessage() {}

func (x *CreateK8SReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateK8SReleaseRequest.ProtoReflect.Descriptor instead.
func (*CreateK8SReleaseRequest) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateK8SReleaseRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateK8SReleaseRequest) GetSpec() *K8SReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateK8SReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.ResourceMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *K8SReleaseSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateK8SReleaseRequest) Reset() {
	*x = UpdateK8SReleaseRequest{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateK8SReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateK8SReleaseRequest) ProtoMessage() {}

func (x *UpdateK8SReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateK8SReleaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateK8SReleaseRequest) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateK8SReleaseRequest) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateK8SReleaseRequest) GetSpec() *K8SReleaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteK8SReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteK8SReleaseRequest) Reset() {
	*x = DeleteK8SReleaseRequest{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteK8SReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteK8SReleaseRequest) ProtoMessage() {}

func (x *DeleteK8SReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteK8SReleaseRequest.ProtoReflect.Descriptor instead.
func (*DeleteK8SReleaseRequest) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteK8SReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListK8SReleasesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*K8SRelease          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListK8SReleasesResponse) Reset() {
	*x = ListK8SReleasesResponse{}
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListK8SReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListK8SReleasesResponse) ProtoMessage() {}

func (x *ListK8SReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListK8SReleasesResponse.ProtoReflect.Descriptor instead.
func (*ListK8SReleasesResponse) Descriptor() ([]byte, []int) {
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListK8SReleasesResponse) GetItems() []*K8SRelease {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListK8SReleasesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_nebius_applications_v1alpha1_k8s_release_service_proto protoreflect.FileDescriptor

const file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDesc = "" +
	"\n" +
	"6nebius/applications/v1alpha1/k8s_release_service.proto\x12\x1cnebius.applications.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a.nebius/applications/v1alpha1/k8s_release.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a nebius/common/v1/operation.proto\".\n" +
	"\x14GetK8sReleaseRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\"\xb8\x01\n" +
	"\x16ListK8sReleasesRequest\x12#\n" +
	"\tparent_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bparentId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\x12%\n" +
	"\n" +
	"cluster_id\x18\x05 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\tclusterId\"\x9b\x01\n" +
	"\x17CreateK8sReleaseRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataR\bmetadata\x12@\n" +
	"\x04spec\x18\x02 \x01(\v2,.nebius.applications.v1alpha1.K8sReleaseSpecR\x04spec\"\x9b\x01\n" +
	"\x17UpdateK8sReleaseRequest\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".nebius.common.v1.ResourceMetadataR\bmetadata\x12@\n" +
	"\x04spec\x18\x02 \x01(\v2,.nebius.applications.v1alpha1.K8sReleaseSpecR\x04spec\"1\n" +
	"\x17DeleteK8sReleaseRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\"\x81\x01\n" +
	"\x17ListK8sReleasesResponse\x12>\n" +
	"\x05items\x18\x01 \x03(\v2(.nebius.applications.v1alpha1.K8sReleaseR\x05items\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xa2\x04\n" +
	"\x11K8sReleaseService\x12c\n" +
	"\x03Get\x122.nebius.applications.v1alpha1.GetK8sReleaseRequest\x1a(.nebius.applications.v1alpha1.K8sRelease\x12s\n" +
	"\x04List\x124.nebius.applications.v1alpha1.ListK8sReleasesRequest\x1a5.nebius.applications.v1alpha1.ListK8sReleasesResponse\x12\\\n" +
	"\x06Create\x125.nebius.applications.v1alpha1.CreateK8sReleaseRequest\x1a\x1b.nebius.common.v1.Operation\x12\\\n" +
	"\x06Update\x125.nebius.applications.v1alpha1.UpdateK8sReleaseRequest\x1a\x1b.nebius.common.v1.Operation\x12\\\n" +
	"\x06Delete\x125.nebius.applications.v1alpha1.DeleteK8sReleaseRequest\x1a\x1b.nebius.common.v1.Operation\x1a\x19\xbaJ\x16deployment-manager.mktB{\n" +
	"#ai.nebius.pub.applications.v1alpha1B\x16K8SReleaseServiceProtoP\x01Z:github.com/nebius/gosdk/proto/nebius/applications/v1alpha1b\x06proto3"

var (
	file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescOnce sync.Once
	file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescData []byte
)

func file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescGZIP() []byte {
	file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescOnce.Do(func() {
		file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDesc), len(file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDesc)))
	})
	return file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDescData
}

var file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nebius_applications_v1alpha1_k8s_release_service_proto_goTypes = []any{
	(*GetK8SReleaseRequest)(nil),    // 0: nebius.applications.v1alpha1.GetK8sReleaseRequest
	(*ListK8SReleasesRequest)(nil),  // 1: nebius.applications.v1alpha1.ListK8sReleasesRequest
	(*CreateK8SReleaseRequest)(nil), // 2: nebius.applications.v1alpha1.CreateK8sReleaseRequest
	(*UpdateK8SReleaseRequest)(nil), // 3: nebius.applications.v1alpha1.UpdateK8sReleaseRequest
	(*DeleteK8SReleaseRequest)(nil), // 4: nebius.applications.v1alpha1.DeleteK8sReleaseRequest
	(*ListK8SReleasesResponse)(nil), // 5: nebius.applications.v1alpha1.ListK8sReleasesResponse
	(*v1.ResourceMetadata)(nil),     // 6: nebius.common.v1.ResourceMetadata
	(*K8SReleaseSpec)(nil),          // 7: nebius.applications.v1alpha1.K8sReleaseSpec
	(*K8SRelease)(nil),              // 8: nebius.applications.v1alpha1.K8sRelease
	(*v1.Operation)(nil),            // 9: nebius.common.v1.Operation
}
var file_nebius_applications_v1alpha1_k8s_release_service_proto_depIdxs = []int32{
	6,  // 0: nebius.applications.v1alpha1.CreateK8sReleaseRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	7,  // 1: nebius.applications.v1alpha1.CreateK8sReleaseRequest.spec:type_name -> nebius.applications.v1alpha1.K8sReleaseSpec
	6,  // 2: nebius.applications.v1alpha1.UpdateK8sReleaseRequest.metadata:type_name -> nebius.common.v1.ResourceMetadata
	7,  // 3: nebius.applications.v1alpha1.UpdateK8sReleaseRequest.spec:type_name -> nebius.applications.v1alpha1.K8sReleaseSpec
	8,  // 4: nebius.applications.v1alpha1.ListK8sReleasesResponse.items:type_name -> nebius.applications.v1alpha1.K8sRelease
	0,  // 5: nebius.applications.v1alpha1.K8sReleaseService.Get:input_type -> nebius.applications.v1alpha1.GetK8sReleaseRequest
	1,  // 6: nebius.applications.v1alpha1.K8sReleaseService.List:input_type -> nebius.applications.v1alpha1.ListK8sReleasesRequest
	2,  // 7: nebius.applications.v1alpha1.K8sReleaseService.Create:input_type -> nebius.applications.v1alpha1.CreateK8sReleaseRequest
	3,  // 8: nebius.applications.v1alpha1.K8sReleaseService.Update:input_type -> nebius.applications.v1alpha1.UpdateK8sReleaseRequest
	4,  // 9: nebius.applications.v1alpha1.K8sReleaseService.Delete:input_type -> nebius.applications.v1alpha1.DeleteK8sReleaseRequest
	8,  // 10: nebius.applications.v1alpha1.K8sReleaseService.Get:output_type -> nebius.applications.v1alpha1.K8sRelease
	5,  // 11: nebius.applications.v1alpha1.K8sReleaseService.List:output_type -> nebius.applications.v1alpha1.ListK8sReleasesResponse
	9,  // 12: nebius.applications.v1alpha1.K8sReleaseService.Create:output_type -> nebius.common.v1.Operation
	9,  // 13: nebius.applications.v1alpha1.K8sReleaseService.Update:output_type -> nebius.common.v1.Operation
	9,  // 14: nebius.applications.v1alpha1.K8sReleaseService.Delete:output_type -> nebius.common.v1.Operation
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_applications_v1alpha1_k8s_release_service_proto_init() }
func file_nebius_applications_v1alpha1_k8s_release_service_proto_init() {
	if File_nebius_applications_v1alpha1_k8s_release_service_proto != nil {
		return
	}
	file_nebius_applications_v1alpha1_k8s_release_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDesc), len(file_nebius_applications_v1alpha1_k8s_release_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_applications_v1alpha1_k8s_release_service_proto_goTypes,
		DependencyIndexes: file_nebius_applications_v1alpha1_k8s_release_service_proto_depIdxs,
		MessageInfos:      file_nebius_applications_v1alpha1_k8s_release_service_proto_msgTypes,
	}.Build()
	File_nebius_applications_v1alpha1_k8s_release_service_proto = out.File
	file_nebius_applications_v1alpha1_k8s_release_service_proto_goTypes = nil
	file_nebius_applications_v1alpha1_k8s_release_service_proto_depIdxs = nil
}
