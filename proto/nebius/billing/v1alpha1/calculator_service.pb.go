// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/billing/v1alpha1/calculator_service.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nebius/gosdk/proto/nebius"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EstimateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource specification for cost estimation.
	// Must contain exactly one resource type.
	ResourceSpec *ResourceSpec `protobuf:"bytes,1,opt,name=resource_spec,json=resourceSpec,proto3" json:"resource_spec,omitempty"`
	// Type of offers to be applied to the cost estimate.
	OfferTypes    []OfferType `protobuf:"varint,10,rep,packed,name=offer_types,json=offerTypes,proto3,enum=nebius.billing.v1alpha1.OfferType" json:"offer_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateRequest) Reset() {
	*x = EstimateRequest{}
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest) ProtoMessage() {}

func (x *EstimateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest.ProtoReflect.Descriptor instead.
func (*EstimateRequest) Descriptor() ([]byte, []int) {
	return file_nebius_billing_v1alpha1_calculator_service_proto_rawDescGZIP(), []int{0}
}

func (x *EstimateRequest) GetResourceSpec() *ResourceSpec {
	if x != nil {
		return x.ResourceSpec
	}
	return nil
}

func (x *EstimateRequest) GetOfferTypes() []OfferType {
	if x != nil {
		return x.OfferTypes
	}
	return nil
}

type EstimateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Estimated hourly cost for the resource.
	HourlyCost *ResourceGroupCost `protobuf:"bytes,10,opt,name=hourly_cost,json=hourlyCost,proto3" json:"hourly_cost,omitempty"`
	// Estimated monthly cost for the resource.
	// Calculated as hourly_cost * 24 * 30 (720 hours) for resources running continuously.
	MonthlyCost   *ResourceGroupCost `protobuf:"bytes,20,opt,name=monthly_cost,json=monthlyCost,proto3" json:"monthly_cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateResponse) Reset() {
	*x = EstimateResponse{}
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateResponse) ProtoMessage() {}

func (x *EstimateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateResponse.ProtoReflect.Descriptor instead.
func (*EstimateResponse) Descriptor() ([]byte, []int) {
	return file_nebius_billing_v1alpha1_calculator_service_proto_rawDescGZIP(), []int{1}
}

func (x *EstimateResponse) GetHourlyCost() *ResourceGroupCost {
	if x != nil {
		return x.HourlyCost
	}
	return nil
}

func (x *EstimateResponse) GetMonthlyCost() *ResourceGroupCost {
	if x != nil {
		return x.MonthlyCost
	}
	return nil
}

type EstimateBatchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of resource specifications for cost estimation.
	// Each resource will be priced individually and then aggregated into total costs.
	ResourceSpecs []*ResourceSpec `protobuf:"bytes,1,rep,name=resource_specs,json=resourceSpecs,proto3" json:"resource_specs,omitempty"`
	// Type of offers to be applied to the cost estimate.
	OfferTypes    []OfferType `protobuf:"varint,10,rep,packed,name=offer_types,json=offerTypes,proto3,enum=nebius.billing.v1alpha1.OfferType" json:"offer_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateBatchRequest) Reset() {
	*x = EstimateBatchRequest{}
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateBatchRequest) ProtoMessage() {}

func (x *EstimateBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateBatchRequest.ProtoReflect.Descriptor instead.
func (*EstimateBatchRequest) Descriptor() ([]byte, []int) {
	return file_nebius_billing_v1alpha1_calculator_service_proto_rawDescGZIP(), []int{2}
}

func (x *EstimateBatchRequest) GetResourceSpecs() []*ResourceSpec {
	if x != nil {
		return x.ResourceSpecs
	}
	return nil
}

func (x *EstimateBatchRequest) GetOfferTypes() []OfferType {
	if x != nil {
		return x.OfferTypes
	}
	return nil
}

type EstimateBatchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Estimated hourly cost for all resources in the batch.
	HourlyCost *ResourceGroupCost `protobuf:"bytes,10,opt,name=hourly_cost,json=hourlyCost,proto3" json:"hourly_cost,omitempty"`
	// Estimated monthly cost for all resources in the batch.
	// Calculated as hourly_cost * 24 * 30 (720 hours) for resources running continuously.
	MonthlyCost   *ResourceGroupCost `protobuf:"bytes,20,opt,name=monthly_cost,json=monthlyCost,proto3" json:"monthly_cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateBatchResponse) Reset() {
	*x = EstimateBatchResponse{}
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateBatchResponse) ProtoMessage() {}

func (x *EstimateBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateBatchResponse.ProtoReflect.Descriptor instead.
func (*EstimateBatchResponse) Descriptor() ([]byte, []int) {
	return file_nebius_billing_v1alpha1_calculator_service_proto_rawDescGZIP(), []int{3}
}

func (x *EstimateBatchResponse) GetHourlyCost() *ResourceGroupCost {
	if x != nil {
		return x.HourlyCost
	}
	return nil
}

func (x *EstimateBatchResponse) GetMonthlyCost() *ResourceGroupCost {
	if x != nil {
		return x.MonthlyCost
	}
	return nil
}

var File_nebius_billing_v1alpha1_calculator_service_proto protoreflect.FileDescriptor

const file_nebius_billing_v1alpha1_calculator_service_proto_rawDesc = "" +
	"\n" +
	"0nebius/billing/v1alpha1/calculator_service.proto\x12\x17nebius.billing.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x18nebius/annotations.proto\x1a(nebius/billing/v1alpha1/calculator.proto\x1a(nebius/billing/v1alpha1/offer_type.proto\"\xaa\x01\n" +
	"\x0fEstimateRequest\x12R\n" +
	"\rresource_spec\x18\x01 \x01(\v2%.nebius.billing.v1alpha1.ResourceSpecB\x06\xbaH\x03\xc8\x01\x01R\fresourceSpec\x12C\n" +
	"\voffer_types\x18\n" +
	" \x03(\x0e2\".nebius.billing.v1alpha1.OfferTypeR\n" +
	"offerTypes\"\xae\x01\n" +
	"\x10EstimateResponse\x12K\n" +
	"\vhourly_cost\x18\n" +
	" \x01(\v2*.nebius.billing.v1alpha1.ResourceGroupCostR\n" +
	"hourlyCost\x12M\n" +
	"\fmonthly_cost\x18\x14 \x01(\v2*.nebius.billing.v1alpha1.ResourceGroupCostR\vmonthlyCost\"\xb1\x01\n" +
	"\x14EstimateBatchRequest\x12T\n" +
	"\x0eresource_specs\x18\x01 \x03(\v2%.nebius.billing.v1alpha1.ResourceSpecB\x06\xbaH\x03\xc8\x01\x01R\rresourceSpecs\x12C\n" +
	"\voffer_types\x18\n" +
	" \x03(\x0e2\".nebius.billing.v1alpha1.OfferTypeR\n" +
	"offerTypes\"\xb3\x01\n" +
	"\x15EstimateBatchResponse\x12K\n" +
	"\vhourly_cost\x18\n" +
	" \x01(\v2*.nebius.billing.v1alpha1.ResourceGroupCostR\n" +
	"hourlyCost\x12M\n" +
	"\fmonthly_cost\x18\x14 \x01(\v2*.nebius.billing.v1alpha1.ResourceGroupCostR\vmonthlyCost2\x8a\x02\n" +
	"\x11CalculatorService\x12_\n" +
	"\bEstimate\x12(.nebius.billing.v1alpha1.EstimateRequest\x1a).nebius.billing.v1alpha1.EstimateResponse\x12n\n" +
	"\rEstimateBatch\x12-.nebius.billing.v1alpha1.EstimateBatchRequest\x1a..nebius.billing.v1alpha1.EstimateBatchResponse\x1a$\xbaJ!api.calculator.billing-data-planeBq\n" +
	"\x1eai.nebius.pub.billing.v1alpha1B\x16CalculatorServiceProtoP\x01Z5github.com/nebius/gosdk/proto/nebius/billing/v1alpha1b\x06proto3"

var (
	file_nebius_billing_v1alpha1_calculator_service_proto_rawDescOnce sync.Once
	file_nebius_billing_v1alpha1_calculator_service_proto_rawDescData []byte
)

func file_nebius_billing_v1alpha1_calculator_service_proto_rawDescGZIP() []byte {
	file_nebius_billing_v1alpha1_calculator_service_proto_rawDescOnce.Do(func() {
		file_nebius_billing_v1alpha1_calculator_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_billing_v1alpha1_calculator_service_proto_rawDesc), len(file_nebius_billing_v1alpha1_calculator_service_proto_rawDesc)))
	})
	return file_nebius_billing_v1alpha1_calculator_service_proto_rawDescData
}

var file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_billing_v1alpha1_calculator_service_proto_goTypes = []any{
	(*EstimateRequest)(nil),       // 0: nebius.billing.v1alpha1.EstimateRequest
	(*EstimateResponse)(nil),      // 1: nebius.billing.v1alpha1.EstimateResponse
	(*EstimateBatchRequest)(nil),  // 2: nebius.billing.v1alpha1.EstimateBatchRequest
	(*EstimateBatchResponse)(nil), // 3: nebius.billing.v1alpha1.EstimateBatchResponse
	(*ResourceSpec)(nil),          // 4: nebius.billing.v1alpha1.ResourceSpec
	(OfferType)(0),                // 5: nebius.billing.v1alpha1.OfferType
	(*ResourceGroupCost)(nil),     // 6: nebius.billing.v1alpha1.ResourceGroupCost
}
var file_nebius_billing_v1alpha1_calculator_service_proto_depIdxs = []int32{
	4,  // 0: nebius.billing.v1alpha1.EstimateRequest.resource_spec:type_name -> nebius.billing.v1alpha1.ResourceSpec
	5,  // 1: nebius.billing.v1alpha1.EstimateRequest.offer_types:type_name -> nebius.billing.v1alpha1.OfferType
	6,  // 2: nebius.billing.v1alpha1.EstimateResponse.hourly_cost:type_name -> nebius.billing.v1alpha1.ResourceGroupCost
	6,  // 3: nebius.billing.v1alpha1.EstimateResponse.monthly_cost:type_name -> nebius.billing.v1alpha1.ResourceGroupCost
	4,  // 4: nebius.billing.v1alpha1.EstimateBatchRequest.resource_specs:type_name -> nebius.billing.v1alpha1.ResourceSpec
	5,  // 5: nebius.billing.v1alpha1.EstimateBatchRequest.offer_types:type_name -> nebius.billing.v1alpha1.OfferType
	6,  // 6: nebius.billing.v1alpha1.EstimateBatchResponse.hourly_cost:type_name -> nebius.billing.v1alpha1.ResourceGroupCost
	6,  // 7: nebius.billing.v1alpha1.EstimateBatchResponse.monthly_cost:type_name -> nebius.billing.v1alpha1.ResourceGroupCost
	0,  // 8: nebius.billing.v1alpha1.CalculatorService.Estimate:input_type -> nebius.billing.v1alpha1.EstimateRequest
	2,  // 9: nebius.billing.v1alpha1.CalculatorService.EstimateBatch:input_type -> nebius.billing.v1alpha1.EstimateBatchRequest
	1,  // 10: nebius.billing.v1alpha1.CalculatorService.Estimate:output_type -> nebius.billing.v1alpha1.EstimateResponse
	3,  // 11: nebius.billing.v1alpha1.CalculatorService.EstimateBatch:output_type -> nebius.billing.v1alpha1.EstimateBatchResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_nebius_billing_v1alpha1_calculator_service_proto_init() }
func file_nebius_billing_v1alpha1_calculator_service_proto_init() {
	if File_nebius_billing_v1alpha1_calculator_service_proto != nil {
		return
	}
	file_nebius_billing_v1alpha1_calculator_proto_init()
	file_nebius_billing_v1alpha1_offer_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_billing_v1alpha1_calculator_service_proto_rawDesc), len(file_nebius_billing_v1alpha1_calculator_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nebius_billing_v1alpha1_calculator_service_proto_goTypes,
		DependencyIndexes: file_nebius_billing_v1alpha1_calculator_service_proto_depIdxs,
		MessageInfos:      file_nebius_billing_v1alpha1_calculator_service_proto_msgTypes,
	}.Build()
	File_nebius_billing_v1alpha1_calculator_service_proto = out.File
	file_nebius_billing_v1alpha1_calculator_service_proto_goTypes = nil
	file_nebius_billing_v1alpha1_calculator_service_proto_depIdxs = nil
}
