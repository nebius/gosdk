// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: nebius/maintenance/v1alpha1/maintenance.proto

package v1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/nebius/gosdk/proto/nebius/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_STATE_UNSPECIFIED State = 0
	// Maintenance operation is scheduled to be run in the future.
	State_STATE_SCHEDULED State = 1
	// Maintenance operation is currently in progress.
	State_STATE_IN_PROGRESS State = 2
	// Maintenance operation has been successfully completed.
	State_STATE_FINISHED State = 3
	// Maintenance operation has encountered an error and could not be completed.
	State_STATE_ERROR State = 4
	// Maintenance operation has been cancelled by the system.
	State_STATE_CANCELLED State = 5
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_SCHEDULED",
		2: "STATE_IN_PROGRESS",
		3: "STATE_FINISHED",
		4: "STATE_ERROR",
		5: "STATE_CANCELLED",
	}
	State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_SCHEDULED":   1,
		"STATE_IN_PROGRESS": 2,
		"STATE_FINISHED":    3,
		"STATE_ERROR":       4,
		"STATE_CANCELLED":   5,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_nebius_maintenance_v1alpha1_maintenance_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP(), []int{0}
}

// Maintenance operations are initiated by Nebius Cloud infrastructure.
// They are used to perform scheduled or urgent operations on Nebius Cloud resources,
// such as Managed Services or Standalone Applications, that are necessary for
// maintaining the service in an operable state. These operations run automatically,
// without user intervention.
type Maintenance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata for the maintenance operation resource.
	Metadata *v1.ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Specifications for the maintenance operation.
	Spec *MaintenanceSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Current status of the maintenance operation.
	Status        *MaintenanceStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Maintenance) Reset() {
	*x = Maintenance{}
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Maintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maintenance) ProtoMessage() {}

func (x *Maintenance) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maintenance.ProtoReflect.Descriptor instead.
func (*Maintenance) Descriptor() ([]byte, []int) {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP(), []int{0}
}

func (x *Maintenance) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Maintenance) GetSpec() *MaintenanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Maintenance) GetStatus() *MaintenanceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MaintenanceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp indicating when the maintenance operation is scheduled to run.
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaintenanceSpec) Reset() {
	*x = MaintenanceSpec{}
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceSpec) ProtoMessage() {}

func (x *MaintenanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceSpec.ProtoReflect.Descriptor instead.
func (*MaintenanceSpec) Descriptor() ([]byte, []int) {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP(), []int{1}
}

func (x *MaintenanceSpec) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

type MaintenanceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of resources that are affected by this maintenance operation.
	AffectedResources []*Resource `protobuf:"bytes,1,rep,name=affected_resources,json=affectedResources,proto3" json:"affected_resources,omitempty"`
	// Timestamp indicating when the maintenance operation started.
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Timestamp indicating when the maintenance operation finished.
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Current state of the maintenance operation.
	State         State `protobuf:"varint,4,opt,name=state,proto3,enum=nebius.maintenance.v1alpha1.State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaintenanceStatus) Reset() {
	*x = MaintenanceStatus{}
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceStatus) ProtoMessage() {}

func (x *MaintenanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceStatus.ProtoReflect.Descriptor instead.
func (*MaintenanceStatus) Descriptor() ([]byte, []int) {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP(), []int{2}
}

func (x *MaintenanceStatus) GetAffectedResources() []*Resource {
	if x != nil {
		return x.AffectedResources
	}
	return nil
}

func (x *MaintenanceStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *MaintenanceStatus) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *MaintenanceStatus) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the resource.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// IAM container of the resource.
	ParentId      string `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

var File_nebius_maintenance_v1alpha1_maintenance_proto protoreflect.FileDescriptor

var file_nebius_maintenance_v1alpha1_maintenance_proto_rawDesc = string([]byte{
	0x0a, 0x2d, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x0b,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xa3, 0x02, 0x0a, 0x11, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x2a, 0x84,
	0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x42, 0x73, 0x0a, 0x22, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62, 0x69,
	0x75, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x10, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69,
	0x75, 0x73, 0x2f, 0x67, 0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e,
	0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescOnce sync.Once
	file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescData []byte
)

func file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescGZIP() []byte {
	file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescOnce.Do(func() {
		file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_maintenance_v1alpha1_maintenance_proto_rawDesc), len(file_nebius_maintenance_v1alpha1_maintenance_proto_rawDesc)))
	})
	return file_nebius_maintenance_v1alpha1_maintenance_proto_rawDescData
}

var file_nebius_maintenance_v1alpha1_maintenance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nebius_maintenance_v1alpha1_maintenance_proto_goTypes = []any{
	(State)(0),                    // 0: nebius.maintenance.v1alpha1.State
	(*Maintenance)(nil),           // 1: nebius.maintenance.v1alpha1.Maintenance
	(*MaintenanceSpec)(nil),       // 2: nebius.maintenance.v1alpha1.MaintenanceSpec
	(*MaintenanceStatus)(nil),     // 3: nebius.maintenance.v1alpha1.MaintenanceStatus
	(*Resource)(nil),              // 4: nebius.maintenance.v1alpha1.Resource
	(*v1.ResourceMetadata)(nil),   // 5: nebius.common.v1.ResourceMetadata
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_nebius_maintenance_v1alpha1_maintenance_proto_depIdxs = []int32{
	5, // 0: nebius.maintenance.v1alpha1.Maintenance.metadata:type_name -> nebius.common.v1.ResourceMetadata
	2, // 1: nebius.maintenance.v1alpha1.Maintenance.spec:type_name -> nebius.maintenance.v1alpha1.MaintenanceSpec
	3, // 2: nebius.maintenance.v1alpha1.Maintenance.status:type_name -> nebius.maintenance.v1alpha1.MaintenanceStatus
	6, // 3: nebius.maintenance.v1alpha1.MaintenanceSpec.scheduled_at:type_name -> google.protobuf.Timestamp
	4, // 4: nebius.maintenance.v1alpha1.MaintenanceStatus.affected_resources:type_name -> nebius.maintenance.v1alpha1.Resource
	6, // 5: nebius.maintenance.v1alpha1.MaintenanceStatus.started_at:type_name -> google.protobuf.Timestamp
	6, // 6: nebius.maintenance.v1alpha1.MaintenanceStatus.finished_at:type_name -> google.protobuf.Timestamp
	0, // 7: nebius.maintenance.v1alpha1.MaintenanceStatus.state:type_name -> nebius.maintenance.v1alpha1.State
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_nebius_maintenance_v1alpha1_maintenance_proto_init() }
func file_nebius_maintenance_v1alpha1_maintenance_proto_init() {
	if File_nebius_maintenance_v1alpha1_maintenance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_maintenance_v1alpha1_maintenance_proto_rawDesc), len(file_nebius_maintenance_v1alpha1_maintenance_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_maintenance_v1alpha1_maintenance_proto_goTypes,
		DependencyIndexes: file_nebius_maintenance_v1alpha1_maintenance_proto_depIdxs,
		EnumInfos:         file_nebius_maintenance_v1alpha1_maintenance_proto_enumTypes,
		MessageInfos:      file_nebius_maintenance_v1alpha1_maintenance_proto_msgTypes,
	}.Build()
	File_nebius_maintenance_v1alpha1_maintenance_proto = out.File
	file_nebius_maintenance_v1alpha1_maintenance_proto_goTypes = nil
	file_nebius_maintenance_v1alpha1_maintenance_proto_depIdxs = nil
}
