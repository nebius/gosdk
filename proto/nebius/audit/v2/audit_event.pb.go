// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: nebius/audit/v2/audit_event.proto

package v2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Identifies the context in which an event happened. Presented in the form of URI.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Version of CloudEvents spec. See https://github.com/cloudevents/spec/blob/main/cloudevents/spec.md#specversion
	SpecVersion string `protobuf:"bytes,3,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// The type of event related to the originating occurrence. Formed according to template: "ai.nebius.<serviceName>.<resourceType>.<action>"
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Indicates the service that generated the event.
	Service *Service `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	// Indicates an action taken on the resource.
	Action string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	// Timestamp of when the occurrence happened.
	Time *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	// Audit event version, in "X.Y" format, events within different Y's are backwards compatible, events with different X's are not.
	EventVersion string `protobuf:"bytes,8,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`
	// Represents the subject of an API call.
	Authentication *Authentication `protobuf:"bytes,9,opt,name=authentication,proto3" json:"authentication,omitempty"`
	// Represents permissions that have been verified for the subject as part of the API call.
	Authorization *Authorization `protobuf:"bytes,10,opt,name=authorization,proto3" json:"authorization,omitempty"`
	// A resource that was read or modified as part of the operation. Can be empty if no resource accessed or changed.
	Resource *Resource `protobuf:"bytes,11,opt,name=resource,proto3" json:"resource,omitempty"`
	// Contains information about the request from the customer.
	Request *Request `protobuf:"bytes,12,opt,name=request,proto3" json:"request,omitempty"`
	// Contains information about the response from the server.
	Response *Response `protobuf:"bytes,13,opt,name=response,proto3" json:"response,omitempty"`
	// The async operation status
	Status Status `protobuf:"varint,16,opt,name=status,proto3,enum=nebius.audit.v2.Status" json:"status,omitempty"`
	// Region of an application
	ProjectRegion *Region `protobuf:"bytes,17,opt,name=project_region,json=projectRegion,proto3" json:"project_region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEvent) Reset() {
	*x = AuditEvent{}
	mi := &file_nebius_audit_v2_audit_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent) ProtoMessage() {}

func (x *AuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_audit_v2_audit_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent.ProtoReflect.Descriptor instead.
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return file_nebius_audit_v2_audit_event_proto_rawDescGZIP(), []int{0}
}

func (x *AuditEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditEvent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AuditEvent) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *AuditEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuditEvent) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *AuditEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AuditEvent) GetEventVersion() string {
	if x != nil {
		return x.EventVersion
	}
	return ""
}

func (x *AuditEvent) GetAuthentication() *Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *AuditEvent) GetAuthorization() *Authorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *AuditEvent) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AuditEvent) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AuditEvent) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AuditEvent) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_RESPONSE_STATUS_UNSPECIFIED
}

func (x *AuditEvent) GetProjectRegion() *Region {
	if x != nil {
		return x.ProjectRegion
	}
	return nil
}

var File_nebius_audit_v2_audit_event_proto protoreflect.FileDescriptor

const file_nebius_audit_v2_audit_event_proto_rawDesc = "" +
	"\n" +
	"!nebius/audit/v2/audit_event.proto\x12\x0fnebius.audit.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$nebius/audit/v2/authentication.proto\x1a#nebius/audit/v2/authorization.proto\x1a\x1cnebius/audit/v2/region.proto\x1a\x1dnebius/audit/v2/request.proto\x1a\x1enebius/audit/v2/resource.proto\x1a\x1enebius/audit/v2/response.proto\x1a\x1dnebius/audit/v2/service.proto\x1a\x1cnebius/audit/v2/status.proto\"\xf6\x05\n" +
	"\n" +
	"AuditEvent\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1e\n" +
	"\x06source\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06source\x12)\n" +
	"\fspec_version\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\vspecVersion\x12\x1a\n" +
	"\x04type\x18\x04 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04type\x12:\n" +
	"\aservice\x18\x05 \x01(\v2\x18.nebius.audit.v2.ServiceB\x06\xbaH\x03\xc8\x01\x01R\aservice\x12\x1e\n" +
	"\x06action\x18\x06 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06action\x126\n" +
	"\x04time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\x04time\x12+\n" +
	"\revent_version\x18\b \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\feventVersion\x12G\n" +
	"\x0eauthentication\x18\t \x01(\v2\x1f.nebius.audit.v2.AuthenticationR\x0eauthentication\x12D\n" +
	"\rauthorization\x18\n" +
	" \x01(\v2\x1e.nebius.audit.v2.AuthorizationR\rauthorization\x125\n" +
	"\bresource\x18\v \x01(\v2\x19.nebius.audit.v2.ResourceR\bresource\x122\n" +
	"\arequest\x18\f \x01(\v2\x18.nebius.audit.v2.RequestR\arequest\x125\n" +
	"\bresponse\x18\r \x01(\v2\x19.nebius.audit.v2.ResponseR\bresponse\x127\n" +
	"\x06status\x18\x10 \x01(\x0e2\x17.nebius.audit.v2.StatusB\x06\xbaH\x03\xc8\x01\x01R\x06status\x12>\n" +
	"\x0eproject_region\x18\x11 \x01(\v2\x17.nebius.audit.v2.RegionR\rprojectRegionBZ\n" +
	"\x16ai.nebius.pub.audit.v2B\x0fAuditEventProtoP\x01Z-github.com/nebius/gosdk/proto/nebius/audit/v2b\x06proto3"

var (
	file_nebius_audit_v2_audit_event_proto_rawDescOnce sync.Once
	file_nebius_audit_v2_audit_event_proto_rawDescData []byte
)

func file_nebius_audit_v2_audit_event_proto_rawDescGZIP() []byte {
	file_nebius_audit_v2_audit_event_proto_rawDescOnce.Do(func() {
		file_nebius_audit_v2_audit_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_audit_v2_audit_event_proto_rawDesc), len(file_nebius_audit_v2_audit_event_proto_rawDesc)))
	})
	return file_nebius_audit_v2_audit_event_proto_rawDescData
}

var file_nebius_audit_v2_audit_event_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_nebius_audit_v2_audit_event_proto_goTypes = []any{
	(*AuditEvent)(nil),            // 0: nebius.audit.v2.AuditEvent
	(*Service)(nil),               // 1: nebius.audit.v2.Service
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*Authentication)(nil),        // 3: nebius.audit.v2.Authentication
	(*Authorization)(nil),         // 4: nebius.audit.v2.Authorization
	(*Resource)(nil),              // 5: nebius.audit.v2.Resource
	(*Request)(nil),               // 6: nebius.audit.v2.Request
	(*Response)(nil),              // 7: nebius.audit.v2.Response
	(Status)(0),                   // 8: nebius.audit.v2.Status
	(*Region)(nil),                // 9: nebius.audit.v2.Region
}
var file_nebius_audit_v2_audit_event_proto_depIdxs = []int32{
	1, // 0: nebius.audit.v2.AuditEvent.service:type_name -> nebius.audit.v2.Service
	2, // 1: nebius.audit.v2.AuditEvent.time:type_name -> google.protobuf.Timestamp
	3, // 2: nebius.audit.v2.AuditEvent.authentication:type_name -> nebius.audit.v2.Authentication
	4, // 3: nebius.audit.v2.AuditEvent.authorization:type_name -> nebius.audit.v2.Authorization
	5, // 4: nebius.audit.v2.AuditEvent.resource:type_name -> nebius.audit.v2.Resource
	6, // 5: nebius.audit.v2.AuditEvent.request:type_name -> nebius.audit.v2.Request
	7, // 6: nebius.audit.v2.AuditEvent.response:type_name -> nebius.audit.v2.Response
	8, // 7: nebius.audit.v2.AuditEvent.status:type_name -> nebius.audit.v2.Status
	9, // 8: nebius.audit.v2.AuditEvent.project_region:type_name -> nebius.audit.v2.Region
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_nebius_audit_v2_audit_event_proto_init() }
func file_nebius_audit_v2_audit_event_proto_init() {
	if File_nebius_audit_v2_audit_event_proto != nil {
		return
	}
	file_nebius_audit_v2_authentication_proto_init()
	file_nebius_audit_v2_authorization_proto_init()
	file_nebius_audit_v2_region_proto_init()
	file_nebius_audit_v2_request_proto_init()
	file_nebius_audit_v2_resource_proto_init()
	file_nebius_audit_v2_response_proto_init()
	file_nebius_audit_v2_service_proto_init()
	file_nebius_audit_v2_status_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_audit_v2_audit_event_proto_rawDesc), len(file_nebius_audit_v2_audit_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_audit_v2_audit_event_proto_goTypes,
		DependencyIndexes: file_nebius_audit_v2_audit_event_proto_depIdxs,
		MessageInfos:      file_nebius_audit_v2_audit_event_proto_msgTypes,
	}.Build()
	File_nebius_audit_v2_audit_event_proto = out.File
	file_nebius_audit_v2_audit_event_proto_goTypes = nil
	file_nebius_audit_v2_audit_event_proto_depIdxs = nil
}
