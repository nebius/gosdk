// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: nebius/audit/v2/authentication.proto

package v2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Authentication struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Answers the question whether or not the subject has been successfully authenticated.
	Authenticated bool `protobuf:"varint,1,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	// Contains information about the subject of the call.
	Subject *Subject `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Information on the federation within which the subject exists.
	Federation *Federation `protobuf:"bytes,3,opt,name=federation,proto3" json:"federation,omitempty"`
	// Describes the type of authentication.
	AuthenticationType AuthenticationType `protobuf:"varint,4,opt,name=authentication_type,json=authenticationType,proto3,enum=nebius.audit.v2.AuthenticationType" json:"authentication_type,omitempty"`
	// Types that are valid to be assigned to Credential:
	//
	//	*Authentication_TokenCredential
	//	*Authentication_StaticKeyCredential
	Credential    isAuthentication_Credential `protobuf_oneof:"credential"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authentication) Reset() {
	*x = Authentication{}
	mi := &file_nebius_audit_v2_authentication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication) ProtoMessage() {}

func (x *Authentication) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_audit_v2_authentication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication.ProtoReflect.Descriptor instead.
func (*Authentication) Descriptor() ([]byte, []int) {
	return file_nebius_audit_v2_authentication_proto_rawDescGZIP(), []int{0}
}

func (x *Authentication) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

func (x *Authentication) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Authentication) GetFederation() *Federation {
	if x != nil {
		return x.Federation
	}
	return nil
}

func (x *Authentication) GetAuthenticationType() AuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return AuthenticationType_AUTHENTICATION_TYPE_UNSPECIFIED
}

func (x *Authentication) GetCredential() isAuthentication_Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *Authentication) GetTokenCredential() *AccessToken {
	if x != nil {
		if x, ok := x.Credential.(*Authentication_TokenCredential); ok {
			return x.TokenCredential
		}
	}
	return nil
}

func (x *Authentication) GetStaticKeyCredential() *StaticKey {
	if x != nil {
		if x, ok := x.Credential.(*Authentication_StaticKeyCredential); ok {
			return x.StaticKeyCredential
		}
	}
	return nil
}

type isAuthentication_Credential interface {
	isAuthentication_Credential()
}

type Authentication_TokenCredential struct {
	// Information about token.
	TokenCredential *AccessToken `protobuf:"bytes,10,opt,name=token_credential,json=tokenCredential,proto3,oneof"`
}

type Authentication_StaticKeyCredential struct {
	// Information about static key.
	StaticKeyCredential *StaticKey `protobuf:"bytes,11,opt,name=static_key_credential,json=staticKeyCredential,proto3,oneof"`
}

func (*Authentication_TokenCredential) isAuthentication_Credential() {}

func (*Authentication_StaticKeyCredential) isAuthentication_Credential() {}

var File_nebius_audit_v2_authentication_proto protoreflect.FileDescriptor

var file_nebius_audit_v2_authentication_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76,
	0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x03, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49,
	0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x5e, 0x0a, 0x16, 0x61, 0x69, 0x2e,
	0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2e, 0x76, 0x32, 0x42, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67, 0x6f,
	0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_nebius_audit_v2_authentication_proto_rawDescOnce sync.Once
	file_nebius_audit_v2_authentication_proto_rawDescData []byte
)

func file_nebius_audit_v2_authentication_proto_rawDescGZIP() []byte {
	file_nebius_audit_v2_authentication_proto_rawDescOnce.Do(func() {
		file_nebius_audit_v2_authentication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nebius_audit_v2_authentication_proto_rawDesc), len(file_nebius_audit_v2_authentication_proto_rawDesc)))
	})
	return file_nebius_audit_v2_authentication_proto_rawDescData
}

var file_nebius_audit_v2_authentication_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_nebius_audit_v2_authentication_proto_goTypes = []any{
	(*Authentication)(nil),  // 0: nebius.audit.v2.Authentication
	(*Subject)(nil),         // 1: nebius.audit.v2.Subject
	(*Federation)(nil),      // 2: nebius.audit.v2.Federation
	(AuthenticationType)(0), // 3: nebius.audit.v2.AuthenticationType
	(*AccessToken)(nil),     // 4: nebius.audit.v2.AccessToken
	(*StaticKey)(nil),       // 5: nebius.audit.v2.StaticKey
}
var file_nebius_audit_v2_authentication_proto_depIdxs = []int32{
	1, // 0: nebius.audit.v2.Authentication.subject:type_name -> nebius.audit.v2.Subject
	2, // 1: nebius.audit.v2.Authentication.federation:type_name -> nebius.audit.v2.Federation
	3, // 2: nebius.audit.v2.Authentication.authentication_type:type_name -> nebius.audit.v2.AuthenticationType
	4, // 3: nebius.audit.v2.Authentication.token_credential:type_name -> nebius.audit.v2.AccessToken
	5, // 4: nebius.audit.v2.Authentication.static_key_credential:type_name -> nebius.audit.v2.StaticKey
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nebius_audit_v2_authentication_proto_init() }
func file_nebius_audit_v2_authentication_proto_init() {
	if File_nebius_audit_v2_authentication_proto != nil {
		return
	}
	file_nebius_audit_v2_access_token_proto_init()
	file_nebius_audit_v2_authentication_type_proto_init()
	file_nebius_audit_v2_federation_proto_init()
	file_nebius_audit_v2_static_key_proto_init()
	file_nebius_audit_v2_subject_proto_init()
	file_nebius_audit_v2_authentication_proto_msgTypes[0].OneofWrappers = []any{
		(*Authentication_TokenCredential)(nil),
		(*Authentication_StaticKeyCredential)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nebius_audit_v2_authentication_proto_rawDesc), len(file_nebius_audit_v2_authentication_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nebius_audit_v2_authentication_proto_goTypes,
		DependencyIndexes: file_nebius_audit_v2_authentication_proto_depIdxs,
		MessageInfos:      file_nebius_audit_v2_authentication_proto_msgTypes,
	}.Build()
	File_nebius_audit_v2_authentication_proto = out.File
	file_nebius_audit_v2_authentication_proto_goTypes = nil
	file_nebius_audit_v2_authentication_proto_depIdxs = nil
}
