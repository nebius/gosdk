// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.25.1
// source: nebius/annotations.proto

package nebius

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceBehavior int32

const (
	// The behavior of the resource is unspecified.
	// Avoid using this default value.
	ResourceBehavior_RESOURCE_BEHAVIOR_UNSPECIFIED ResourceBehavior = 0
	// Indicates that the resource can be moved to another parent, typically an
	// IAM container, though not necessarily limited to this.
	// This behavior suggests that the `metadata.parent_id` attribute could be modified.
	ResourceBehavior_MOVABLE ResourceBehavior = 1
	// Indicates that the resource name can be unspecified or does not follow
	// uniqueness requirement within parent_id and resource type.
	ResourceBehavior_UNNAMED ResourceBehavior = 2
	// Indicates that the resource is named, and the name cannot be changed after
	// it is created. It is strongly recommended to do srvices with renaming
	// capability, as the guidelines suggest.
	ResourceBehavior_IMMUTABLE_NAME ResourceBehavior = 3
)

// Enum value maps for ResourceBehavior.
var (
	ResourceBehavior_name = map[int32]string{
		0: "RESOURCE_BEHAVIOR_UNSPECIFIED",
		1: "MOVABLE",
		2: "UNNAMED",
		3: "IMMUTABLE_NAME",
	}
	ResourceBehavior_value = map[string]int32{
		"RESOURCE_BEHAVIOR_UNSPECIFIED": 0,
		"MOVABLE":                       1,
		"UNNAMED":                       2,
		"IMMUTABLE_NAME":                3,
	}
)

func (x ResourceBehavior) Enum() *ResourceBehavior {
	p := new(ResourceBehavior)
	*p = x
	return p
}

func (x ResourceBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_annotations_proto_enumTypes[0].Descriptor()
}

func (ResourceBehavior) Type() protoreflect.EnumType {
	return &file_nebius_annotations_proto_enumTypes[0]
}

func (x ResourceBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceBehavior.Descriptor instead.
func (ResourceBehavior) EnumDescriptor() ([]byte, []int) {
	return file_nebius_annotations_proto_rawDescGZIP(), []int{0}
}

type FieldBehavior int32

const (
	FieldBehavior_FIELD_BEHAVIOR_UNSPECIFIED FieldBehavior = 0
	// This indicates that the field can't be changed during a resource update.
	// Changing the field value will cause an `INVALID_ARGUMENT` error.
	// Resource recreate requires a change of the field value.
	FieldBehavior_IMMUTABLE FieldBehavior = 2
	// Indicates field is a resource ID, so it MUST be present on a resource
	// update, but MUST NOT be set on create.
	// Otherwise, RPC will fail with the `INVALID_ARGUMENT` error
	FieldBehavior_IDENTIFIER FieldBehavior = 3
	// Indicates field is not present in output.
	FieldBehavior_INPUT_ONLY FieldBehavior = 4
	// Indicates field can't be set on create or changed on update.
	// Otherwise, RPC will fail with the `INVALID_ARGUMENT` error
	FieldBehavior_OUTPUT_ONLY FieldBehavior = 5
	// Indicates that an empty message and a null have different semantics.
	// Usually, that field is a feature spec message: its empty message enables
	// that feature, and null disables it. Such a message is different from `bool`
	// because it already has some feature parameters, or they can be added later
	// in a backward-compatible way.
	// IMPORTANT: if the message itself is recursive, this behavior is forced.
	FieldBehavior_MEANINGFUL_EMPTY_VALUE FieldBehavior = 6
	// Indicates that an empty (default) value will be filled by the server.
	// Usually, that field is a feature spec value, which by default is computed.
	// Values marked with this annotation won't raise error if they are not set
	// and the returned value is not equal to protobuf default.
	//
	// IMPORTANT:
	// Updating this value from explicit to default may not lead to Update call in
	// some tools (eg Terraform).
	// Compound values (messages, lists and maps) may result in unpredictable
	// updates (see examples in guidelines).
	FieldBehavior_NON_EMPTY_DEFAULT FieldBehavior = 7
)

// Enum value maps for FieldBehavior.
var (
	FieldBehavior_name = map[int32]string{
		0: "FIELD_BEHAVIOR_UNSPECIFIED",
		2: "IMMUTABLE",
		3: "IDENTIFIER",
		4: "INPUT_ONLY",
		5: "OUTPUT_ONLY",
		6: "MEANINGFUL_EMPTY_VALUE",
		7: "NON_EMPTY_DEFAULT",
	}
	FieldBehavior_value = map[string]int32{
		"FIELD_BEHAVIOR_UNSPECIFIED": 0,
		"IMMUTABLE":                  2,
		"IDENTIFIER":                 3,
		"INPUT_ONLY":                 4,
		"OUTPUT_ONLY":                5,
		"MEANINGFUL_EMPTY_VALUE":     6,
		"NON_EMPTY_DEFAULT":          7,
	}
)

func (x FieldBehavior) Enum() *FieldBehavior {
	p := new(FieldBehavior)
	*p = x
	return p
}

func (x FieldBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_nebius_annotations_proto_enumTypes[1].Descriptor()
}

func (FieldBehavior) Type() protoreflect.EnumType {
	return &file_nebius_annotations_proto_enumTypes[1]
}

func (x FieldBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldBehavior.Descriptor instead.
func (FieldBehavior) EnumDescriptor() ([]byte, []int) {
	return file_nebius_annotations_proto_rawDescGZIP(), []int{1}
}

type RegionRouting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of fields to extract the NID from, in order of priority.
	// The API Gateway will check each field in sequence and use the first valid NID it finds.
	// This overrides the default NID lookup order: `id`, `parent_id`, `metadata.id`, `metadata.parent_id`.
	// If the field contains a non-empty list of strings, all NIDs in the array must be valid and have the same routing code.
	Nid []string `protobuf:"bytes,1,rep,name=nid,proto3" json:"nid,omitempty"`
	// If true, region routing is disabled for the method.
	// When this is set, requests will not be forwarded to a different region, even if an NID is present.
	Disabled bool `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// In strict mode, the API Gateway returns an INVALID_ARGUMENT error to the user when a routing error occurs,
	// rather than forwarding the request to the local region.
	Strict        bool `protobuf:"varint,3,opt,name=strict,proto3" json:"strict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionRouting) Reset() {
	*x = RegionRouting{}
	mi := &file_nebius_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionRouting) ProtoMessage() {}

func (x *RegionRouting) ProtoReflect() protoreflect.Message {
	mi := &file_nebius_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionRouting.ProtoReflect.Descriptor instead.
func (*RegionRouting) Descriptor() ([]byte, []int) {
	return file_nebius_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *RegionRouting) GetNid() []string {
	if x != nil {
		return x.Nid
	}
	return nil
}

func (x *RegionRouting) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *RegionRouting) GetStrict() bool {
	if x != nil {
		return x.Strict
	}
	return false
}

var file_nebius_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1191,
		Name:          "nebius.api_service_name",
		Tag:           "bytes,1191,opt,name=api_service_name",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*RegionRouting)(nil),
		Field:         50003,
		Name:          "nebius.region_routing",
		Tag:           "bytes,50003,opt,name=region_routing",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]ResourceBehavior)(nil),
		Field:         1191,
		Name:          "nebius.resource_behavior",
		Tag:           "varint,1191,rep,packed,name=resource_behavior,enum=nebius.ResourceBehavior",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]FieldBehavior)(nil),
		Field:         1191,
		Name:          "nebius.field_behavior",
		Tag:           "varint,1191,rep,packed,name=field_behavior,enum=nebius.FieldBehavior",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1192,
		Name:          "nebius.sensitive",
		Tag:           "varint,1192,opt,name=sensitive",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1193,
		Name:          "nebius.credentials",
		Tag:           "varint,1193,opt,name=credentials",
		Filename:      "nebius/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: ([]FieldBehavior)(nil),
		Field:         1191,
		Name:          "nebius.oneof_behavior",
		Tag:           "varint,1191,rep,packed,name=oneof_behavior,enum=nebius.FieldBehavior",
		Filename:      "nebius/annotations.proto",
	},
}

// Extension fields to descriptorpb.ServiceOptions.
var (
	// by default API tools assume that every service is configured with address
	//
	//	in a format: <first-part-after-nebius-in-grpc-path>.<domain>
	//	example: nebius.dns.v1alpha1.ZoneService => dns.<domain>
	//
	// this option is used to override the default behavior for private api domains
	//
	//	example for iam access: option (api_service_name) = "access-service.iam";
	//	that leads to access-service.iam.<domain>
	//
	// optional string api_service_name = 1191;
	E_ApiServiceName = &file_nebius_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// Defines custom region routing rules for a method.
	//
	// By default, the API Gateway searches for the NID in the following proto message fields (in order):
	//   - `id`
	//   - `parent_id`
	//   - `metadata.id`
	//   - `metadata.parent_id`
	//
	// If a valid NID is found, the request is routed to the associated region by routing code.
	// Otherwise, the request is routed to the local region.
	// These default rules generally cover most use cases.
	//
	// To customize the routing behavior, use the `region_routing` option:
	//   - To specify a custom field path(s) for the NID, use the `nid` field.
	//   - To return an INVALID_ARGUMENT error instead of forwarding to the local region, set `strict` to `true`.
	//   - To completely disable region routing, set `disabled` to `true`.
	//
	// Examples:
	//
	//	service MyService {
	//	  rpc DefaultRouting(Request) returns (Response);
	//	  rpc CustomRoutingField(Request) returns (Response) {
	//	    option (region_routing).nid = "path.to.resource_id";
	//	  };
	//	  rpc SeveralFieldsToSearch(Request) returns (Response) {
	//	    option (region_routing).nid = "path.to.resource_id";
	//	    option (region_routing).nid = "path.to.parent_id";
	//	    option (region_routing).strict = true;
	//	  };
	//	  rpc DisabledRouting(Request) returns (Response) {
	//	    option (region_routing).disabled = true;
	//	  };
	//	}
	//
	// optional nebius.RegionRouting region_routing = 50003;
	E_RegionRouting = &file_nebius_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// repeated nebius.ResourceBehavior resource_behavior = 1191;
	E_ResourceBehavior = &file_nebius_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// Field behavior describes how the field behaves on input or output.
	//
	// repeated nebius.FieldBehavior field_behavior = 1191;
	E_FieldBehavior = &file_nebius_annotations_proto_extTypes[3]
	// Sensitive field is masked/removed from the message while logging, storing in DB and
	// on all others persistent layers (except specialized storage like PDS).
	//
	// optional bool sensitive = 1192;
	E_Sensitive = &file_nebius_annotations_proto_extTypes[4]
	// Credentials field is masked access tokens/jwt/session from the message while logging, storing in DB and
	// on all others persistent layers
	//
	// optional bool credentials = 1193;
	E_Credentials = &file_nebius_annotations_proto_extTypes[5]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// Field behavior describes how oneof behaves on input or output.
	//
	// repeated nebius.FieldBehavior oneof_behavior = 1191;
	E_OneofBehavior = &file_nebius_annotations_proto_extTypes[6]
)

var File_nebius_annotations_proto protoreflect.FileDescriptor

var file_nebius_annotations_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6e, 0x65, 0x62, 0x69,
	0x75, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x2a, 0x63, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12,
	0x21, 0x0a, 0x1d, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41,
	0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x56, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x4d, 0x4d, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03,
	0x2a, 0xa2, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41,
	0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x4d, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59,
	0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x41, 0x4e, 0x49, 0x4e, 0x47, 0x46, 0x55, 0x4c,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x06, 0x12, 0x15,
	0x0a, 0x11, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x10, 0x07, 0x3a, 0x4a, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa7, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x3a, 0x5e, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65,
	0x62, 0x69, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x3a, 0x67, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa7, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x3a, 0x5c, 0x0a, 0x0e, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa7, 0x09, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x3a, 0x3c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa8, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x3a, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa9, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x3a, 0x5c, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa7, 0x09, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x42, 0x49, 0x0a, 0x0d, 0x61, 0x69, 0x2e, 0x6e, 0x65, 0x62,
	0x69, 0x75, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x42, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75, 0x73, 0x2f, 0x67,
	0x6f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x62, 0x69, 0x75,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nebius_annotations_proto_rawDescOnce sync.Once
	file_nebius_annotations_proto_rawDescData = file_nebius_annotations_proto_rawDesc
)

func file_nebius_annotations_proto_rawDescGZIP() []byte {
	file_nebius_annotations_proto_rawDescOnce.Do(func() {
		file_nebius_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_nebius_annotations_proto_rawDescData)
	})
	return file_nebius_annotations_proto_rawDescData
}

var file_nebius_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nebius_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_nebius_annotations_proto_goTypes = []any{
	(ResourceBehavior)(0),               // 0: nebius.ResourceBehavior
	(FieldBehavior)(0),                  // 1: nebius.FieldBehavior
	(*RegionRouting)(nil),               // 2: nebius.RegionRouting
	(*descriptorpb.ServiceOptions)(nil), // 3: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 4: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil), // 5: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 6: google.protobuf.FieldOptions
	(*descriptorpb.OneofOptions)(nil),   // 7: google.protobuf.OneofOptions
}
var file_nebius_annotations_proto_depIdxs = []int32{
	3,  // 0: nebius.api_service_name:extendee -> google.protobuf.ServiceOptions
	4,  // 1: nebius.region_routing:extendee -> google.protobuf.MethodOptions
	5,  // 2: nebius.resource_behavior:extendee -> google.protobuf.MessageOptions
	6,  // 3: nebius.field_behavior:extendee -> google.protobuf.FieldOptions
	6,  // 4: nebius.sensitive:extendee -> google.protobuf.FieldOptions
	6,  // 5: nebius.credentials:extendee -> google.protobuf.FieldOptions
	7,  // 6: nebius.oneof_behavior:extendee -> google.protobuf.OneofOptions
	2,  // 7: nebius.region_routing:type_name -> nebius.RegionRouting
	0,  // 8: nebius.resource_behavior:type_name -> nebius.ResourceBehavior
	1,  // 9: nebius.field_behavior:type_name -> nebius.FieldBehavior
	1,  // 10: nebius.oneof_behavior:type_name -> nebius.FieldBehavior
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	7,  // [7:11] is the sub-list for extension type_name
	0,  // [0:7] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_nebius_annotations_proto_init() }
func file_nebius_annotations_proto_init() {
	if File_nebius_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nebius_annotations_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 7,
			NumServices:   0,
		},
		GoTypes:           file_nebius_annotations_proto_goTypes,
		DependencyIndexes: file_nebius_annotations_proto_depIdxs,
		EnumInfos:         file_nebius_annotations_proto_enumTypes,
		MessageInfos:      file_nebius_annotations_proto_msgTypes,
		ExtensionInfos:    file_nebius_annotations_proto_extTypes,
	}.Build()
	File_nebius_annotations_proto = out.File
	file_nebius_annotations_proto_rawDesc = nil
	file_nebius_annotations_proto_goTypes = nil
	file_nebius_annotations_proto_depIdxs = nil
}
