// Code generated by MockGen. DO NOT EDIT.
// Source: services/nebius/iam/v1/profile_service.sdk.go
//
// Generated by this command:
//
//	mockgen -source services/nebius/iam/v1/profile_service.sdk.go -package v1 -typed
//

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	v1 "github.com/nebius/gosdk/proto/nebius/iam/v1"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockProfileService is a mock of ProfileService interface.
type MockProfileService struct {
	ctrl     *gomock.Controller
	recorder *MockProfileServiceMockRecorder
}

// MockProfileServiceMockRecorder is the mock recorder for MockProfileService.
type MockProfileServiceMockRecorder struct {
	mock *MockProfileService
}

// NewMockProfileService creates a new mock instance.
func NewMockProfileService(ctrl *gomock.Controller) *MockProfileService {
	mock := &MockProfileService{ctrl: ctrl}
	mock.recorder = &MockProfileServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileService) EXPECT() *MockProfileServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockProfileService) Get(arg0 context.Context, arg1 *v1.GetProfileRequest, arg2 ...grpc.CallOption) (*v1.GetProfileResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Get", varargs...)
	ret0, _ := ret[0].(*v1.GetProfileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockProfileServiceMockRecorder) Get(arg0, arg1 any, arg2 ...any) *MockProfileServiceGetCall {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0, arg1}, arg2...)
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockProfileService)(nil).Get), varargs...)
	return &MockProfileServiceGetCall{Call: call}
}

// MockProfileServiceGetCall wrap *gomock.Call
type MockProfileServiceGetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProfileServiceGetCall) Return(arg0 *v1.GetProfileResponse, arg1 error) *MockProfileServiceGetCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProfileServiceGetCall) Do(f func(context.Context, *v1.GetProfileRequest, ...grpc.CallOption) (*v1.GetProfileResponse, error)) *MockProfileServiceGetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProfileServiceGetCall) DoAndReturn(f func(context.Context, *v1.GetProfileRequest, ...grpc.CallOption) (*v1.GetProfileResponse, error)) *MockProfileServiceGetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
